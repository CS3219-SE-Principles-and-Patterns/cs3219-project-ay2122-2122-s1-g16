id,title,content,difficulty
1,3Sum,"Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0?Find all unique triplets in the array which gives the sum of zero.
 Note:
 Elements in a triplet (a,b,c) must be in non-descending order. (ie, a â‰¤ b â‰¤ c)The solution set must not contain duplicate triplets.
 For example, given array S = {-1 0 1 2 -1 -4},
 A solution set is:(-1, 0, 1)(-1, -1, 2)",2
2,3SumClosest,"Given an array S of n integers, find three integers in S such that the sum isclosest to a given number, target. Return the sum of the three integers.You may assume that each input would have exactly one solution.
 For example, given array S = {-1 2 1 -4}, and target = 1.
 The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).",1
3,4Sum,"Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target?Find all unique quadruplets in the array which gives the sum of target.
 Note:
 Elements in a quadruplet (a,b,c,d) must be in non-descending order. (ie, a â‰¤ b â‰¤ c â‰¤ d)The solution set must not contain duplicate quadruplets.
 For example, given array S = {1 0 -1 0 -2 2}, and target = 0.
 A solution set is:(-1, 0, 0, 1)(-2, -1, 1, 2)(-2, 0, 0, 2)",1
4,AccountsMerge,"Given a list accounts, each element accounts[i] is a list of strings, where the first elementaccounts[i][0] is a name, and the rest of the elements are emails representing emails of theaccount.
 Now, we would like to merge these accounts. Two accounts definitely belong to the same person ifthere is some email that is common to both accounts. Note that even if two accounts have the samename, they may belong to different people as people could have the same name. A person can haveany number of accounts initially, but all of their accounts definitely have the same name.
 After merging the accounts, return the accounts in the following format: the first element of eachaccount is the name, and the rest of the elements are emails in sorted order. The accountsthemselves can be returned in any order.
 Example 1:
 Input:accounts = [[""John"", ""johnsmith@mail.com"", ""john00@mail.com""], [""John"", ""johnnybravo@mail.com""],[""John"", ""johnsmith@mail.com"", ""john_newyork@mail.com""], [""Mary"", ""mary@mail.com""]]Output: [[""John"", 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com'], [""John"",""johnnybravo@mail.com""], [""Mary"", ""mary@mail.com""]]
 Explanation:The first and third John's are the same person as they have the common email ""johnsmith@mail.com"".The second John and Mary are different people as none of their email addresses are used by otheraccounts.
 We could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'],['John', 'johnnybravo@mail.com'],['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.
 Note:The length of accounts will be in the range [1, 1000].The length of accounts[i] will be in the range [1, 10].The length of accounts[i][j] will be in the range [1, 30].",1
5,AddAndSearchWord,"Design a data structure that supports the following two operations:
 void addWord(word)bool search(word)
 search(word) can search a literal word or a regular expression string containing only letters `a-z` or `.`A `.` means it can represent any one letter.
 For example:
 addWord(""bad"")addWord(""dad"")addWord(""mad"")search(""pad"") -> falsesearch(""bad"") -> truesearch("".ad"") -> truesearch(""b.."") -> true
 Note:You may assume that all words are consist of lowercase letters a-z.
 click to show hint.
 You should be familiar with how a Trie works. If not, please work on this problem: Implement Trie (Prefix Tree) first.",1
6,addBinary,"Given two binary strings, return their sum (also a binary string).
 For example,a = ""11""b = ""1""Return ""100"".",0
7,addDigits,"Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.
 For example:Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.
 Follow up:Could you do it without any loop/recursion in O(1) runtime?",0
8,AdditiveNumber,"Additive number is a positive integer whose digits can form additive sequence.
 A valid additive sequence should contain at least three numbers. Except for thefirst two numbers, each subsequent number in the sequence must be the sum of thepreceding two.
 For example:""112358"" is an additive number because the digits can form an additive sequence: 1,1, 2, 3, 5, 8.1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8""199100199"" is also an additive number, the additive sequence is: 1, 99, 100, 199.1 + 99 = 100, 99 + 100 = 199
 Note: Numbers in the additive sequence cannot have leading zeros, so sequence 1, 2,03 or 1, 02, 3 is invalid.
 Given a string represents an integer, write a function to determine if it's anadditive number.
 Follow up:How would you handle overflow for very large input integers?
 Credits:Special thanks to @jeantimex for adding this problem and creating all testcases.",0
9,AddStrings,"Given two non-negative numbers num1 and num2 represented as string, return the sumof num1 and num2.
 Note:
 The length of both num1 and num2 isBoth num1 and num2 contains only digits 0-9.Both num1 and num2 does not contain any leading zero.You must not use any built-in BigInteger library or convert the inputs to integerdirectly.",0
10,AddToArrayFormOfInteger,"For a non-negative integer X, the array-form of X is an array of its digits in left to right order.For example, if X = 1231, then the array form is [1,2,3,1].
 Given the array-form A of a non-negative integer X, return the array-form of the integer X+K.
 Example 1:
 Input: A = [1,2,0,0], K = 34Output: [1,2,3,4]Explanation: 1200 + 34 = 1234
 Example 2:
 Input: A = [2,7,4], K = 181Output: [4,5,5]Explanation: 274 + 181 = 455
 Example 3:
 Input: A = [2,1,5], K = 806Output: [1,0,2,1]Explanation: 215 + 806 = 1021
 Example 4:
 Input: A = [9,9,9,9,9,9,9,9,9,9], K = 1Output: [1,0,0,0,0,0,0,0,0,0,0]Explanation: 9999999999 + 1 = 10000000000
 Noteï¼š
 1 <= A.length <= 100000 <= A[i] <= 90 <= K <= 10000If A.length > 1, then A[0] != 0",0
11,addTwoNumbers,"You are given two linked lists representing two non-negative numbers.The digits are stored in reverse order and each of their nodes contain a single digit.Add the two numbers and return it as a linked list.
 Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)Output: 7 -> 0 -> 8",0
12,GroupAnagrams,"Given an array of strings, group anagrams together.
 For example, given: [""eat"", ""tea"", ""tan"", ""ate"", ""nat"", ""bat""],Return:
 [[""ate"", ""eat"",""tea""],[""nat"",""tan""],[""bat""]]
 Note:
 For the return value, each inner list's elements must follow the lexicographic order.All inputs will be in lower-case.
 Update (2015-08-09):The signature of the function had been updated to return list<list<string>> insteadof list<string>, as suggested here. If you still see your function signature returna list<string>, please click the reload button to reset your code definition.",0
13,ValidAnagram,"Given two strings s and t, write a function to determine if t is an anagram of s.
 For example,s = ""anagram"", t = ""nagaram"", return true.s = ""rat"", t = ""car"", return false.
 Note:You may assume the string contains only lowercase alphabets.",0
14,ArithmeticSlices,"A sequence of number is called arithmetic if it consists of at least three elementsand if the difference between any two consecutive elements is the same.
 For example, these are arithmetic sequence:1, 3, 5, 7, 97, 7, 7, 73, -1, -5, -9
 The following sequence is not arithmetic. 1, 1, 2, 5, 7
 A zero-indexed array A consisting of N numbers is given. A slice of that array isany pair of integers (P, Q) such that 0
 A slice (P, Q) of array A is called arithmetic if the sequence:A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this meansthat P + 1
 The function should return the number of arithmetic slices in the array A.
 Example:
 A = [1, 2, 3, 4]
 return: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4]itself.",0
15,BackspaceStringCompare,"Given two strings S and T, return if they are equal when both are typed into emptytext editors. # means a backspace character.
 
 Example 1:
 
 Input: S = ""ab#c"", T = ""ad#c""Output: trueExplanation: Both S and T become ""ac"".
 
 
 Example 2:
 
 Input: S = ""ab##"", T = ""c#d#""Output: trueExplanation: Both S and T become """".
 
 
 Example 3:
 
 Input: S = ""a##c"", T = ""#a#c""Output: trueExplanation: Both S and T become ""c"".
 
 
 Example 4:
 
 Input: S = ""a#c"", T = ""b""Output: falseExplanation: S becomes ""c"" while T becomes ""b"".
 
 Note:
 
 1 <= S.length <= 2001 <= T.length <= 200S and T only contain lowercase letters and '#' characters.
 
 Follow up:
 
 Can you solve it in O(N) time and O(1) space?",0
16,balancedBinaryTree,"Given a binary tree, determine if it is height-balanced.
 For this problem, a height-balanced binary tree is defined as a binary tree in whichthe depth of the two subtrees of every node never differ by more than 1.",0
17,BasicCalculator,"Implement a basic calculator to evaluate a simple expression string.
 The expression string may contain open ( and closing parentheses ), the plus + or minus sign -,non-negative integers and empty spaces .
 You may assume that the given expression is always valid.
 Some examples:
 ""1 + 1"" = 2"" 2-1 + 2 "" = 3""(1+(4+5+2)-3)+(6+8)"" = 23
 Note: Do not use the eval built-in library function.",2
18,BasicCalculator.II,"Implement a basic calculator to evaluate a simple expression string.
 The expression string contains only non-negative integers, +, -, *, / operators and empty spaces .The integer division should truncate toward zero.
 You may assume that the given expression is always valid.
 Some examples:
 ""3+2*2"" = 7"" 3/2 "" = 1"" 3+5 / 2 "" = 5
 Note: Do not use the eval built-in library function.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",1
19,bestTimeToBuyAndSellStock,"Say you have an array for which the ith element is the price of a given stock on day i.
 If you were only permitted to complete at most one transaction (i.e., buy one and sell one share ofthe stock), design an algorithm to find the maximum profit.
 Note that you cannot sell a stock before you buy one.
 Example 1:
 Input: [7,1,5,3,6,4]Output: 5Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.Not 7-1 = 6, as selling price needs to be larger than buying price.
 Example 2:
 Input: [7,6,4,3,1]Output: 0Explanation: In this case, no transaction is done, i.e. max profit = 0.",0
20,bestTimeToBuyAndSellStock.II,"Say you have an array for which the ith element is the price of a given stock on day i.
 Design an algorithm to find the maximum profit. You may complete as many transactions as you like(i.e., buy one and sell one share of the stock multiple times).
 Note: You may not engage in multiple transactions at the same time (i.e., you must sell the stockbefore you buy again).
 Example 1:
 Input: [7,1,5,3,6,4]Output: 7Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.
 Example 2:
 Input: [1,2,3,4,5]Output: 4Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.Note that you cannot buy on day 1, buy on day 2 and sell them later, as you areengaging multiple transactions at the same time. You must sell before buying again.
 Example 3:
 Input: [7,6,4,3,1]Output: 0Explanation: In this case, no transaction is done, i.e. max profit = 0.",0
21,bestTimeToBuyAndSellStock.III,"Say you have an array for which the ith element is the price of a given stock on day i.
 Design an algorithm to find the maximum profit. You may complete at most two transactions.
 Note: You may not engage in multiple transactions at the same time (i.e., you must sell the stockbefore you buy again).
 Example 1:
 Input: [3,3,5,0,0,3,1,4]Output: 6Explanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.
 Example 2:
 Input: [1,2,3,4,5]Output: 4Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.Note that you cannot buy on day 1, buy on day 2 and sell them later, as you areengaging multiple transactions at the same time. You must sell before buying again.
 Example 3:
 Input: [7,6,4,3,1]Output: 0Explanation: In this case, no transaction is done, i.e. max profit = 0.",0
22,bestTimeToBuyAndSellStock.IV,"Say you have an array for which the ith element is the price of a given stock on day i.
 Design an algorithm to find the maximum profit. You may complete at most k transactions.
 Note:You may not engage in multiple transactions at the same time (ie, you must sell the stock beforeyou buy again).
 Example 1:
 Input: [2,4,1], k = 2Output: 2Explanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.
 Example 2:
 Input: [3,2,6,5,0,3], k = 2Output: 7Explanation: Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4.Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.",1
23,BestTimeToBuyAndSellStockWithCooldown,"Say you have an array for which the ith element is the price of a given stock on day i.
 Design an algorithm to find the maximum profit. You may complete as many transactions as you like(ie, buy one and sell one share of the stock multiple times) with the following restrictions:
 You may not engage in multiple transactions at the same time (ie, you must sell the stockbefore you buy again).After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)
 Example:
 Input: [1,2,3,0,2]Output: 3Explanation: transactions = [buy, sell, cooldown, buy, sell]",0
24,BestTimeToBuyAndSellStockWithTransactionFee,"Your are given an array of integers prices, for which the i-th element is the price of a givenstock on day i; and a non-negative integer fee representing a transaction fee.
 You may complete as many transactions as you like, but you need to pay the transaction fee for eachtransaction. You may not buy more than 1 share of a stock at a time (ie. you must sell the stockshare before you buy again.)
 Return the maximum profit you can make.
 Example 1:
 Input: prices = [1, 3, 2, 8, 4, 9], fee = 2Output: 8
 Explanation: The maximum profit can be achieved by:Buying at prices[0] = 1Selling at prices[3] = 8Buying at prices[4] = 4Selling at prices[5] = 9Thetotal profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.
 Note:0 < prices.length <= 50000.0 < prices[i] < 50000.0 <= fee < 50000.",2
25,binarySearchTreeIterator,"Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.
 Calling next() will return the next smallest number in the BST.
 Note: next() and hasNext() should run in average O(1) time and uses O(h) memory, where h is the height of the tree.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
26,binaryTreeInorderTraversal,"Given a binary tree, return the inorder traversal of its nodes' values.
 For example:Given binary tree {1,#,2,3},
 1\2/3
 return [1,3,2].
 Note: Recursive solution is trivial, could you do it iteratively?
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",0
27,binaryTreeLevelOrderTraversal,"Given a binary tree, return the level order traversal of its nodes' values.(ie, from left to right, level by level).
 For example:Given binary tree {3,9,20,#,#,15,7},
 3/ \9 20/ \15 7
 return its level order traversal as:
 [[3],[9,20],[15,7]]
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",2
28,binaryTreeLevelOrderTraversal.II,"Given a binary tree, return the bottom-up level order traversal of its nodes' values.(ie, from left to right, level by level from leaf to root).
 For example:Given binary tree {3,9,20,#,#,15,7},
 3/ \9 20/ \15 7
 return its bottom-up level order traversal as:
 [[15,7],[9,20],[3]]
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",1
29,binaryTreeMaximumPathSum,"Given a binary tree, find the maximum path sum.
 The path may start and end at any node in the tree.
 For example:Given the below binary tree,
 1/ \2 3
 Return 6.",0
30,binaryTreePaths,"Given a binary tree, return all root-to-leaf paths.
 For example, given the following binary tree:
 1/ \2 3\5
 All root-to-leaf paths are:[""1->2->5"", ""1->3""]
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all testcases.",0
31,binaryTreePostorderTraversal,"Given a binary tree, return the postorder traversal of its nodes' values.
 For example:Given binary tree {1,#,2,3},
 1\2/3
 return [3,2,1].
 Note: Recursive solution is trivial, could you do it iteratively?",1
32,binaryTreePreorderTraversal,"Given a binary tree, return the preorder traversal of its nodes' values.
 For example:Given binary tree {1,#,2,3},
 1\2/3
 return [1,2,3].
 Note: Recursive solution is trivial, could you do it iteratively?",1
33,binaryTreeRightSideView,"Given a binary tree, imagine yourself standing on the right side of it, returnthe values of the nodes you can see ordered from top to bottom.
 For example:Given the following binary tree,
 1 <---/ \2 3 <---\ \5 4 <---
 You should return [1, 3, 4].
 Credits:Special thanks to @amrsaqr for adding this problem and creating all test cases.",0
34,binaryTreeUpsideDown,"Given a binary tree where all the right nodes are either leaf nodes witha sibling (a left node that shares the same parent node) or empty,
 Flip it upside down and turn it into a tree where the original right nodes turned into left leaf nodes.Return the new root.
 For example:Given a binary tree {1,2,3,4,5},1/ \2 3/ \4 5return the root of the binary tree [4,5,2,#,#,3,1].4/ \5 2/ \3 1confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.",0
35,binaryTreeZigzagLevelOrderTraversal,"Given a binary tree, return the zigzag level order traversal of its nodes' values.(ie, from left to right, then right to left for the next level and alternate between).
 For example:Given binary tree {3,9,20,#,#,15,7},
 3/ \9 20/ \15 7
 return its zigzag level order traversal as:
 [[3],[20,9],[15,7]]
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal,where '#' signifies a path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",2
36,BinaryWatch,"A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6LEDs on the bottom represent the minutes (0-59).Each LED represents a zero or one, with the least significant bit on the right.
 For example, the above binary watch reads ""3:25"".
 Given a non-negative integer n which represents the number of LEDs that arecurrently on, return all possible times the watch could represent.
 Example:Input: n = 1Return: [""1:00"", ""2:00"", ""4:00"", ""8:00"", ""0:01"", ""0:02"", ""0:04"", ""0:08"",""0:16"", ""0:32""]
 Note:
 The order of output does not matter.The hour must not contain a leading zero, for example ""01:00"" is not valid, itshould be ""1:00"".The minute must be consist of two digits and may contain a leading zero, for example""10:2"" is not valid, it should be ""10:02"".",1
37,BitwiseAndOfNumbersRange,"Given a range [m, n] where 0
 For example, given the range [5, 7], you should return 4.
 Credits:Special thanks to @amrsaqr for adding this problem and creating all test cases.",0
38,BrokenCalculator,"On a broken calculator that has a number showing on its display, we can perform two operations:
 Double: Multiply the number on the display by 2, or;Decrement: Subtract 1 from the number on the display.
 Initially, the calculator is displaying the number X.
 Return the minimum number of operations needed to display the number Y.
 Example 1:
 Input: X = 2, Y = 3Output: 2Explanation: Use double operation and then decrement operation {2 -> 4 -> 3}.
 Example 2:
 Input: X = 5, Y = 8Output: 2Explanation: Use decrement and then double {5 -> 4 -> 8}.
 Example 3:
 Input: X = 3, Y = 10Output: 3Explanation: Use double, decrement and double {3 -> 6 -> 5 -> 10}.
 Example 4:
 Input: X = 1024, Y = 1Output: 1023Explanation: Use decrement operations 1023 times.
 Note:
 1 <= X <= 10^91 <= Y <= 10^9",0
39,BuddyStrings,"Given two strings A and B of lowercase letters, return true if and only if we canswap two letters in A so that the result equals B.
 
 
 Example 1:
 
 
 Input: A = ""ab"", B = ""ba""Output: true
 
 
 Example 2:
 
 Input: A = ""ab"", B = ""ab""Output: false
 
 
 Example 3:
 
 Input: A = ""aa"", B = ""aa""Output: true
 
 
 Example 4:
 
 Input: A = ""aaaaaaabc"", B = ""aaaaaaacb""Output: true
 
 
 Example 5:
 
 Input: A = """", B = ""aa""Output: false
 
 
 
 Note:
 
 0 <= A.length <= 200000 <= B.length <= 20000A and B consist only of lowercase letters.",0
40,BuildingBoxes,"You have a cubic storeroom where the width, length, and height of the room are all equal to nunits. You are asked to place n boxes in this room where each box is a cube of unit side length.There are however some rules to placing the boxes:
 You can place the boxes anywhere on the floor.If box x is placed on top of the box y, then each side of the four vertical sides of thebox y must either be adjacent to another box or to a wall.
 Given an integer n, return the minimum possible number of boxes touching the floor.
 Example 1:
 Input: n = 3Output: 3Explanation: The figure above is for the placement of the three boxes.These boxes are placed in the corner of the room, where the corner is on the left side.
 Example 2:
 Input: n = 4Output: 3Explanation: The figure above is for the placement of the four boxes.These boxes are placed in the corner of the room, where the corner is on the left side.
 Example 3:
 Input: n = 10Output: 6Explanation: The figure above is for the placement of the ten boxes.These boxes are placed in the corner of the room, where the corner is on the back side.
 Constraints:
 1 <= n <= 10^9",1
41,bulbSwitcher,"There are n bulbs that are initially off. You first turn on all the bulbs. Then, youturn off every second bulb. On the third round, you toggle every third bulb (turningon if it's off or turning off if it's on). For the nth round, you only toggle thelast bulb. Find how many bulbs are on after n rounds.
 Example:
 Given n = 3.
 At first, the three bulbs are [off, off, off].After first round, the three bulbs are [on, on, on].After second round, the three bulbs are [on, off, on].After third round, the three bulbs are [on, off, off].
 So you should return 1, because there is only one bulb is on.",0
42,BulbSwitcher.II,"There is a room with n lights which are turned on initially and 4 buttons on the wall. Afterperforming exactly m unknown operations towards buttons, you need to return how many differentkinds of status of the n lights could be.
 Suppose n lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are givenbelow:
 Flip all the lights.Flip lights with even numbers.Flip lights with odd numbers.Flip lights with (3k + 1) numbers, k = 0, 1, 2, ...
 Example 1:
 Input: n = 1, m = 1.Output: 2Explanation: Status can be: [on], [off]
 Example 2:
 Input: n = 2, m = 1.Output: 3Explanation: Status can be: [on, off], [off, on], [off, off]
 Example 3:
 Input: n = 3, m = 1.Output: 4Explanation: Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].
 Note: n and m both fit in range [0, 1000].",0
43,BulbSwitcher.III,"There is a room with n bulbs, numbered from 1 to n, arranged in a row from left to right.Initially, all the bulbs are turned off.
 At moment k (for k from 0 to n - 1), we turn on the light[k] bulb. A bulb change color to blue onlyif it is on and all the previous bulbs (to the left) are turned on too.
 Return the number of moments in which all turned on bulbs are blue.
 Example 1:
 Input: light = [2,1,3,5,4]Output: 3Explanation: All bulbs turned on, are blue at the moment 1, 2 and 4.
 Example 2:
 Input: light = [3,2,4,1,5]Output: 2Explanation: All bulbs turned on, are blue at the moment 3, and 4 (index-0).
 Example 3:
 Input: light = [4,1,2,3]Output: 1Explanation: All bulbs turned on, are blue at the moment 3 (index-0).Bulb 4th changes to blue at the moment 3.
 Example 4:
 Input: light = [2,1,4,3,6,5]Output: 3
 Example 5:
 Input: light = [1,2,3,4,5,6]Output: 6
 Constraints:
 n == light.length1 <= n <= 5 * 10^4light is a permutation of [1, 2, ..., n]",0
44,BulbSwitcher.IV,"There is a room with n bulbs, numbered from 0 to n-1, arranged in a row from left to right.Initially all the bulbs are turned off.
 Your task is to obtain the configuration represented by target where target[i] is '1' if the i-thbulb is turned on and is '0' if it is turned off.
 You have a switch to flip the state of the bulb, a flip operation is defined as follows:
 Choose any bulb (index i) of your current configuration.Flip each bulb from index i to n-1.
 When any bulb is flipped it means that if it is 0 it changes to 1 and if it is 1 it changes to 0.
 Return the minimum number of flips required to form target.
 Example 1:
 Input: target = ""10111""Output: 3Explanation: Initial configuration ""00000"".flip from the third bulb: ""00000"" -> ""00111""flip from the first bulb: ""00111"" -> ""11000""flip from the second bulb: ""11000"" -> ""10111""We need at least 3 flip operations to form target.
 Example 2:
 Input: target = ""101""Output: 3Explanation: ""000"" -> ""111"" -> ""100"" -> ""101"".
 Example 3:
 Input: target = ""00000""Output: 0
 Example 4:
 Input: target = ""001011101""Output: 5
 Constraints:
 1 <= target.length <= 10^5target[i] == '0' or target[i] == '1'",0
45,bullsAndCows,"You are playing the following Bulls and Cows game with your friend: You write a4-digit secret number and ask your friend to guess it. Each time your friend guessesa number, you give a hint. The hint tells your friend how many digits are in thecorrect positions (called ""bulls"") and how many digits are in the wrong positions(called ""cows""). Your friend will use those hints to find out the secret number.
 For example:
 Secret number: ""1807""Friend's guess: ""7810""Hint: 1 bull and 3 cows. (The bull is 8, the cows are 0, 1 and 7.)Write a function to return a hint according to the secret number and friend's guess,use A to indicate the bulls and B to indicate the cows. In the above example, yourfunction should return ""1A3B"".
 Please note that both secret number and friend's guess may contain duplicate digits,for example:
 Secret number: ""1123""Friend's guess: ""0111""In this case, the 1st 1 in friend's guess is a bull, the 2nd or 3rd 1 is a cow, andyour function should return ""1A1B"".You may assume that the secret number and your friend's guess only contain digits,and their lengths are always equal.
 Credits:Special thanks to @jeantimex for adding this problem and creating all test cases.",0
46,BurstBalloons,"Given n balloons, indexed from 0 to n-1. Each balloon is painted with anumber on it represented by array nums.
 You are asked to burst all the balloons. If the you burstballoon i you will get nums[left] * nums[i] * nums[right] coins. Here leftand right are adjacent indices of i. After the burst, the left and rightthen becomes adjacent.
 Find the maximum coins you can collect by bursting the balloons wisely.
 Note:(1) You may imagine nums[-1] = nums[n] = 1. They are not real therefore you cannot burst them.(2) 0 â‰¤ n â‰¤ 500, 0 â‰¤ nums[i] â‰¤ 100
 Example:
 Given [3, 1, 5, 8]
 Return 167
 nums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []coins = 3*1*5 + 3*5*8 + 1*3*8 + 1*8*1 = 167
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
47,CalculateMoneyInLeetcodeBank,"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.
 He starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will putin $1 more than the day before. On every subsequent Monday, he will put in $1 more than theprevious Monday.
 Given n, return the total amount of money he will have in the Leetcode bank at the end of the n^thday.
 Example 1:
 Input: n = 4Output: 10Explanation: After the 4^th day, the total is 1 + 2 + 3 + 4 = 10.
 Example 2:
 Input: n = 10Output: 37Explanation: After the 10^th day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4) = 37.Notice that on the 2^nd Monday, Hercy only puts in $2.
 Example 3:
 Input: n = 20Output: 96Explanation: After the 20^th day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4 + 5 + 6 + 7+ 8) + (3 + 4 + 5 + 6 + 7 + 8) = 96.
 Constraints:
 1 <= n <= 1000",0
48,candy,"There are N children standing in a line. Each child is assigned a rating value.
 You are giving candies to these children subjected to the following requirements:
 Each child must have at least one candy.Children with a higher rating get more candies than their neighbors.
 What is the minimum candies you must give?",1
49,CheckIfArrayIsSortedAndRotated,"Given an array nums, return true if the array was originally sorted in non-decreasing order, thenrotated some number of positions (including zero). Otherwise, return false.
 There may be duplicates in the original array.
 Note: An array A rotated by x positions results in an array B of the same length such that A[i] ==B[(i+x) % A.length], where % is the modulo operation.
 Example 1:
 Input: nums = [3,4,5,1,2]Output: trueExplanation: [1,2,3,4,5] is the original sorted array.You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].
 Example 2:
 Input: nums = [2,1,3,4]Output: falseExplanation: There is no sorted array once rotated that can make nums.
 Example 3:
 Input: nums = [1,2,3]Output: trueExplanation: [1,2,3] is the original sorted array.You can rotate the array by x = 0 positions (i.e. no rotation) to make nums.
 Example 4:
 Input: nums = [1,1,1]Output: trueExplanation: [1,1,1] is the original sorted array.You can rotate any number of positions to make nums.
 Example 5:
 Input: nums = [2,1]Output: trueExplanation: [1,2] is the original sorted array.You can rotate the array by x = 5 positions to begin on the element of value 2: [2,1].
 Constraints:
 1 <= nums.length <= 1001 <= nums[i] <= 100",0
50,CheckIfBinaryStringHasAtMostOneSegmentOfOnes,"Given a binary string s without leading zeros, return true if s contains at most onecontiguous segment of ones. Otherwise, return false.
 Example 1:
 Input: s = ""1001""Output: falseExplanation: The ones do not form a contiguous segment.
 Example 2:
 Input: s = ""110""Output: true
 Constraints:
 1 <= s.length <= 100s[i] is either '0' or '1'.s[0] is '1'.",0
51,CheckIfNumberIsASumOfPowersOfThree,"Given an integer n, return true if it is possible to represent n as the sum of distinct powers ofthree. Otherwise, return false.
 An integer y is a power of three if there exists an integer x such that y == 3x.
 Example 1:
 Input: n = 12Output: trueExplanation: 12 = 31 + 32
 Example 2:
 Input: n = 91Output: trueExplanation: 91 = 30 + 32 + 34
 Example 3:
 Input: n = 21Output: false
 Constraints:
 1 <= n <= 107",0
52,CheckIfOneStringSwapCanMakeStringsEqual,"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choosetwo indices in a string (not necessarily different) and swap the characters at these indices.
 Return true if it is possible to make both strings equal by performing at most one string swap onexactly one of the strings. Otherwise, return false.
 Example 1:
 Input: s1 = ""bank"", s2 = ""kanb""Output: trueExplanation: For example, swap the first character with the last character of s2 to make ""bank"".
 Example 2:
 Input: s1 = ""attack"", s2 = ""defend""Output: falseExplanation: It is impossible to make them equal with one string swap.
 Example 3:
 Input: s1 = ""kelb"", s2 = ""kelb""Output: trueExplanation: The two strings are already equal, so no string swap operation is required.
 Example 4:
 Input: s1 = ""abcd"", s2 = ""dcba""Output: false
 Constraints:
 1 <= s1.length, s2.length <= 100s1.length == s2.lengths1 and s2 consist of only lowercase English letters.",0
53,CheckIfTheSentenceIsPangram,"A pangram is a sentence where every letter of the English alphabet appears at least once.
 Given a string sentence containing only lowercase English letters, return true if sentence is apangram, or false otherwise.
 Example 1:
 Input: sentence = ""thequickbrownfoxjumpsoverthelazydog""Output: trueExplanation: sentence contains at least one of every letter of the English alphabet.
 Example 2:
 Input: sentence = ""leetcode""Output: false
 Constraints:
 1 <= sentence.length <= 1000sentence consists of lowercase English letters.",0
54,CheckIfWordEqualsSummationOfTwoWords,"The letter value of a letter is its position in the alphabet starting from 0 (i.e. 'a' -> 0, 'b' ->1, 'c' -> 2, etc.).
 The numerical value of some string of lowercase English letters s is the concatenation of theletter values of each letter in s, which is then converted into an integer.
 For example, if s = ""acb"", we concatenate each letter's letter value, resulting in ""021"".After converting it, we get 21.
 You are given three strings firstWord, secondWord, and targetWord, each consisting of lowercaseEnglish letters 'a' through 'j' inclusive.
 Return true if the summation of the numerical values of firstWord and secondWord equals thenumerical value of targetWord, or false otherwise.
 Example 1:
 Input: firstWord = ""acb"", secondWord = ""cba"", targetWord = ""cdb""Output: trueExplanation:The numerical value of firstWord is ""acb"" -> ""021"" -> 21.The numerical value of secondWord is ""cba"" -> ""210"" -> 210.The numerical value of targetWord is ""cdb"" -> ""231"" -> 231.We return true because 21 + 210 == 231.
 Example 2:
 Input: firstWord = ""aaa"", secondWord = ""a"", targetWord = ""aab""Output: falseExplanation:The numerical value of firstWord is ""aaa"" -> ""000"" -> 0.The numerical value of secondWord is ""a"" -> ""0"" -> 0.The numerical value of targetWord is ""aab"" -> ""001"" -> 1.We return false because 0 + 0 != 1.
 Example 3:
 Input: firstWord = ""aaa"", secondWord = ""a"", targetWord = ""aaaa""Output: trueExplanation:The numerical value of firstWord is ""aaa"" -> ""000"" -> 0.The numerical value of secondWord is ""a"" -> ""0"" -> 0.The numerical value of targetWord is ""aaaa"" -> ""0000"" -> 0.We return true because 0 + 0 == 0.
 Constraints:
 1 <= firstWord.length, secondWord.length, targetWord.length <= 8firstWord, secondWord, and targetWord consist of lowercase English letters from 'a' to 'j'inclusive.",0
55,climbStairs,"You are climbing a stair case. It takes n steps to reach to the top.
 Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?",0
56,cloneGraph,"Clone an undirected graph. Each node in the graph contains a label and a list of its neighbors.
 OJ's undirected graph serialization:
 Nodes are labeled uniquely.
 We use # as a separator for each node, and , as a separator for node label and each neighbor of the node.
 As an example, consider the serialized graph {0,1,2#1,2#2,2}.
 The graph has a total of three nodes, and therefore contains three parts as separated by #.
 First node is labeled as 0. Connect node 0 to both nodes 1 and 2.Second node is labeled as 1. Connect node 1 to node 2.Third node is labeled as 2. Connect node 2 to node 2 (itself), thus forming a self-cycle.
 Visually, the graph looks like the following:
 1/ \/ \0 --- 2/ \\_/",0
57,ClosestDessertCost,"You would like to make dessert and are preparing to buy the ingredients. You have n ice cream baseflavors and m types of toppings to choose from. You must follow these rules when making yourdessert:
 There must be exactly one ice cream base.You can add one or more types of topping or have no toppings at all.There are at most two of each type of topping.
 You are given three inputs:
 baseCosts, an integer array of length n, where each baseCosts[i] represents the price ofthe ith ice cream base flavor.toppingCosts, an integer array of length m, where each toppingCosts[i] is the price of oneof the ith topping.target, an integer representing your target price for dessert.
 You want to make a dessert with a total cost as close to target as possible.
 Return the closest possible cost of the dessert to target. If there are multiple, return the lowerone.
 Example 1:
 Input: baseCosts = [1,7], toppingCosts = [3,4], target = 10Output: 10Explanation: Consider the following combination (all 0-indexed):- Choose base 1: cost 7- Take 1 of topping 0: cost 1 x 3 = 3- Take 0 of topping 1: cost 0 x 4 = 0Total: 7 + 3 + 0 = 10.
 Example 2:
 Input: baseCosts = [2,3], toppingCosts = [4,5,100], target = 18Output: 17Explanation: Consider the following combination (all 0-indexed):- Choose base 1: cost 3- Take 1 of topping 0: cost 1 x 4 = 4- Take 2 of topping 1: cost 2 x 5 = 10- Take 0 of topping 2: cost 0 x 100 = 0Total: 3 + 4 + 10 + 0 = 17. You cannot make a dessert with a total cost of 18.
 Example 3:
 Input: baseCosts = [3,10], toppingCosts = [2,5], target = 9Output: 8Explanation: It is possible to make desserts with cost 8 and 10. Return 8 as it is the lower cost.
 Example 4:
 Input: baseCosts = [10], toppingCosts = [1], target = 1Output: 10Explanation: Notice that you don't have to have any toppings, but you must have exactly one base.
 Constraints:
 n == baseCosts.lengthm == toppingCosts.length1 <= n, m <= 101 <= baseCosts[i], toppingCosts[i] <= 1041 <= target <= 104",1
58,ClosestRoom,"There is a hotel with n rooms. The rooms are represented by a 2D integer array rooms where rooms[i]= [roomIdi, sizei] denotes that there is a room with room number roomIdi and size equal to sizei.Each roomIdi is guaranteed to be unique.
 You are also given k queries in a 2D array queries where queries[j] = [preferredj, minSizej]. Theanswer to the j^th query is the room number id of a room such that:
 The room has a size of at least minSizej, andabs(id - preferredj) is minimized, where abs(x) is the absolute value of x.
 If there is a tie in the absolute difference, then use the room with the smallest such id. If thereis no such room, the answer is -1.
 Return an array answer of length k where answer[j] contains the answer to the j^th query.
 Example 1:
 Input: rooms = [[2,2],[1,2],[3,2]], queries = [[3,1],[3,3],[5,2]]Output: [3,-1,3]Explanation: The answers to the queries are as follows:Query = [3,1]: Room number 3 is the closest as abs(3 - 3) = 0, and its size of 2 is at least 1. Theanswer is 3.Query = [3,3]: There are no rooms with a size of at least 3, so the answer is -1.Query = [5,2]: Room number 3 is the closest as abs(3 - 5) = 2, and its size of 2 is at least 2. Theanswer is 3.
 Example 2:
 Input: rooms = [[1,4],[2,3],[3,5],[4,1],[5,2]], queries = [[2,3],[2,4],[2,5]]Output: [2,1,3]Explanation: The answers to the queries are as follows:Query = [2,3]: Room number 2 is the closest as abs(2 - 2) = 0, and its size of 3 is at least 3. Theanswer is 2.Query = [2,4]: Room numbers 1 and 3 both have sizes of at least 4. The answer is 1 since it issmaller.Query = [2,5]: Room number 3 is the only room with a size of at least 5. The answer is 3.
 Constraints:
 n == rooms.length1 <= n <= 10^5k == queries.length1 <= k <= 10^41 <= roomIdi, preferredj <= 10^71 <= sizei, minSizej <= 10^7",1
59,ClosestSubsequenceSum,"You are given an integer array nums and an integer goal.
 You want to choose a subsequence of nums such that the sum of its elements is the closest possibleto goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize theabsolute difference abs(sum - goal).
 Return the minimum possible value of abs(sum - goal).
 Note that a subsequence of an array is an array formed by removing some elements (possibly all ornone) of the original array.
 Example 1:
 Input: nums = [5,-7,3,5], goal = 6Output: 0Explanation: Choose the whole array as a subsequence, with a sum of 6.This is equal to the goal, so the absolute difference is 0.
 Example 2:
 Input: nums = [7,-9,15,-2], goal = -5Output: 1Explanation: Choose the subsequence [7,-9,-2], with a sum of -4.The absolute difference is abs(-4 - (-5)) = abs(1) = 1, which is the minimum.
 Example 3:
 Input: nums = [1,2,3], goal = -7Output: 7
 Constraints:
 1 <= nums.length <= 40-107 <= nums[i] <= 107-109 <= goal <= 109",1
60,coinChange,"You are given coins of different denominations and a total amount of money amount.Write a function to compute the fewest number of coins that you need to make up thatamount. If that amount of money cannot be made up by any combination of the coins,return -1.
 Example 1:coins = [1, 2, 5], amount = 11return 3 (11 = 5 + 5 + 1)
 Example 2:coins = [2], amount = 3return -1.
 Note:You may assume that you have an infinite number of each kind of coin.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all testcases.",1
61,CoinChange2,"You are given coins of different denominations and a total amount of money. Write a function tocompute the number of combinations that make up that amount. You may assume that you have infinitenumber of each kind of coin.
 Example 1:
 Input: amount = 5, coins = [1, 2, 5]Output: 4Explanation: there are four ways to make up the amount:5=55=2+2+15=2+1+1+15=1+1+1+1+1
 Example 2:
 Input: amount = 3, coins = [2]Output: 0Explanation: the amount of 3 cannot be made up just with coins of 2.
 Example 3:
 Input: amount = 10, coins = [10]Output: 1
 Note:
 You can assume that
 0 <= amount <= 50001 <= coin <= 5000the number of coins is less than 500the answer is guaranteed to fit into signed 32-bit integer",0
62,combinations,"Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.
 For example,If n = 4 and k = 2, a solution is:
 [[2,4],[3,4],[2,3],[1,2],[1,3],[1,4],]",1
63,combinationSum,"Given a set of candidate numbers (C) and a target number (T), find all unique combinationsin C where the candidate numbers sums to T.
 The same repeated number may be chosen from C unlimited number of times.
 Note:
 All numbers (including target) will be positive integers.Elements in a combination (a1, a2, â€¦ , ak) must be in non-descending order. (ie, a1 â‰¤ a2 â‰¤ â€¦ â‰¤ ak).The solution set must not contain duplicate combinations.
 For example, given candidate set 2,3,6,7 and target 7,A solution set is:[7][2, 2, 3]",0
64,combinationSum.II,"Given a collection of candidate numbers (C) and a target number (T), find allunique combinations in C where the candidate numbers sums to T.
 Each number in C may only be used once in the combination.
 Note:
 > All numbers (including target) will be positive integers.> Elements in a combination (a1, a2, â€¦ , ak) must be in non-descending order.(ie, a1 â‰¤ a2 â‰¤ â€¦ â‰¤ ak).> The solution set must not contain duplicate combinations.
 For example, given candidate set 10,1,2,7,6,1,5 and target 8,A solution set is:[1, 7][1, 2, 5][2, 6][1, 1, 6]",1
65,combinationSum.III,"Find all possible combinations of k numbers that add up to a number n,given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.Ensure that numbers within the set are sorted in ascending order.
 Example 1:Input: k = 3, n = 7Output:
 [[1,2,4]]
 Example 2:Input: k = 3, n = 9Output:
 [[1,2,6], [1,3,5], [2,3,4]]
 Credits:Special thanks to @mithmatt for adding this problem and creating all test cases.",0
66,combinationSumIV,"Given an integer array with all positive numbers and no duplicates, find the numberof possible combinations that add up to a positive integer target.
 Example:
 nums = [1, 2, 3]target = 4
 The possible combination ways are:(1, 1, 1, 1)(1, 1, 2)(1, 2, 1)(1, 3)(2, 1, 1)(2, 2)(3, 1)
 Note that different sequences are counted as different combinations.
 Therefore the output is 7.Follow up:What if negative numbers are allowed in the given array?How does it change the problem?What limitation we need to add to the question to allow negative numbers?",0
67,CompareStringsByFrequencyOfTheSmallestCharacter,"Let's define a function f(s) over a non-empty string s, which calculates the frequency of thesmallest character in s. For example, if s = ""dcce"" then f(s) = 2 because the smallest character is""c"" and its frequency is 2.
 Now, given string arrays queries and words, return an integer array answer, where each answer[i] isthe number of words such that f(queries[i]) < f(W), where W is a word in words.
 Example 1:
 Input: queries = [""cbd""], words = [""zaaaz""]Output: [1]Explanation: On the first query we have f(""cbd"") = 1, f(""zaaaz"") = 3 so f(""cbd"") < f(""zaaaz"").
 Example 2:
 Input: queries = [""bbb"",""cc""], words = [""a"",""aa"",""aaa"",""aaaa""]Output: [1,2]Explanation: On the first query only f(""bbb"") < f(""aaaa""). On the second query both f(""aaa"") andf(""aaaa"") are both > f(""cc"").
 Constraints:
 1 <= queries.length <= 20001 <= words.length <= 20001 <= queries[i].length, words[i].length <= 10queries[i][j], words[i][j] are English lowercase letters.",0
68,compareVersionNumbers,"Compare two version numbers version1 and version1.If version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.
 You may assume that the version strings are non-empty and contain only digits and the . character.The . character does not represent a decimal point and is used to separate number sequences.For instance, 2.5 is not ""two and a half"" or ""half way to version three"", it is the fifth second-level revision of the second first-level revision.
 Here is an example of version numbers ordering:0.1 < 1.1 < 1.2 < 13.37
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
69,constructBinaryTreeFromInorderAndPostorderTraversal,"Given inorder and postorder traversal of a tree, construct the binary tree.
 Note:You may assume that duplicates do not exist in the tree.",1
70,constructBinaryTreeFromPreorderAndInorderTraversal,"Given preorder and inorder traversal of a tree, construct the binary tree.
 Note:You may assume that duplicates do not exist in the tree.",1
71,ConstructTheLexicographicallyLargestValidSequence,"Given an integer n, find a sequence that satisfies all of the following:
 The integer 1 occurs once in the sequence.Each integer between 2 and n occurs twice in the sequence.For every integer i between 2 and n, the distance between the two occurrences of i isexactly i.
 The distance between two numbers on the sequence, a[i] and a[j], is the absolute difference oftheir indices, |j - i|.
 Return the lexicographically largest sequence. It is guaranteed that under the given constraints,there is always a solution.
 A sequence a is lexicographically larger than a sequence b (of the same length) if in the firstposition where a and b differ, sequence a has a number greater than the corresponding number in b.For example, [0,1,9,0] is lexicographically larger than [0,1,5,6] because the first position theydiffer is at the third number, and 9 is greater than 5.
 Example 1:
 Input: n = 3Output: [3,1,2,3,2]Explanation: [2,3,2,1,3] is also a valid sequence, but [3,1,2,3,2] is the lexicographically largestvalid sequence.
 Example 2:
 Input: n = 5Output: [5,3,1,4,3,5,2,4,2]
 Constraints:
 1 <= n <= 20",0
72,containerWithMostWater,"Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai).n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0).
 Find two lines, which together with x-axis forms a container, such that the container contains the most water.
 Note: You may not slant the container.",0
73,ContainsDuplicate,"Given an array of integers, find if the array contains any duplicates.Your function should return true if any value appears at least twice in the array,and it should return false if every element is distinct.",0
74,ContainsDuplicate.II,"Given an array of integers and an integer k, find out whether there there aretwo distinct indices i and j in the array such that nums[i] = nums[j] andthe difference between i and j is at most k.",0
75,ContainsDuplicate.III,"Given an array of integers, find out whether there are two distinct indices i and jin the array such that the difference between nums[i] and nums[j] is at most t andthe difference between i and j is at most k.",0
76,ConvertANumberToHexadecimal,"Given an integer, write an algorithm to convert it to hexadecimal. For negativeinteger, twoâ€™s complement method is used.
 Note:
 All letters in hexadecimal (a-f) must be in lowercase.The hexadecimal string must not contain extra leading 0s. If the number is zero, itis represented by a single zero character '0'; otherwise, the first character in thehexadecimal string will not be the zero character.The given number is guaranteed to fit within the range of a 32-bit signed integer.You must not use any method provided by the library which converts/formats thenumber to hex directly.
 Example 1:
 Input:26
 Output:""1a""
 Example 2:
 Input:-1
 Output:""ffffffff""",0
77,convertSortedArrayToBinarySearchTree,"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.",0
78,convertSortedListToBinarySearchTree,"Given a singly linked list where elements are sorted in ascending order,convert it to a height balanced BST.",1
79,copyListWithRandomPointer,"A linked list is given such that each node contains an additional random pointerwhich could point to any node in the list or null.
 Return a deep copy of the list.",2
80,countAndSay,"The count-and-say sequence is the sequence of integers beginning as follows:1, 11, 21, 1211, 111221, ...
 1 is read off as ""one 1"" or 11.11 is read off as ""two 1s"" or 21.21 is read off as ""one 2, then one 1"" or 1211.
 Given an integer n, generate the nth sequence.
 Note: The sequence of integers will be represented as a string.",0
81,CountCompleteTreeNodes,"Given a complete binary tree, count the number of nodes.
 Definition of a complete binary tree from Wikipedia:http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees
 In a complete binary tree every level, except possibly the last, is completely filled,and all nodes in the last level are as far left as possible.It can have between 1 and 2^h nodes inclusive at the last level h.",0
82,CountGoodMeals,"A good meal is a meal that contains exactly two different food items with a sum of deliciousnessequal to a power of two.
 You can pick any two different foods to make a good meal.
 Given an array of integers deliciousness where deliciousness[i] is the deliciousness of the i^â€‹â€‹â€‹â€‹â€‹â€‹thâ€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹ item of food, return the number of different good meals you can make from this listmodulo 10^9 + 7.
 Note that items with different indices are considered different even if they have the samedeliciousness value.
 Example 1:
 Input: deliciousness = [1,3,5,7,9]Output: 4Explanation: The good meals are (1,3), (1,7), (3,5) and, (7,9).Their respective sums are 4, 8, 8, and 16, all of which are powers of 2.
 Example 2:
 Input: deliciousness = [1,1,1,3,3,3,7]Output: 15Explanation: The good meals are (1,1) with 3 ways, (1,3) with 9 ways, and (1,7) with 3 ways.
 Constraints:
 1 <= deliciousness.length <= 10^50 <= deliciousness[i] <= 2^20",0
83,CountingBits,"Given a non negative integer number num. For every numbers i in the range 0 â‰¤ i â‰¤num calculate the number of 1's in their binary representation and return them as anarray.
 Example:For num = 5 you should return [0,1,1,2,1,2].
 Follow up:
 It is very easy to come up with a solution with run time O(n*sizeof(integer)). Butcan you do it in linear time O(n) /possibly in a single pass?Space complexity should be O(n).Can you do it like a boss? Do it without using any builtin function like__builtin_popcount in c++ or in any other language.
 You should make use of what you have produced already.Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try togenerate new range from previous.Or does the odd/even status of the number help you in calculating the number of 1s?
 Credits:Special thanks to @ syedee for adding this problem and creating all testcases.",0
84,CountItemsMatchingARule,"You are given an array items, where each items[i] = [typei, colori, namei] describes the type,color, and name of the ith item. You are also given a rule represented by two strings, ruleKey andruleValue.
 The ith item is said to match the rule if one of the following is true:
 ruleKey == ""type"" and ruleValue == typei.ruleKey == ""color"" and ruleValue == colori.ruleKey == ""name"" and ruleValue == namei.
 Return the number of items that match the given rule.
 Example 1:
 Input: items = [[""phone"",""blue"",""pixel""],[""computer"",""silver"",""lenovo""],[""phone"",""gold"",""iphone""]],ruleKey = ""color"", ruleValue = ""silver""Output: 1Explanation: There is only one item matching the given rule, which is[""computer"",""silver"",""lenovo""].
 Example 2:
 Input: items = [[""phone"",""blue"",""pixel""],[""computer"",""silver"",""phone""],[""phone"",""gold"",""iphone""]],ruleKey = ""type"", ruleValue = ""phone""Output: 2Explanation: There are only two items matching the given rule, which are [""phone"",""blue"",""pixel""]and [""phone"",""gold"",""iphone""]. Note that the item [""computer"",""silver"",""phone""] does not match.
 Constraints:
 1 <= items.length <= 1041 <= typei.length, colori.length, namei.length, ruleValue.length <= 10ruleKey is equal to either ""type"", ""color"", or ""name"".All strings consist only of lowercase letters.",0
85,CountNicePairsInAnArray,"You are given an array nums that consists of non-negative integers. Let us define rev(x) as thereverse of the non-negative integer x. For example, rev(123) = 321, and rev(120) = 21. A pair ofindices (i, j) is nice if it satisfies all of the following conditions:
 0 <= i < j < nums.lengthnums[i] + rev(nums[j]) == nums[j] + rev(nums[i])
 Return the number of nice pairs of indices. Since that number can be too large, return it modulo10^9 + 7.
 Example 1:
 Input: nums = [42,11,1,97]Output: 2Explanation: The two pairs are:- (0,3) : 42 + rev(97) = 42 + 79 = 121, 97 + rev(42) = 97 + 24 = 121.- (1,2) : 11 + rev(1) = 11 + 1 = 12, 1 + rev(11) = 1 + 11 = 12.
 Example 2:
 Input: nums = [13,10,35,24,76]Output: 4
 Constraints:
 1 <= nums.length <= 10^50 <= nums[i] <= 10^9",0
86,CountNumberOfHomogenousSubstrings,"Given a string s, return the number of homogenous substrings of s. Since the answer may be toolarge, return it modulo 109 + 7.
 A string is homogenous if all the characters of the string are the same.
 A substring is a contiguous sequence of characters within a string.
 Example 1:
 Input: s = ""abbcccaa""Output: 13Explanation: The homogenous substrings are listed as below:""a"" appears 3 times.""aa"" appears 1 time.""b"" appears 2 times.""bb"" appears 1 time.""c"" appears 3 times.""cc"" appears 2 times.""ccc"" appears 1 time.3 + 1 + 2 + 1 + 3 + 2 + 1 = 13.
 Example 2:
 Input: s = ""xy""Output: 2Explanation: The homogenous substrings are ""x"" and ""y"".
 Example 3:
 Input: s = ""zzzzz""Output: 15
 Constraints:
 1 <= s.length <= 105s consists of lowercase letters.",0
87,CountNumbersWithUniqueDigits,"Given a non-negative integer n, count all numbers with unique digits, x, where 0 &le; x < 10n.
 Example:
 Input: 2Output: 91Explanation: The answer should be the total numbers in the range of 0 &le; x < 100,excluding 11,22,33,44,55,66,77,88,99",0
88,CountOddNumbersInAnIntervalRange,"Given two non-negative integers low and high. Return the count of odd numbers between low and high(inclusive).
 Example 1:
 Input: low = 3, high = 7Output: 3Explanation: The odd numbers between 3 and 7 are [3,5,7].
 Example 2:
 Input: low = 8, high = 10Output: 1Explanation: The odd numbers between 8 and 10 are [9].
 Constraints:
 0 <= low <= high <= 10^9",0
89,CountOfRangeSum,"Given an integer array nums, return the number of range sums that lie in [lower,upper] inclusive.
 Range sum S(i, j) is defined as the sum of the elements in nums between indicesi andj (i â‰¤ j), inclusive.
 Note:A naive algorithm of O(n2) is trivial. You MUST do better than that.
 Example:Given nums = [-2, 5, -1], lower = -2, upper = 2,Return 3.The three ranges are : [0, 0], [2, 2], [0, 2] and their respective sums are: -2, -1, 2.
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
90,countOfSmallerNumbersAfterSelf,"You are given an integer array nums and you have to return a new counts array. Thecounts array has the property where counts[i] is the number of smaller elements tothe right of nums[i].
 Example:
 Given nums = [5, 2, 6, 1]
 To the right of 5 there are 2 smaller elements (2 and 1).To the right of 2 there is only 1 smaller element (1).To the right of 6 there is 1 smaller element (1).To the right of 1 there is 0 smaller element.
 Return the array [2, 1, 1, 0].",1
91,CountPairsOfNodes,"You are given an undirected graph represented by an integer n, which is the number of nodes, andedges, where edges[i] = [ui, vi] which indicates that there is an undirected edge between ui andvi. You are also given an integer array queries.
 The answer to the j^th query is the number of pairs of nodes (a, b) that satisfy the followingconditions:
 a < bcnt is strictly greater than queries[j], where cnt is the number of edges incident to a orb.
 Return an array answers such that answers.length == queries.length and answers[j] is the answer ofthe j^th query.
 Note that there can be repeated edges.
 Example 1:
 Input: n = 4, edges = [[1,2],[2,4],[1,3],[2,3],[2,1]], queries = [2,3]Output: [6,5]Explanation: The number of edges incident to at least one of each pair is shown above.
 Example 2:
 Input: n = 5, edges = [[1,5],[1,5],[3,4],[2,5],[1,3],[5,1],[2,3],[2,5]], queries = [1,2,3,4,5]Output: [10,10,9,8,6]
 Constraints:
 2 <= n <= 2 * 10^41 <= edges.length <= 10^51 <= ui, vi <= nui != vi1 <= queries.length <= 200 <= queries[j] < edges.length",1
92,CountPairsWithXorInARange,"Given a (0-indexed) integer array nums and two integers low and high, return the number of nicepairs.
 A nice pair is a pair (i, j) where 0 <= i < j < nums.length and low <= (nums[i] XOR nums[j]) <=high.
 Example 1:
 Input: nums = [1,4,2,7], low = 2, high = 6Output: 6Explanation: All nice pairs (i, j) are as follows:- (0, 1): nums[0] XOR nums[1] = 5- (0, 2): nums[0] XOR nums[2] = 3- (0, 3): nums[0] XOR nums[3] = 6- (1, 2): nums[1] XOR nums[2] = 6- (1, 3): nums[1] XOR nums[3] = 3- (2, 3): nums[2] XOR nums[3] = 5
 Example 2:
 Input: nums = [9,8,4,2,1], low = 5, high = 14Output: 8Explanation: All nice pairs (i, j) are as follows:- (0, 2): nums[0] XOR nums[2] = 13- (0, 3): nums[0] XOR nums[3] = 11- (0, 4): nums[0] XOR nums[4] = 8- (1, 2): nums[1] XOR nums[2] = 12- (1, 3): nums[1] XOR nums[3] = 10- (1, 4): nums[1] XOR nums[4] = 9- (2, 3): nums[2] XOR nums[3] = 6- (2, 4): nums[2] XOR nums[4] = 5
 Constraints:
 1 <= nums.length <= 2 * 10^41 <= nums[i] <= 2 * 10^41 <= low <= high <= 2 * 10^4",2
93,CountPrimes,"Description:Count the number of prime numbers less than a non-negative number, n.
 Credits:Special thanks to @mithmatt for adding this problem and creating all test cases.
 Let's start with a isPrime function. To determine if a number is prime, we need to check ifit is not divisible by any number less than n. The runtime complexity of isPrime functionwould be O(n) and hence counting the total prime numbers up to n would be O(n2). Could we do better?
 As we know the number must not be divisible by any number > n / 2, we can immediately cut the totaliterations half by dividing only up to n / 2. Could we still do better?
 Let's write down all of 12's factors:
 2 Ã— 6 = 123 Ã— 4 = 124 Ã— 3 = 126 Ã— 2 = 12
 As you can see, calculations of 4 Ã— 3 and 6 Ã— 2 are not necessary. Therefore, we only need to considerfactors up to âˆšn because, if n is divisible by some number p, then n = p Ã— q and since p â‰¤ q, we could derive that p â‰¤ âˆšn.
 Our total runtime has now improved to O(n1.5), which is slightly better. Is there a faster approach?
 public int countPrimes(int n) {int count = 0;for (int i = 1; i < n; i++) {if (isPrime(i)) count++;}return count;}
 private boolean isPrime(int num) {if (num <= 1) return false;// Loop's ending condition is i * i <= num instead of i <= sqrt(num)// to avoid repeatedly calling an expensive function sqrt().for (int i = 2; i * i <= num; i++) {if (num % i == 0) return false;}return true;}
 The Sieve of Eratosthenes is one of the most efficient ways to find all prime numbers up to n.But don't let that name scare you, I promise that the concept is surprisingly simple.
 [Sieve of Eratosthenes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)
 [https://leetcode.com/static/images/solutions/Sieve_of_Eratosthenes_animation.gif][http://commons.wikimedia.org/wiki/File:Sieve_of_Eratosthenes_animation.gif]
 Sieve of Eratosthenes: algorithm steps for primes below 121. ""Sieve of Eratosthenes Animation""()by SKopp is licensed under CC BY 2.0.
 
 We start off with a table of n numbers. Let's look at the first number, 2. We know all multiples of 2must not be primes, so we mark them off as non-primes. Then we look at the next number, 3. Similarly,all multiples of 3 such as 3 Ã— 2 = 6, 3 Ã— 3 = 9, ... must not be primes, so we mark them off as well.Now we look at the next number, 4, which was already marked off. What does this tell you? Should youmark off all multiples of 4 as well?
 4 is not a prime because it is divisible by 2, which means all multiples of 4 must also be divisibleby 2 and were already marked off. So we can skip 4 immediately and go to the next number, 5. Now,all multiples of 5 such as 5 Ã— 2 = 10, 5 Ã— 3 = 15, 5 Ã— 4 = 20, 5 Ã— 5 = 25, ... can be marked off.There is a slight optimization here, we do not need to start from 5 Ã— 2 = 10. Where should we start marking off?
 In fact, we can mark off multiples of 5 starting at 5 Ã— 5 = 25, because 5 Ã— 2 = 10 was already marked offby multiple of 2, similarly 5 Ã— 3 = 15 was already marked off by multiple of 3. Therefore, if the currentnumber is p, we can always mark off multiples of p starting at p2, then in increments of p: p2 + p, p2 + 2p, ...Now what should be the terminating loop condition?
 It is easy to say that the terminating loop condition is p n, which is certainly correct but not efficient.Do you still remember Hint #3?
 Yes, the terminating loop condition can be p n, as all non-primes â‰¥ âˆšn must have already been marked off.When the loop terminates, all the numbers in the table that are non-marked are prime.
 The Sieve of Eratosthenes uses an extra O(n) memory and its runtime complexity is O(n log log n).For the more mathematically inclined readers, you can read more about its algorithm complexity on[Wikipedia](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes#Algorithm_complexity).
 public int countPrimes(int n) {boolean[] isPrime = new boolean[n];for (int i = 2; i < n; i++) {isPrime[i] = true;}// Loop's ending condition is i * i < n instead of i < sqrt(n)// to avoid repeatedly calling an expensive function sqrt().for (int i = 2; i * i < n; i++) {if (!isPrime[i]) continue;for (int j = i * i; j < n; j += i) {isPrime[j] = false;}}int count = 0;for (int i = 2; i < n; i++) {if (isPrime[i]) count++;}return count;}",1
94,CourseSchedule,"There are a total of n courses you have to take, labeled from 0 to n - 1.
 Some courses may have prerequisites, for example to take course 0 you have to first take course 1,which is expressed as a pair: [0,1]
 Given the total number of courses and a list of prerequisite pairs, is it possible for you tofinish all courses?
 For example:2, [[1,0]]There are a total of 2 courses to take. To take course 1 you should have finished course 0.So it is possible.
 2, [[1,0],[0,1]]There are a total of 2 courses to take. To take course 1 you should have finished course 0,and to take course 0 you should also have finished course 1. So it is impossible.
 Note:The input prerequisites is a graph represented by a list of edges, not adjacency matrices.Read more about how a graph is represented.
 click to show more hints.
 Hints:
 - This problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists,no topological ordering exists and therefore it will be impossible to take all courses.
 - Topological Sort via DFS - A great video tutorial (21 minutes) on Coursera explaining the basicconcepts of Topological Sort. (https://class.coursera.org/algo-003/lecture/52)
 - Topological sort could also be done via BFS. (http://en.wikipedia.org/wiki/Topological_sorting#Algorithms)",0
95,CourseSchedule.II,"There are a total of n courses you have to take, labeled from 0 to n - 1.
 Some courses may have prerequisites, for example to take course 0 you have to first take course 1,which is expressed as a pair: [0,1]
 Given the total number of courses and a list of prerequisite pairs, return the ordering of coursesyou should take to finish all courses.
 There may be multiple correct orders, you just need to return one of them. If it is impossible tofinish all courses, return an empty array.
 For example:2, [[1,0]]There are a total of 2 courses to take. To take course 1 you should have finished course 0.So the correct course order is [0,1]
 4, [[1,0],[2,0],[3,1],[3,2]]There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2.Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is [0,1,2,3].Another correct ordering is[0,2,1,3].
 Note:The input prerequisites is a graph represented by a list of edges, not adjacency matrices.Read more about how a graph is represented.
 click to show more hints.
 Hints:
 - This problem is equivalent to finding the topological order in a directed graph. If a cycle exists,no topological ordering exists and therefore it will be impossible to take all courses.
 - Topological Sort via DFS - A great video tutorial (21 minutes) on Coursera explainingthe basic concepts of Topological Sort.
 - Topological sort could also be done via BFS.",1
96,CousinsInBinaryTree,"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.
 Two nodes of a binary tree are cousins if they have the same depth, but have different parents.
 We are given the root of a binary tree with unique values, and the values x and y of two differentnodes in the tree.
 Return true if and only if the nodes corresponding to the values x and y are cousins.
 Example 1:
 Input: root = [1,2,3,4], x = 4, y = 3Output: false
 Example 2:
 Input: root = [1,2,3,null,4,null,5], x = 5, y = 4Output: true
 Example 3:
 Input: root = [1,2,3,null,4], x = 2, y = 3Output: false
 Note:
 The number of nodes in the tree will be between 2 and 100.Each node has a unique integer value from 1 to 100.",0
97,CreateMaximumNumber,"Given two arrays of length m and n with digits 0-9 representing two numbers.Create the maximum number of length k from digits of the two. The relativeorder of the digitsfrom the same array must be preserved. Return an array of the k digits. Youshould try to optimize your time and space complexity.
 Example 1:
 nums1 = [3, 4, 6, 5]nums2 = [9, 1, 2, 5, 8, 3]k = 5return [9, 8, 6, 5, 3]
 Example 2:
 nums1 = [6, 7]nums2 = [6, 0, 4]k = 5return [6, 7, 6, 0, 4]
 Example 3:
 nums1 = [3, 9]nums2 = [8, 9]k = 3return [9, 8, 9]
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
98,DecodeString,"Given an encoded string, return it's decoded string.
 The encoding rule is: k[encoded_string], where the encoded_string inside the squarebrackets is being repeated exactly k times. Note that k is guaranteed to be apositive integer.
 You may assume that the input string is always valid; No extra white spaces, squarebrackets are well-formed, etc.
 Furthermore, you may assume that the original data does not contain any digits andthat digits are only for those repeat numbers, k. For example, there won't be inputlike 3a or 2[4].
 Examples:
 s = ""3[a]2[bc]"", return ""aaabcbc"".s = ""3[a2[c]]"", return ""accaccacc"".s = ""2[abc]3[cd]ef"", return ""abcabccdcdcdef"".",1
99,decodeWays,"A message containing letters from A-Z is being encoded to numbers using the following mapping:
 'A' -> 1'B' -> 2...'Z' -> 26
 Given an encoded message containing digits, determine the total number of ways to decode it.
 For example,Given encoded message ""12"",it could be decoded as ""AB"" (1 2) or ""L"" (12).
 The number of ways decoding ""12"" is 2.",0
100,DecodeXoredPermutation,"There is an integer array perm that is a permutation of the first n positive integers, where n isalways odd.
 It was encoded into another integer array encoded of length n - 1, such that encoded[i] = perm[i]XOR perm[i + 1]. For example, if perm = [1,3,2], then encoded = [2,1].
 Given the encoded array, return the original array perm. It is guaranteed that the answer existsand is unique.
 Example 1:
 Input: encoded = [3,1]Output: [1,2,3]Explanation: If perm = [1,2,3], then encoded = [1 XOR 2,2 XOR 3] = [3,1]
 Example 2:
 Input: encoded = [6,5,4,6]Output: [2,4,1,5,3]
 Constraints:
 3 <= n < 105n is odd.encoded.length == n - 1",1
101,DeleteNodeInALinkedList,"Write a function to delete a node (except the tail) in a singly linked list, givenonly access to that node.
 Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node withvalue 3, the linked list should become 1 -> 2 -> 4 after calling your function.",0
102,DesignAuthenticationManager,"There is an authentication system that works with authentication tokens. For each session, the userwill receive a new authentication token that will expire timeToLive seconds after the currentTime.If the token is renewed, the expiry time will be extended to expire timeToLive seconds after the(potentially different) currentTime.
 Implement the AuthenticationManager class:
 AuthenticationManager(int timeToLive) constructs the AuthenticationManager and sets thetimeToLive.generate(string tokenId, int currentTime) generates a new token with the given tokenId atthe given currentTime in seconds.renew(string tokenId, int currentTime) renews the unexpired token with the given tokenId atthe given currentTime in seconds. If there are no unexpired tokens with the given tokenId, therequest is ignored, and nothing happens.countUnexpiredTokens(int currentTime) returns the number of unexpired tokens at the givencurrentTime.
 Note that if a token expires at time t, and another action happens on time t (renew orcountUnexpiredTokens), the expiration takes place before the other actions.
 Example 1:
 Input[""AuthenticationManager"", ""renew"", ""generate"", ""countUnexpiredTokens"", ""generate"", ""renew"",""renew"", ""countUnexpiredTokens""][[5], [""aaa"", 1], [""aaa"", 2], [6], [""bbb"", 7], [""aaa"", 8], [""bbb"", 10], [15]]Output[null, null, null, 1, null, null, null, 0]
 ExplanationAuthenticationManager authenticationManager = new AuthenticationManager(5); // Constructs theAuthenticationManager with timeToLive = 5 seconds.authenticationManager.renew(""aaa"", 1); // No token exists with tokenId ""aaa"" at time 1, so nothinghappens.authenticationManager.generate(""aaa"", 2); // Generates a new token with tokenId ""aaa"" at time 2.authenticationManager.countUnexpiredTokens(6); // The token with tokenId ""aaa"" is the onlyunexpired one at time 6, so return 1.authenticationManager.generate(""bbb"", 7); // Generates a new token with tokenId ""bbb"" at time 7.authenticationManager.renew(""aaa"", 8); // The token with tokenId ""aaa"" expired at time 7, and 8 >=7, so at time 8 the renew request is ignored, and nothing happens.authenticationManager.renew(""bbb"", 10); // The token with tokenId ""bbb"" is unexpired at time 10, sothe renew request is fulfilled and now the token will expire at time 15.authenticationManager.countUnexpiredTokens(15); // The token with tokenId ""bbb"" expires at time 15,and the token with tokenId ""aaa"" expired at time 7, so currently no token is unexpired, so return 0.
 Constraints:
 1 <= timeToLive <= 10^81 <= currentTime <= 10^81 <= tokenId.length <= 5tokenId consists only of lowercase letters.All calls to generate will contain unique values of tokenId.The values of currentTime across all the function calls will be strictly increasing.At most 2000 calls will be made to all functions combined.",2
103,DetectCapital,"Given a word, you need to judge whether the usage of capitals in it is right or not.
 We define the usage of capitals in a word to be right when one of the following cases holds:
 All letters in this word are capitals, like ""USA"".All letters in this word are not capitals, like ""leetcode"".Only the first letter in this word is capital if it has more than one letter, like ""Google"".
 Otherwise, we define that this word doesn't use capitals in a right way.
 Example 1:
 Input: ""USA""Output: True
 Example 2:
 Input: ""FlaG""Output: False
 Note:The input will be a non-empty word consisting of uppercase and lowercase latin letters.",0
104,DetermineColorOfAChessboardSquare,"You are given coordinates, a string that represents the coordinates of a square of the chessboard.Below is a chessboard for your reference.
 Return true if the square is white, and false if the square is black.
 The coordinate will always represent a valid chessboard square. The coordinate will always have theletter first, and the number second.
 Example 1:
 Input: coordinates = ""a1""Output: falseExplanation: From the chessboard above, the square with coordinates ""a1"" is black, so return false.
 Example 2:
 Input: coordinates = ""h3""Output: trueExplanation: From the chessboard above, the square with coordinates ""h3"" is white, so return true.
 Example 3:
 Input: coordinates = ""c7""Output: false
 Constraints:
 coordinates.length == 2'a' <= coordinates[0] <= 'h''1' <= coordinates[1] <= '8'",0
105,diameterOfBinaryTree,"Definition for a binary tree node.struct TreeNode {int val;TreeNode *left;TreeNode *right;TreeNode() : val(0), left(nullptr), right(nullptr) {}TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}};/",0
106,DifferentWaysToAddParentheses,"Given a string of numbers and operators, return all possible results from computingall the different possible ways to group numbers and operators. The valid operatorsare +, - and *.
 Example 1Input: ""2-1-1"".((2-1)-1) = 0(2-(1-1)) = 2Output: [0, 2]
 Example 2Input: ""2*3-4*5""(2*(3-(4*5))) = -34((2*3)-(4*5)) = -14((2*(3-4))*5) = -10(2*((3-4)*5)) = -10(((2*3)-4)*5) = 10Output: [-34, -14, -10, -10, 10]
 Credits:Special thanks to @mithmatt for adding this problem and creating all testcases.",2
107,distinctSubsequences,"Given a string S and a string T, count the number of distinct subsequences of S which equals T.
 A subsequence of a string is a new string which is formed from the original string by deleting some(can be none) of the characters without disturbing the relative positions of the remainingcharacters. (ie, ""ACE"" is a subsequence of ""ABCDE"" while ""AEC"" is not).
 Example 1:
 Input: S = ""rabbbit"", T = ""rabbit""Output: 3Explanation:
 As shown below, there are 3 ways you can generate ""rabbit"" from S.(The caret symbol ^ means the chosen letters)
 rabbbit^^^^ ^^rabbbit^^ ^^^^rabbbit^^^ ^^^
 Example 2:
 Input: S = ""babgbag"", T = ""bag""Output: 5Explanation:
 As shown below, there are 5 ways you can generate ""bag"" from S.(The caret symbol ^ means the chosen letters)
 babgbag^^ ^babgbag^^ ^babgbag^ ^^babgbag^ ^^babgbag^^^",2
108,DistributeCoinsInBinaryTree,"Given the root of a binary tree with N nodes, each node in the tree has node.val coins, and thereare N coins total.
 In one move, we may choose two adjacent nodes and move one coin from one node to another. (Themove may be from parent to child, or from child to parent.)
 Return the number of moves required to make every node have exactly one coin.
 Example 1:
 Input: [3,0,0]Output: 2Explanation: From the root of the tree, we move one coin to its left child, and one coin to itsright child.
 Example 2:
 Input: [0,3,0]Output: 3Explanation: From the left child of the root, we move two coins to the root [taking two moves].Then, we move one coin from the root of the tree to the right child.
 Example 3:
 Input: [1,0,2]Output: 2
 Example 4:
 Input: [1,0,0,null,3]Output: 4
 Note:
 1<= N <= 1000 <= node.val <= N",0
109,divideTwoInt,"Divide two integers without using multiplication, division and mod operator.
 If it is overflow, return MAX_INT.",0
110,dungeonGame,"The demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon.The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positionedin the top-left room and must fight his way through the dungeon to rescue the princess.
 The knight has an initial health point represented by a positive integer.If at any point his health point drops to 0 or below, he dies immediately.
 Some of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms;other rooms are either empty (0's) or contain magic orbs that increase the knight's health (positive integers).In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.
 Write a function to determine the knight's minimum initial health so that he is able to rescue the princess.For example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal pathRIGHT-> RIGHT -> DOWN -> DOWN.
 
 +------+------+------+| | | || -2(K)| -3 | -3 || | | |+--------------------+| | | || -5 | -10 | 1 || | | |+--------------------+| | | || 10 | 30 | -5(P)|| | | |+------+------+------+
 
 Notes:
 The knight's health has no upper bound.Any room can contain threats or power-ups,even the first room the knight enters and the bottom-right room where the princess is imprisoned.
 Credits:Special thanks to @stellari for adding this problem and creating all test cases.",0
111,editDistance,"Given two words word1 and word2, find the minimum number of steps required toconvert word1 to word2. (each operation is counted as 1 step.)
 You have the following 3 operations permitted on a word:
 a) Insert a characterb) Delete a characterc) Replace a character",2
112,EliminationGame,"There is a list of sorted integers from 1 to n. Starting from left to right, remove the first number and every othernumber afterward until you reach the end of the list.
 Repeat the previous step again, but this time from right to left, remove the right most number and every other numberfrom the remaining numbers.
 We keep repeating the steps again, alternating left to right and right to left, until a single number remains.
 Find the last number that remains starting with a list of length n.
 Example:
 Input:n = 9,1 2 3 4 5 6 7 8 92 4 6 82 66
 Output:6",0
113,EqualSumArraysWithMinimumNumberOfOperations,"You are given two arrays of integers nums1 and nums2, possibly of different lengths. The values inthe arrays are between 1 and 6, inclusive.
 In one operation, you can change any integer's value in any of the arrays to any value between 1and 6, inclusive.
 Return the minimum number of operations required to make the sum of values in nums1 equal to thesum of values in nums2. Return -1â€‹â€‹â€‹â€‹â€‹ if it is not possible to make the sum of the two arraysequal.
 Example 1:
 Input: nums1 = [1,2,3,4,5,6], nums2 = [1,1,2,2,2,2]Output: 3Explanation: You can make the sums of nums1 and nums2 equal with 3 operations. All indices are0-indexed.- Change nums2[0] to 6. nums1 = [1,2,3,4,5,6], nums2 = [6,1,2,2,2,2].- Change nums1[5] to 1. nums1 = [1,2,3,4,5,1], nums2 = [6,1,2,2,2,2].- Change nums1[2] to 2. nums1 = [1,2,2,4,5,1], nums2 = [6,1,2,2,2,2].
 Example 2:
 Input: nums1 = [1,1,1,1,1,1,1], nums2 = [6]Output: -1Explanation: There is no way to decrease the sum of nums1 or to increase the sum of nums2 to makethem equal.
 Example 3:
 Input: nums1 = [6,6], nums2 = [1]Output: 3Explanation: You can make the sums of nums1 and nums2 equal with 3 operations. All indices are0-indexed.- Change nums1[0] to 2. nums1 = [2,6], nums2 = [1].- Change nums1[1] to 2. nums1 = [2,2], nums2 = [1].- Change nums2[0] to 4. nums1 = [2,2], nums2 = [4].
 Constraints:
 1 <= nums1.length, nums2.length <= 10^51 <= nums1[i], nums2[i] <= 6",2
114,EvaluateDivision,"Equations are given in the format A / B = k, where A and B are variablesrepresented as strings, and k is a real number (floating point number). Given somequeries, return the answers. If the answer does not exist, return -1.0.
 Example:Given a / b = 2.0, b / c = 3.0. queries are: a / c = ?, b / a = ?, a / e = ?, a/ a = ?, x / x = ? . return [6.0, 0.5, -1.0, 1.0, -1.0 ].
 The input is: vector<pair<string, string>> equations, vector<double>& values,vector<pair<string, string>> queries , where equations.size() == values.size(), andthe values are positive. This represents the equations. Return vector<double>.
 According to the example above:equations = [ [""a"", ""b""], [""b"", ""c""] ],values = [2.0, 3.0],queries = [ [""a"", ""c""], [""b"", ""a""], [""a"", ""e""], [""a"", ""a""], [""x"", ""x""] ].
 The input is always valid. You may assume that evaluating the queries will result inno division by zero and there is no contradiction.",0
115,evaluateReversePolishNotation,"Evaluate the value of an arithmetic expression in Reverse Polish Notation.
 Valid operators are +, -, *, /. Each operand may be an integer or another expression.
 Some examples:
 [""2"", ""1"", ""+"", ""3"", ""*""] -> ((2 + 1) * 3) -> 9[""4"", ""13"", ""5"", ""/"", ""+""] -> (4 + (13 / 5)) -> 6",2
116,EvaluateTheBracketPairsOfAString,"You are given a string s that contains some bracket pairs, with each pair containing a non-emptykey.
 For example, in the string ""(name)is(age)yearsold"", there are two bracket pairs thatcontain the keys ""name"" and ""age"".
 You know the values of a wide range of keys. This is represented by a 2D string array knowledgewhere each knowledge[i] = [keyi, valuei] indicates that key keyi has a value of valuei.
 You are tasked to evaluate all of the bracket pairs. When you evaluate a bracket pair that containssome key keyi, you will:
 Replace keyi and the bracket pair with the key's corresponding valuei.If you do not know the value of the key, you will replace keyi and the bracket pair with aquestion mark ""?"" (without the quotation marks).
 Each key will appear at most once in your knowledge. There will not be any nested brackets in s.
 Return the resulting string after evaluating all of the bracket pairs.
 Example 1:
 Input: s = ""(name)is(age)yearsold"", knowledge = [[""name"",""bob""],[""age"",""two""]]Output: ""bobistwoyearsold""Explanation:The key ""name"" has a value of ""bob"", so replace ""(name)"" with ""bob"".The key ""age"" has a value of ""two"", so replace ""(age)"" with ""two"".
 Example 2:
 Input: s = ""hi(name)"", knowledge = [[""a"",""b""]]Output: ""hi?""Explanation: As you do not know the value of the key ""name"", replace ""(name)"" with ""?"".
 Example 3:
 Input: s = ""(a)(a)(a)aaa"", knowledge = [[""a"",""yes""]]Output: ""yesyesyesaaa""Explanation: The same key can appear multiple times.The key ""a"" has a value of ""yes"", so replace all occurrences of ""(a)"" with ""yes"".Notice that the ""a""s not in a bracket pair are not evaluated.
 Example 4:
 Input: s = ""(a)(b)"", knowledge = [[""a"",""b""],[""b"",""a""]]Output: ""ba""
 Constraints:
 1 <= s.length <= 10^50 <= knowledge.length <= 10^5knowledge[i].length == 21 <= keyi.length, valuei.length <= 10s consists of lowercase English letters and round brackets '(' and ')'.Every open bracket '(' in s will have a corresponding close bracket ')'.The key in each bracket pair of s will be non-empty.There will not be any nested bracket pairs in s.keyi and valuei consist of lowercase English letters.Each keyi in knowledge is unique.",2
117,excelSheetColumnNumber,"Related to question Excel Sheet Column TitleGiven a column title as appear in an Excel sheet, return its corresponding column number.
 For example:A -> 1B -> 2C -> 3...Z -> 26AA -> 27AB -> 28
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
118,excelSheetColumnTitle,"Given a positive integer, return its corresponding column title as appear in an Excel sheet.
 For example:
 1 -> A2 -> B3 -> C...26 -> Z27 -> AA28 -> AB
 Credits:Special thanks to @ifanchu for adding this problem and creating all test cases.",0
119,ExpressionAddOperators,"Given a string that contains only digits 0-9 and a target value, return allpossibilities to add binary operators (not unary) +, -, or * between the digits sothey evaluate to the target value.
 Examples:""123"", 6 -> [""1+2+3"", ""1*2*3""]""232"", 8 -> [""2*3+2"", ""2+3*2""]""105"", 5 -> [""1*0+5"",""10-5""]""00"", 0 -> [""0+0"", ""0-0"", ""0*0""]""3456237490"", 9191 -> []
 Credits:Special thanks to @davidtan1890 for adding this problem and creating alltest cases.",0
120,factorialTrailingZeroes,"Given an integer n, return the number of trailing zeroes in n!.
 Note: Your solution should be in polynomial time complexity.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
121,FibonacciNumber,"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, suchthat each number is the sum of the two preceding ones, starting from 0 and 1. That is,
 F(0) = 0, F(1) = 1F(N) = F(N - 1) + F(N - 2), for N > 1.
 Given N, calculate F(N).
 Example 1:
 Input: 2Output: 1Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
 Example 2:
 Input: 3Output: 2Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
 Example 3:
 Input: 4Output: 3Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
 Note:
 0 &le; N &le; 30.",0
122,FilterRestaurantsByVeganFriendlyPriceAndDistance,"Given the array restaurants where restaurants[i] = [idi, ratingi, veganFriendlyi, pricei,distancei]. You have to filter the restaurants using three filters.
 The veganFriendly filter will be either true (meaning you should only include restaurants withveganFriendlyi set to true) or false (meaning you can include any restaurant). In addition, youhave the filters maxPrice and maxDistance which are the maximum value for price and distance ofrestaurants you should consider respectively.
 Return the array of restaurant IDs after filtering, ordered by rating from highest to lowest. Forrestaurants with the same rating, order them by id from highest to lowest. For simplicityveganFriendlyi and veganFriendly take value 1 when it is true, and 0 when it is false.
 Example 1:
 Input: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]],veganFriendly = 1, maxPrice = 50, maxDistance = 10Output: [3,1,5]Explanation:The restaurants are:Restaurant 1 [id=1, rating=4, veganFriendly=1, price=40, distance=10]Restaurant 2 [id=2, rating=8, veganFriendly=0, price=50, distance=5]Restaurant 3 [id=3, rating=8, veganFriendly=1, price=30, distance=4]Restaurant 4 [id=4, rating=10, veganFriendly=0, price=10, distance=3]Restaurant 5 [id=5, rating=1, veganFriendly=1, price=15, distance=1]After filter restaurants with veganFriendly = 1, maxPrice = 50 and maxDistance = 10 we haverestaurant 3, restaurant 1 and restaurant 5 (ordered by rating from highest to lowest).
 Example 2:
 Input: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]],veganFriendly = 0, maxPrice = 50, maxDistance = 10Output: [4,3,2,1,5]Explanation: The restaurants are the same as in example 1, but in this case the filterveganFriendly = 0, therefore all restaurants are considered.
 Example 3:
 Input: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]],veganFriendly = 0, maxPrice = 30, maxDistance = 3Output: [4,5]
 Constraints:
 1 <= restaurants.length <= 10^4restaurants[i].length == 51 <= idi, ratingi, pricei, distancei <= 10^51 <= maxPrice, maxDistance <= 10^5veganFriendlyi and veganFriendly are 0 or 1.All idi are distinct.",0
123,Find-All-Anagrams-in-a-String,"Given a string s and a non-empty string p, find all the start indices of p's anagrams in s.",0
124,FindingMkAverage,"You are given two integers, m and k, and a stream of integers. You are tasked to implement a datastructure that calculates the MKAverage for the stream.
 The MKAverage can be calculated using these steps:
 If the number of the elements in the stream is less than m you should consider theMKAverage to be -1. Otherwise, copy the last m elements of the stream to a separate container.Remove the smallest k elements and the largest k elements from the container.Calculate the average value for the rest of the elements rounded down to the nearestinteger.
 Implement the MKAverage class:
 MKAverage(int m, int k) Initializes the MKAverage object with an empty stream and the twointegers m and k.void addElement(int num) Inserts a new element num into the stream.int calculateMKAverage() Calculates and returns the MKAverage for the current streamrounded down to the nearest integer.
 Example 1:
 Input[""MKAverage"", ""addElement"", ""addElement"", ""calculateMKAverage"", ""addElement"", ""calculateMKAverage"",""addElement"", ""addElement"", ""addElement"", ""calculateMKAverage""][[3, 1], [3], [1], [], [10], [], [5], [5], [5], []]Output[null, null, null, -1, null, 3, null, null, null, 5]
 ExplanationMKAverage obj = new MKAverage(3, 1);obj.addElement(3); // current elements are [3]obj.addElement(1); // current elements are [3,1]obj.calculateMKAverage(); // return -1, because m = 3 and only 2 elements exist.obj.addElement(10); // current elements are [3,1,10]obj.calculateMKAverage(); // The last 3 elements are [3,1,10].// After removing smallest and largest 1 element the container will be[3].// The average of [3] equals 3/1 = 3, return 3obj.addElement(5); // current elements are [3,1,10,5]obj.addElement(5); // current elements are [3,1,10,5,5]obj.addElement(5); // current elements are [3,1,10,5,5,5]obj.calculateMKAverage(); // The last 3 elements are [5,5,5].// After removing smallest and largest 1 element the container will be[5].// The average of [5] equals 5/1 = 5, return 5
 Constraints:
 3 <= m <= 10^51 <= k*2 < m1 <= num <= 10^5At most 10^5 calls will be made to addElement and calculateMKAverage.",2
125,FindingTheUsersActiveMinutes,"You are given the logs for users' actions on LeetCode, and an integer k. The logs are representedby a 2D integer array logs where each logs[i] = [IDi, timei] indicates that the user with IDiperformed an action at the minute timei.
 Multiple users can perform actions simultaneously, and a single user can perform multiple actionsin the same minute.
 The user active minutes (UAM) for a given user is defined as the number of unique minutes in whichthe user performed an action on LeetCode. A minute can only be counted once, even if multipleactions occur during it.
 You are to calculate a 1-indexed array answer of size k such that, for each j (1 <= j <= k),answer[j] is the number of users whose UAM equals j.
 Return the array answer as described above.
 Example 1:
 Input: logs = [[0,5],[1,2],[0,2],[0,5],[1,3]], k = 5Output: [0,2,0,0,0]Explanation:The user with ID=0 performed actions at minutes 5, 2, and 5 again. Hence, they have a UAM of 2(minute 5 is only counted once).The user with ID=1 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.Since both users have a UAM of 2, answer[2] is 2, and the remaining answer[j] values are 0.
 Example 2:
 Input: logs = [[1,1],[2,2],[2,3]], k = 4Output: [1,1,0,0]Explanation:The user with ID=1 performed a single action at minute 1. Hence, they have a UAM of 1.The user with ID=2 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.There is one user with a UAM of 1 and one with a UAM of 2.Hence, answer[1] = 1, answer[2] = 1, and the remaining values are 0.
 Constraints:
 1 <= logs.length <= 10^40 <= IDi <= 10^91 <= timei <= 10^5k is in the range [The maximum UAM for a user, 10^5].",0
126,FindKthLargestXorCoordinateValue,"You are given a 2D matrix of size m x n, consisting of non-negative integers. You are also given aninteger k.
 The value of coordinate (a, b) of the matrix is the XOR of all matrix[i][j] where 0 <= i <= a < mand 0 <= j <= b < n (0-indexed).
 Find the k^th largest value (1-indexed) of all the coordinates of matrix.
 Example 1:
 Input: matrix = [[5,2],[1,6]], k = 1Output: 7Explanation: The value of coordinate (0,1) is 5 XOR 2 = 7, which is the largest value.
 Example 2:
 Input: matrix = [[5,2],[1,6]], k = 2Output: 5Explanation: The value of coordinate (0,0) is 5 = 5, which is the 2nd largest value.
 Example 3:
 Input: matrix = [[5,2],[1,6]], k = 3Output: 4Explanation: The value of coordinate (1,0) is 5 XOR 1 = 4, which is the 3rd largest value.
 Example 4:
 Input: matrix = [[5,2],[1,6]], k = 4Output: 0Explanation: The value of coordinate (1,1) is 5 XOR 2 XOR 1 XOR 6 = 0, which is the 4th largestvalue.
 Constraints:
 m == matrix.lengthn == matrix[i].length1 <= m, n <= 10000 <= matrix[i][j] <= 10^61 <= k <= m * n",0
127,FindMedianFromDataStream,"Median is the middle value in an ordered integer list. If the size of the list iseven, there is no middle value. So the median is the mean of the two middle value.Examples:[2,3,4] , the median is 3[2,3], the median is (2 + 3) / 2 = 2.5
 Design a data structure that supports the following two operations:
 void addNum(int num) - Add a integer number from the data stream to the datastructure.double findMedian() - Return the median of all elements so far.
 For example:
 add(1)add(2)findMedian() -> 1.5add(3)findMedian() -> 2
 Credits:Special thanks to @Louis1992 for adding this problem and creating all testcases.",0
128,findMinimumInRotatedSortedArray,"Suppose a sorted array is rotated at some pivot unknown to you beforehand.
 (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
 Find the minimum element.
 You may assume no duplicate exists in the array.",2
129,findMinimumInRotatedSortedArray.II,"Follow up for ""Find Minimum in Rotated Sorted Array"":What if duplicates are allowed?
 Would this affect the run-time complexity? How and why?
 Suppose a sorted array is rotated at some pivot unknown to you beforehand.
 (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
 Find the minimum element.
 The array may contain duplicates.",2
130,FindNearestPointThatHasTheSameXOrYCoordinate,"You are given two integers, x and y, which represent your current location on a Cartesian grid: (x,y). You are also given an array points where each points[i] = [ai, bi] represents that a pointexists at (ai, bi). A point is valid if it shares the same x-coordinate or the same y-coordinate asyour location.
 Return the index (0-indexed) of the valid point with the smallest Manhattan distance from yourcurrent location. If there are multiple, return the valid point with the smallest index. If thereare no valid points, return -1.
 The Manhattan distance between two points (x1, y1) and (x2, y2) is abs(x1 - x2) + abs(y1 - y2).
 Example 1:
 Input: x = 3, y = 4, points = [[1,2],[3,1],[2,4],[2,3],[4,4]]Output: 2Explanation: Of all the points, only [3,1], [2,4] and [4,4] are valid. Of the valid points, [2,4]and [4,4] have the smallest Manhattan distance from your current location, with a distance of 1.[2,4] has the smallest index, so return 2.
 Example 2:
 Input: x = 3, y = 4, points = [[3,4]]Output: 0Explanation: The answer is allowed to be on the same location as your current location.
 Example 3:
 Input: x = 3, y = 4, points = [[2,3]]Output: -1Explanation: There are no valid points.
 Constraints:
 1 <= points.length <= 104points[i].length == 21 <= x, y, ai, bi <= 104",0
131,findPeakElement,"A peak element is an element that is greater than its neighbors.
 Given an input array where num[i] â‰ num[i+1], find a peak element and return its index.
 You may imagine that num[-1] = num[n] = -âˆž.
 For example, in array [1, 2, 3, 1], 3 is a peak element and your function should return the index number 2.
 click to show spoilers.
 Note:Your solution should be in logarithmic complexity.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",2
132,FindTheDifference,"Given two strings s and t which consist of only lowercase letters.
 String t is generated by random shuffling string s and then add one more letter at arandom position.
 Find the letter that was added in t.
 Example:
 Input:s = ""abcd""t = ""abcde""
 Output:e
 Explanation:'e' is the letter that was added.",0
133,findTheDuplicateNumber,"Given an array nums containing n + 1 integers where each integer is between 1 andn (inclusive), prove that at least one duplicate number must exist.Assume that there is only one duplicate number, find the duplicate one.
 Note:> You must not modify the array (assume the array is read only).> You must use only constant, O(1) extra space.> Your runtime complexity should be less than O(n2).> There is only one duplicate number in the array, but it could be repeated more thanonce.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all testcases.",0
134,FindTheHighestAltitude,"There is a biker going on a road trip. The road trip consists of n + 1 points at differentaltitudes. The biker starts his trip on point 0 with altitude equal 0.
 You are given an integer array gain of length n where gain[i] is the net gain in altitude betweenpoints iâ€‹â€‹â€‹â€‹â€‹â€‹ and i + 1 for all (0 <= i < n). Return the highest altitude of a point.
 Example 1:
 Input: gain = [-5,1,5,0,-7]Output: 1Explanation: The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.
 Example 2:
 Input: gain = [-4,-3,-2,-1,4,3,2]Output: 0Explanation: The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.
 Constraints:
 n == gain.length1 <= n <= 100-100 <= gain[i] <= 100",0
135,FindTheWinnerOfAnArrayGame,"Given an integer array arr of distinct integers and an integer k.
 A game will be played between the first two elements of the array (i.e. arr[0] and arr[1]). In eachround of the game, we compare arr[0] with arr[1], the larger integer wins and remains at position 0and the smaller integer moves to the end of the array. The game ends when an integer wins kconsecutive rounds.
 Return the integer which will win the game.
 It is guaranteed that there will be a winner of the game.
 Example 1:
 Input: arr = [2,1,3,5,4,6,7], k = 2Output: 5Explanation: Let's see the rounds of the game:Round | arr | winner | win_count1 | [2,1,3,5,4,6,7] | 2 | 12 | [2,3,5,4,6,7,1] | 3 | 13 | [3,5,4,6,7,1,2] | 5 | 14 | [5,4,6,7,1,2,3] | 5 | 2So we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.
 Example 2:
 Input: arr = [3,2,1], k = 10Output: 3Explanation: 3 will win the first 10 rounds consecutively.
 Example 3:
 Input: arr = [1,9,8,2,3,7,6,4,5], k = 7Output: 9
 Example 4:
 Input: arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000Output: 99
 Constraints:
 2 <= arr.length <= 10^51 <= arr[i] <= 10^6arr contains distinct integers.1 <= k <= 10^9",0
136,FindTheWinnerOfTheCircularGame,"There are n friends that are playing a game. The friends are sitting in a circle and are numberedfrom 1 to n in clockwise order. More formally, moving clockwise from the i^th friend brings you tothe (i+1)^th friend for 1 <= i < n, and moving clockwise from the n^th friend brings you to the1^st friend.
 The rules of the game are as follows:
 Start at the 1^st friend.Count the next k friends in the clockwise direction including the friend you started at.The counting wraps around the circle and may count some friends more than once.The last friend you counted leaves the circle and loses the game.If there is still more than one friend in the circle, go back to step 2 starting from thefriend immediately clockwise of the friend who just lost and repeat.Else, the last friend in the circle wins the game.
 Given the number of friends, n, and an integer k, return the winner of the game.
 Example 1:
 Input: n = 5, k = 2Output: 3Explanation: Here are the steps of the game:1) Start at friend 1.2) Count 2 friends clockwise, which are friends 1 and 2.3) Friend 2 leaves the circle. Next start is friend 3.4) Count 2 friends clockwise, which are friends 3 and 4.5) Friend 4 leaves the circle. Next start is friend 5.6) Count 2 friends clockwise, which are friends 5 and 1.7) Friend 1 leaves the circle. Next start is friend 3.8) Count 2 friends clockwise, which are friends 3 and 5.9) Friend 5 leaves the circle. Only friend 3 is left, so they are the winner.
 Example 2:
 Input: n = 6, k = 5Output: 1Explanation: The friends leave in this order: 5, 4, 6, 2, 3. The winner is friend 1.
 Constraints:
 1 <= k <= n <= 500",0
137,FindValidMatrixGivenRowAndColumnSums,"You are given two arrays rowSum and colSum of non-negative integers where rowSum[i] is the sumof the elements in the ith row and colSum[j] is the sum of the elements of the jth column of a 2D matrix.In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.
 Find any matrix of non-negative integers of size rowSum.length x colSum.length that satisfies the rowSum andcolSum requirements.
 Return a 2D array representing any matrix that fulfills the requirements. It's guaranteed that atleast one matrix that fulfills the requirements exists.Example 1:
 Input: rowSum = [3,8], colSum = [4,7]Output: [[3,0],[1,7]]Explanation:0th row: 3 + 0 = 0 == rowSum[0]1st row: 1 + 7 = 8 == rowSum[1]0th column: 3 + 1 = 4 == colSum[0]1st column: 0 + 7 = 7 == colSum[1]The row and column sums match, and all matrix elements are non-negative.Another possible matrix is: [[1,2],[3,5]]Example 2:
 Input: rowSum = [5,7,10], colSum = [8,6,8]Output: [[0,5,0],[6,1,0],[2,0,8]]Example 3:
 Input: rowSum = [14,9], colSum = [6,9,8]Output: [[0,9,5],[6,0,3]]Example 4:
 Input: rowSum = [1,0], colSum = [1]Output: [[1],[0]]Example 5:
 Input: rowSum = [0], colSum = [0]Output: [[0]]",0
138,FindXorSumOfAllPairsBitwiseAnd,"The XOR sum of a list is the bitwise XOR of all its elements. If the list only contains oneelement, then its XOR sum will be equal to this element.
 For example, the XOR sum of [1,2,3,4] is equal to 1 XOR 2 XOR 3 XOR 4 = 4, and the XOR sumof [3] is equal to 3.
 You are given two 0-indexed arrays arr1 and arr2 that consist only of non-negative integers.
 Consider the list containing the result of arr1[i] AND arr2[j] (bitwise AND) for every (i, j) pairwhere 0 <= i < arr1.length and 0 <= j < arr2.length.
 Return the XOR sum of the aforementioned list.
 Example 1:
 Input: arr1 = [1,2,3], arr2 = [6,5]Output: 0Explanation: The list = [1 AND 6, 1 AND 5, 2 AND 6, 2 AND 5, 3 AND 6, 3 AND 5] = [0,1,2,0,2,1].The XOR sum = 0 XOR 1 XOR 2 XOR 0 XOR 2 XOR 1 = 0.
 Example 2:
 Input: arr1 = [12], arr2 = [4]Output: 4Explanation: The list = [12 AND 4] = [4]. The XOR sum = 4.
 Constraints:
 1 <= arr1.length, arr2.length <= 10^50 <= arr1[i], arr2[j] <= 10^9",0
139,FirstBadVersion,"You are a product manager and currently leading a team to develop a new product.Unfortunately, the latest version of your product fails the quality check. Sinceeach version is developed based on the previous version, all the versions after abad version are also bad.
 Suppose you have n versions [1, 2, ..., n] and you want to find out the first badone, which causes all the following ones to be bad.
 You are given an API bool isBadVersion(version) which will return whether version isbad. Implement a function to find the first bad version. You should minimize thenumber of calls to the API.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",0
140,firstMissingPositive,"Given an unsorted integer array, find the first missing positive integer.
 For example,Given [1,2,0] return 3,and [3,4,-1,1] return 2.
 Your algorithm should run in O(n) time and uses constant space.",2
141,FirstUniqueCharacterInAString,"Given a string, find the first non-repeating character in it and return it's index.If it doesn't exist, return -1.
 Examples:
 s = ""leetcode""return 0.
 s = ""loveleetcode"",return 2.
 Note: You may assume the string contain only lowercase letters.",0
142,flattenBinaryTreeToLinkedList,"Given a binary tree, flatten it to a linked list in-place.
 For example,Given
 1/ \2 5/ \ \3 4 6
 The flattened tree should look like:
 1\2\3\4\5\6
 
 Hints:If you notice carefully in the flattened tree, each node's right child points tothe next node of a pre-order traversal.",0
143,FlattenNestedListIterator,"Given a nested list of integers, implement an iterator to flatten it.
 Each element is either an integer, or a list -- whose elements may also be integersor other lists.
 Example 1:Given the list [[1,1],2,[1,1]],
 By calling next repeatedly until hasNext returns false, the order of elementsreturned by next should be: [1,1,2,1,1].
 Example 2:Given the list [1,[4,[6]]],
 By calling next repeatedly until hasNext returns false, the order of elementsreturned by next should be: [1,4,6].",0
144,FormArrayByConcatenatingSubarraysOfAnotherArray,"You are given a 2D integer array groups of length n. You are also given an integer array nums.
 You are asked if you can choose n disjoint subarrays from the array nums such that the i^thsubarray is equal to groups[i] (0-indexed), and if i > 0, the (i-1)^th subarray appears before thei^th subarray in nums (i.e. the subarrays must be in the same order as groups).
 Return true if you can do this task, and false otherwise.
 Note that the subarrays are disjoint if and only if there is no index k such that nums[k] belongsto more than one subarray. A subarray is a contiguous sequence of elements within an array.
 Example 1:
 Input: groups = [[1,-1,-1],[3,-2,0]], nums = [1,-1,0,1,-1,-1,3,-2,0]Output: trueExplanation: You can choose the 0^th subarray as [1,-1,0,1,-1,-1,3,-2,0] and the 1^st one as[1,-1,0,1,-1,-1,3,-2,0].These subarrays are disjoint as they share no common nums[k] element.
 Example 2:
 Input: groups = [[10,-2],[1,2,3,4]], nums = [1,2,3,4,10,-2]Output: falseExplanation: Note that choosing the subarrays [1,2,3,4,10,-2] and [1,2,3,4,10,-2] is incorrectbecause they are not in the same order as in groups.[10,-2] must come before [1,2,3,4].
 Example 3:
 Input: groups = [[1,2,3],[3,4]], nums = [7,7,1,2,3,4,7,7]Output: falseExplanation: Note that choosing the subarrays [7,7,1,2,3,4,7,7] and [7,7,1,2,3,4,7,7] is invalidbecause they are not disjoint.They share a common elements nums[4] (0-indexed).
 Constraints:
 groups.length == n1 <= n <= 10^31 <= groups[i].length, sum(groups[i].length) <= 10^31 <= nums.length <= 10^3-10^7 <= groups[i][j], nums[k] <= 10^7",2
145,fractionToRecurringDecimal,"Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.
 If the fractional part is repeating, enclose the repeating part in parentheses.
 For example,
 Given numerator = 1, denominator = 2, return ""0.5"".Given numerator = 2, denominator = 1, return ""2"".Given numerator = 2, denominator = 3, return ""0.(6)"".
 Credits:Special thanks to @Shangrila for adding this problem and creating all test cases.",2
146,FrequencyOfTheMostFrequentElement,"The frequency of an element is the number of times it occurs in an array.
 You are given an integer array nums and an integer k. In one operation, you can choose an index ofnums and increment the element at that index by 1.
 Return the maximum possible frequency of an element after performing at most k operations.
 Example 1:
 Input: nums = [1,2,4], k = 5Output: 3Explanation: Increment the first element three times and the second element two times to make nums= [4,4,4].4 has a frequency of 3.
 Example 2:
 Input: nums = [1,4,8,13], k = 5Output: 2Explanation: There are multiple optimal solutions:- Increment the first element three times to make nums = [4,4,8,13]. 4 has a frequency of 2.- Increment the second element four times to make nums = [1,8,8,13]. 8 has a frequency of 2.- Increment the third element five times to make nums = [1,4,13,13]. 13 has a frequency of 2.
 Example 3:
 Input: nums = [3,9,6], k = 2Output: 1
 Constraints:
 1 <= nums.length <= 10^51 <= nums[i] <= 10^51 <= k <= 10^5",0
147,FriendCircles,"There are N students in a class. Some of them are friends, while some are not. Their friendship istransitive in nature. For example, if A is a direct friend of B, and B is a direct friend of C,then A is an indirect friend of C. And we defined a friend circle is a group of students who aredirect or indirect friends.
 Given a N*N matrix M representing the friend relationship between students in the class. If M[i][j]= 1, then the ith and jth students are direct friends with each other, otherwise not. And you haveto output the total number of friend circles among all the students.
 Example 1:
 Input:[[1,1,0],[1,1,0],[0,0,1]]Output: 2Explanation:The 0th and 1st students are direct friends, so they are in a friend circle. The 2ndstudent himself is in a friend circle. So return 2.
 Example 2:
 Input:[[1,1,0],[1,1,1],[0,1,1]]Output: 1Explanation:The 0th and 1st students are direct friends, the 1st and 2nd students are directfriends, so the 0th and 2nd students are indirect friends. All of them are in the same friendcircle, so return 1.
 Note:
 N is in range [1,200].M[i][i] = 1 for all students.If M[i][j] = 1, then M[j][i] = 1.",2
148,FrogJump,"A frog is crossing a river. The river is divided into x units and at each unit theremay or may not exist a stone. The frog can jump on a stone, but it must not jumpinto the water.
 Given a list of stones' positions (in units) in sorted ascending order, determine ifthe frog is able to cross the river by landing on the last stone. Initially, thefrog is on the first stone and assume the first jump must be 1 unit.
 If the frog's last jump was k units, then its next jump must be either k - 1, k, ork + 1 units. Note that the frog can only jump in the forward direction.
 Note:
 The number of stones is â‰¥ 2 and isEach stone's position will be a non-negative integer 31.The first stone's position is always 0.
 Example 1:
 [0,1,3,5,6,8,12,17]
 There are a total of 8 stones.The first stone at the 0th unit, second stone at the 1st unit,third stone at the 3rd unit, and so on...The last stone at the 17th unit.
 Return true. The frog can jump to the last stone by jumping1 unit to the 2nd stone, then 2 units to the 3rd stone, then2 units to the 4th stone, then 3 units to the 6th stone,4 units to the 7th stone, and 5 units to the 8th stone.
 Example 2:
 [0,1,2,3,4,8,9,11]
 Return false. There is no way to jump to the last stone asthe gap between the 5th and 6th stone is too large.",2
149,GameOfLife,"According to the Wikipedia's article: ""The Game of Life, also known simply as Life, is a cellularautomaton devised by the British mathematician John Horton Conway in 1970.""
 Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cellinteracts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules(taken from the above Wikipedia article):
 Any live cell with fewer than two live neighbors dies, as if caused by under-population.Any live cell with two or three live neighbors lives on to the next generation.Any live cell with more than three live neighbors dies, as if by over-population..Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.
 Write a function to compute the next state (after one update) of the board given its current state.The next state is created by applying the above rules simultaneously to every cell in the currentstate, where births and deaths occur simultaneously.
 Example:
 Input:[[0,1,0],[0,0,1],[1,1,1],[0,0,0]]Output:[[0,0,0],[1,0,1],[0,1,1],[0,1,0]]
 Follow up:
 Could you solve it in-place? Remember that the board needs to be updated at the same time:You cannot update some cells first and then use their updated values to update other cells.In this question, we represent the board using a 2D array. In principle, the board isinfinite, which would cause problems when the active area encroaches the border of the array. Howwould you address these problems?",0
150,gasStation,"There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
 You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i toits next station (i+1). You begin the journey with an empty tank at one of the gas stations.
 Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.
 Note:The solution is guaranteed to be unique.",0
151,generateParentheses,"Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
 For example, given n = 3, a solution set is:
 ""((()))"", ""(()())"", ""(())()"", ""()(())"", ""()()()""",0
152,grayCode,"The gray code is a binary numeral system where two successive values differ in only one bit.
 Given a non-negative integer n representing the total number of bits in the code,print the sequence of gray code. A gray code sequence must begin with 0.
 For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:
 00 - 001 - 111 - 310 - 2
 Note:For a given n, a gray code sequence is not uniquely defined.
 For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.
 For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.",2
153,GreatestCommonDivisorOfStrings,"For strings S and T, we say ""T divides S"" if and only if S = T + ... + T (T concatenated withitself 1 or more times)
 Return the largest string X such that X divides str1 and X divides str2.
 Example 1:
 Input: str1 = ""ABCABC"", str2 = ""ABC""Output: ""ABC""
 Example 2:
 Input: str1 = ""ABABAB"", str2 = ""ABAB""Output: ""AB""
 Example 3:
 Input: str1 = ""LEET"", str2 = ""CODE""Output: """"
 Note:
 1 <= str1.length <= 10001 <= str2.length <= 1000str1[i] and str2[i] are English uppercase letters.",0
154,h-Index,"Given an array of citations (each citation is a non-negative integer) of aresearcher, write a function to compute the researcher's h-index.
 According to the definition of h-index on Wikipedia: ""A scientist has index h if h ofhis/her N papers have at least h citations each, and the other N âˆ’ h papers have nomore than h citations each.""
 For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.Since the researcher has 3 papers with at least 3 citations each and the remainingtwo with no more than 3 citations each, his h-index is 3.
 Note: If there are several possible values for h, the maximum one is taken as theh-index.",0
155,h-Index.II,Follow up for H-Index: What if the citations array is sorted in ascending order?Could you optimize your algorithm?,0
156,HappyNumber,"Write an algorithm to determine if a number is ""happy"".
 A happy number is a number defined by the following process: Starting with any positive integer,replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1(where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which thisprocess ends in 1 are happy numbers.
 Example:Â 19 is a happy number
 1^2 + 9^2 = 828^2 + 2^2 = 686^2 + 8^2 = 1001^2 + 0^2 + 0^2 = 1
 Credits:Special thanks to @mithmatt and @ts for adding this problem and creating all test cases.",0
157,houseRobber,"You are a professional robber planning to rob houses along a street. Each house hasa certain amount of money stashed, the only constraint stopping you from robbingeach of them is that adjacent houses have security system connected and it willautomatically contact the police if two adjacent houses were broken into on the same night.
 Given a list of non-negative integers representing the amount of money of each house,determine the maximum amount of money you can rob tonight without alerting the police.",0
158,houseRobber.II,"Note: This is an extension of House Robber.
 After robbing those houses on that street, the thief has found himself a new placefor his thievery so that he will not get too much attention. This time, all housesat this place are arranged in a circle. That means the first house is the neighborof the last one. Meanwhile, the security system for these houses remain the same asfor those in the previous street.
 Given a list of non-negative integers representing the amount of money of each house,determine the maximum amount of money you can rob tonight without alerting the police.
 Credits:Special thanks to @Freezen for adding this problem and creating all test cases.",0
159,houseRobberIII,"The thief has found himself a new place for his thievery again. There is only oneentrance to this area, called the ""root."" Besides the root, each house has one andonly one parent house. After a tour, the smart thief realized that ""all houses inthis place forms a binary tree"". It will automatically contact the police if twodirectly-linked houses were broken into on the same night.
 Determine the maximum amount of money the thief can rob tonight without alerting thepolice.
 Example 1:3/ \2 3\ \3 1Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.Example 2:3/ \4 5/ \ \1 3 1Maximum amount of money the thief can rob = 4 + 5 = 9.Credits:Special thanks to @dietpepsi for adding this problem and creating all test cases.",2
160,ImplementQueueUsingStacks,"Implement the following operations of a queue using stacks.
 push(x) -- Push element x to the back of queue.
 pop() -- Removes the element from in front of queue.
 peek() -- Get the front element.
 empty() -- Return whether the queue is empty.
 Notes:
 You must use only standard operations of a stack -- which means only push to top,peek/pop from top, size, and is empty operations are valid.",0
161,ImplementStackUsingQueues,"Implement the following operations of a stack using queues.
 push(x) -- Push element x onto stack.
 pop() -- Removes the element on top of the stack.
 top() -- Get the top element.
 empty() -- Return whether the stack is empty.
 Notes:
 You must use only standard operations of a queue -- which means only push to back,peek/pop from front, size, and is empty operations are valid.
 Depending on your language, queue may not be supported natively. You may simulatea queue by using a list or deque (double-ended queue), as long as you use onlystandard operations of a queue.
 You may assume that all operations are valid (for example, no pop or top operationswill be called on an empty stack).
 Update (2015-06-11):The class name of the Java function had been updated to MyStack instead of Stack.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and all test cases.",0
162,ImplementTriePrefixTree,"Implement a trie with insert, search, and startsWith methods.
 Note:You may assume that all inputs are consist of lowercase letters a-z.",0
163,increasingTripletSubsequence,"Given an unsorted array return whether an increasing subsequence of length 3 existsor not in the array.
 Formally the function should:Return true if there exists i, j, ksuch that arr[i] < arr[j] < arr[k] given 0 â‰¤ i < j < k â‰¤ n-1 else return false.Your algorithm should run in O(n) time complexity and O(1) space complexity.
 Examples:Given [1, 2, 3, 4, 5],return true.
 Given [5, 4, 3, 2, 1],return false.",0
164,IncrementalMemoryLeak,"You are given two integers memory1 and memory2 representing the available memory in bits on twomemory sticks. There is currently a faulty program running that consumes an increasing amount ofmemory every second.
 At the i^th second (starting from 1), i bits of memory are allocated to the stick with moreavailable memory (or from the first memory stick if both have the same available memory). Ifneither stick has at least i bits of available memory, the program crashes.
 Return an array containing [crashTime, memory1crash, memory2crash], where crashTime is the time (inseconds) when the program crashed and memory1crash and memory2crash are the available bits ofmemory in the first and second sticks respectively.
 Example 1:
 Input: memory1 = 2, memory2 = 2Output: [3,1,0]Explanation: The memory is allocated as follows:- At the 1^st second, 1 bit of memory is allocated to stick 1. The first stick now has 1 bit ofavailable memory.- At the 2^nd second, 2 bits of memory are allocated to stick 2. The second stick now has 0 bits ofavailable memory.- At the 3^rd second, the program crashes. The sticks have 1 and 0 bits available respectively.
 Example 2:
 Input: memory1 = 8, memory2 = 11Output: [6,0,4]Explanation: The memory is allocated as follows:- At the 1^st second, 1 bit of memory is allocated to stick 2. The second stick now has 10 bit ofavailable memory.- At the 2^nd second, 2 bits of memory are allocated to stick 2. The second stick now has 8 bits ofavailable memory.- At the 3^rd second, 3 bits of memory are allocated to stick 1. The first stick now has 5 bits ofavailable memory.- At the 4^th second, 4 bits of memory are allocated to stick 2. The second stick now has 4 bits ofavailable memory.- At the 5^th second, 5 bits of memory are allocated to stick 1. The first stick now has 0 bits ofavailable memory.- At the 6^th second, the program crashes. The sticks have 0 and 4 bits available respectively.
 Constraints:
 0 <= memory1, memory2 <= 2^31 - 1",0
165,InsertDeleteGetrandomO1,"Design a data structure that supports all following operations in average O(1) time.
 insert(val): Inserts an item val to the set if not already present.remove(val): Removes an item val from the set if present.getRandom: Returns a random element from current set of elements. Each element musthave the same probability of being returned.
 Example:
 // Init an empty set.RandomizedSet randomSet = new RandomizedSet();
 // Inserts 1 to the set. Returns true as 1 was inserted successfully.randomSet.insert(1);
 // Returns false as 2 does not exist in the set.randomSet.remove(2);
 // Inserts 2 to the set, returns true. Set now contains [1,2].randomSet.insert(2);
 // getRandom should return either 1 or 2 randomly.randomSet.getRandom();
 // Removes 1 from the set, returns true. Set now contains [2].randomSet.remove(1);
 // 2 was already in the set, so return false.randomSet.insert(2);
 // Since 1 is the only number in the set, getRandom always return 1.randomSet.getRandom();",0
166,InsertDeleteGetrandomO1DuplicatesAllowed,"Design a data structure that supports all following operations in average O(1) time.Note: Duplicate elements are allowed.
 insert(val): Inserts an item val to the collection.remove(val): Removes an item val from the collection if present.getRandom: Returns a random element from current collection of elements. Theprobability of each element being returned is linearly related to the number of samevalue the collection contains.
 Example:
 // Init an empty collection.RandomizedCollection collection = new RandomizedCollection();
 // Inserts 1 to the collection. Returns true as the collection did not contain 1.collection.insert(1);
 // Inserts another 1 to the collection. Returns false as the collection contained 1.Collection now contains [1,1].collection.insert(1);
 // Inserts 2 to the collection, returns true. Collection now contains [1,1,2].collection.insert(2);
 // getRandom should return 1 with the probability 2/3, and returns 2 with theprobability 1/3.collection.getRandom();
 // Removes 1 from the collection, returns true. Collection now contains [1,2].collection.remove(1);
 // getRandom should return 1 and 2 both equally likely.collection.getRandom();",2
167,insertInterval,"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).
 You may assume that the intervals were initially sorted according to their start times.
 Example 1:Given intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].
 Example 2:Given [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].
 This is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].",0
168,insertionSortList,Sort a linked list using insertion sort.,0
169,IntegerBreak,"Given a positive integer n, break it into the sum of at least two positive integersand maximize the product of those integers. Return the maximum product you can get.
 For example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3+ 4).
 Note: you may assume that n is not less than 2.
 There is a simple O(n) solution to this problem.You may check the breaking results of n ranging from 7 to 10 to discover theregularities.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",0
170,IntegerReplacement,"Given a positive integer n and you can do operations as follow:
 If n is even, replace n with n/2.If n is odd, you can replace n with either n + 1 or n - 1.
 What is the minimum number of replacements needed for n to become 1?
 Example 1:
 Input:8
 Output:3
 Explanation:8 -> 4 -> 2 -> 1
 Example 2:
 Input:7
 Output:4
 Explanation:7 -> 8 -> 4 -> 2 -> 1or7 -> 6 -> 3 -> 2 -> 1",0
171,IntegerToEnglishWords,"Convert a non-negative integer to its english words representation. Given input isguaranteed to be less than 231 - 1.
 For example,
 123 -> ""One Hundred Twenty Three""12345 -> ""Twelve Thousand Three Hundred Forty Five""1234567 -> ""One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven""
 Did you see a pattern in dividing the number into chunk of words? For example, 123and 123000.
 Group the number by thousands (3 digits). You can write a helper function thattakes a number less than 1000 and convert just that chunk to words.
 There are many edge cases. What are some good test cases? Does your code work withinput such as 0? Or 1000010? (middle chunk is zero and should not be printed out)",2
172,integerToRoman,"Given an integer, convert it to a roman numeral.
 Input is guaranteed to be within the range from 1 to 3999.",0
173,interleavingString,"Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.
 For example,Given:s1 = ""aabcc"",s2 = ""dbbca"",
 When s3 = ""aadbbcbcac"", return true.When s3 = ""aadbbbaccc"", return false.",2
174,intersectionOfTwoArrays,"Given two arrays, write a function to compute their intersection.
 Example:Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].
 Note:Each element in the result must be unique.The result can be in any order.",0
175,intersectionOfTwoArraysII,"Given two arrays, write a function to compute their intersection.
 Example:Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2, 2].
 Note:Each element in the result should appear as many times as it shows in both arrays.The result can be in any order.
 Follow up:What if the given array is already sorted? How would you optimize your algorithm?What if nums1's size is small compared to num2's size? Which algorithm is better?What if elements of nums2 are stored on disk, and the memory is limited such that youcannot load all elements into the memory at once?",0
176,intersectionOfTwoLinkedLists,"Write a program to find the node at which the intersection of two singly linked lists begins.
 For example, the following two linked lists:
 
 A: a1 â†’ a2â†˜c1 â†’ c2 â†’ c3â†—B: b1 â†’ b2 â†’ b3
 begin to intersect at node c1.
 Notes:
 If the two linked lists have no intersection at all, return null.The linked lists must retain their original structure after the function returns.You may assume there are no cycles anywhere in the entire linked structure.Your code should preferably run in O(n) time and use only O(1) memory.",0
177,IntervalListIntersections,"Given two lists of closed intervals, each list of intervals is pairwise disjoint and in sortedorder.
 Return the intersection of these two interval lists.
 (Formally, a closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <=b. The intersection of two closed intervals is a set of real numbers that is either empty, or canbe represented as a closed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].)
 Example 1:
 0 2 5 10 13 23 24 25A +---+ +-------+ +-------------+ +--+
 1 5 8 12 15 24 25 26B +------+ +------+ +----------+ +--+
 1 2 5 8 10 15 23 24 25Ans ++ + +--+ +--------+ + +
 
 Input: A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]Output: [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]Reminder: The inputs and the desired output are lists of Interval objects, and not arrays or lists.
 Note:
 0 <= A.length < 10000 <= B.length < 10000 <= A[i].start, A[i].end, B[i].start, B[i].end < 109",0
178,InvertBinaryTree,"Invert a binary tree.4/ \2 7/ \ / \1 3 6 9
 to4/ \7 2/ \ / \9 6 3 1
 Trivia:This problem was inspired by this original tweet by Max Howell:(https://twitter.com/mxcl/status/608682016205344768)
 | Google: 90% of our engineers use the software you wrote (Homebrew),| but you canâ€™t invert a binary tree on a whiteboard so fuck off.",0
179,IslandPerimeter,"You are given a map in form of a two-dimensional integer grid where 1 represents land and 0represents water.
 Grid cells are connected horizontally/vertically (not diagonally). The grid is completelysurrounded by water, and there is exactly one island (i.e., one or more connected land cells).
 The island doesn't have ""lakes"" (water inside that isn't connected to the water around the island).One cell is a square with side length 1. The grid is rectangular, width and height don't exceed100. Determine the perimeter of the island.
 Example:
 Input:[[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]
 Output: 16
 Explanation: The perimeter is the 16 yellow stripes in the image below:",0
180,IsomorphicStrings,"Given two strings s and t, determine if they are isomorphic.
 Two strings are isomorphic if the characters in s can be replaced to get t.
 All occurrences of a character must be replaced with another character while preservingthe order of characters. No two characters may map to the same character but a charactermay map to itself.
 For example,
 Given ""egg"", ""add"", return true.
 Given ""foo"", ""bar"", return false.
 Given ""paper"", ""title"", return true.
 Note:You may assume both s and t have the same length.",0
181,IsSubsequence,"Given a string s and a string t, check if s is subsequence of t.
 You may assume that there is only lower case English letters in both s and t. t ispotentially a very long (length ~= 500,000) string, and s is a short string (
 A subsequence of a string is a new string which is formed from the original stringby deleting some (can be none) of the characters without disturbing the relativepositions of the remaining characters. (ie, ""ace"" is a subsequence of ""abcde"" while""aec"" is not).
 Example 1:s = ""abc"", t = ""ahbgdc""
 Return true.
 Example 2:s = ""axc"", t = ""ahbgdc""
 Return false.
 Follow up:If there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want tocheck one by one to see if T has its subsequence. In this scenario, how would youchange your code?",0
182,JewelsAndStones,"You're given strings J representing the types of stones that are jewels, and Srepresenting the stones you have. Each character in S is a type of stone you have.You want to know how many of the stones you have are also jewels.
 The letters in J are guaranteed distinct, and all characters in J and S are letters.Letters are case sensitive, so ""a"" is considered a different type of stone from ""A"".
 Example 1:
 
 Input: J = ""aA"", S = ""aAAbbbb""Output: 3
 
 Example 2:
 
 Input: J = ""z"", S = ""ZZ""Output: 0
 
 Note:
 
 S and J will consist of letters and have length at most 50.The characters in J are distinct.",0
183,jumpGame,"Given an array of non-negative integers, you are initially positioned at the first index of the array.
 Each element in the array represents your maximum jump length at that position.
 Determine if you are able to reach the last index.
 For example:A = [2,3,1,1,4], return true.
 A = [3,2,1,0,4], return false.",0
184,jumpGame.II,"Given an array of non-negative integers, you are initially positioned at the first index of the array.
 Each element in the array represents your maximum jump length at that position.
 Your goal is to reach the last index in the minimum number of jumps.
 For example:Given array A = [2,3,1,1,4]
 The minimum number of jumps to reach the last index is 2.(Jump 1 step from index 0 to 1, then 3 steps to the last index.)",0
185,KthLargestElementInAnArray,"Find the kth largest element in an unsorted array.Note that it is the kth largest element in the sorted order, not the kth distinct element.
 For example,Given [3,2,1,5,6,4] and k = 2, return 5.
 Note:You may assume k is always valid, 1 â‰¤ k â‰¤ array's length.
 Credits:Special thanks to @mithmatt for adding this problem and creating all test cases.",0
186,KthSmallestElementInABst,"Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.
 Note:You may assume k is always valid, 1 â‰¤ k â‰¤ BST's total elements.
 Follow up:What if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently?How would you optimize the kthSmallest routine?
 Try to utilize the property of a BST.What if you could modify the BST node's structure?The optimal runtime complexity is O(height of BST).
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
187,LargestColorValueInADirectedGraph,"There is a directed graph of n colored nodes and m edges. The nodes are numbered from 0 to n - 1.
 You are given a string colors where colors[i] is a lowercase English letter representing the colorof the i^th node in this graph (0-indexed). You are also given a 2D array edges where edges[j] =[aj, bj] indicates that there is a directed edge from node aj to node bj.
 A valid path in the graph is a sequence of nodes x1 -> x2 -> x3 -> ... -> xk such that there is adirected edge from xi to xi+1 for every 1 <= i < k. The color value of the path is the number ofnodes that are colored the most frequently occurring color along that path.
 Return the largest color value of any valid path in the given graph, or -1 if the graph contains acycle.
 Example 1:
 Input: colors = ""abaca"", edges = [[0,1],[0,2],[2,3],[3,4]]Output: 3Explanation: The path 0 -> 2 -> 3 -> 4 contains 3 nodes that are colored ""a"" (red in the aboveimage).
 Example 2:
 Input: colors = ""a"", edges = [[0,0]]Output: -1Explanation: There is a cycle from 0 to 0.
 Constraints:
 n == colors.lengthm == edges.length1 <= n <= 10^50 <= m <= 10^5colors consists of lowercase English letters.0 <= aj, bj < n",2
188,LargestMergeOfTwoStrings,"You are given two strings word1 and word2. You want to construct a string merge in the followingway: while either word1 or word2 are non-empty, choose one of the following options:
 If word1 is non-empty, append the first character in word1 to merge and delete it fromword1.
 For example, if word1 = ""abc"" and merge = ""dv"", then after choosing this operation,word1 = ""bc"" and merge = ""dva"".
 If word2 is non-empty, append the first character in word2 to merge and delete it fromword2.
 For example, if word2 = ""abc"" and merge = """", then after choosing this operation,word2 = ""bc"" and merge = ""a"".
 Return the lexicographically largest merge you can construct.
 A string a is lexicographically larger than a string b (of the same length) if in the firstposition where a and b differ, a has a character strictly larger than the corresponding characterin b. For example, ""abcd"" is lexicographically larger than ""abcc"" because the first position theydiffer is at the fourth character, and d is greater than c.
 Example 1:
 Input: word1 = ""cabaa"", word2 = ""bcaaa""Output: ""cbcabaaaaa""Explanation: One way to get the lexicographically largest merge is:- Take from word1: merge = ""c"", word1 = ""abaa"", word2 = ""bcaaa""- Take from word2: merge = ""cb"", word1 = ""abaa"", word2 = ""caaa""- Take from word2: merge = ""cbc"", word1 = ""abaa"", word2 = ""aaa""- Take from word1: merge = ""cbca"", word1 = ""baa"", word2 = ""aaa""- Take from word1: merge = ""cbcab"", word1 = ""aa"", word2 = ""aaa""- Append the remaining 5 a's from word1 and word2 at the end of merge.
 Example 2:
 Input: word1 = ""abcabc"", word2 = ""abdcaba""Output: ""abdcabcabcaba""
 Constraints:
 1 <= word1.length, word2.length <= 3000word1 and word2 consist only of lowercase English letters.",0
189,largestNumber,"Given a list of non negative integers, arrange them such that they form the largest number.
 For example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.
 Note: The result may be very large, so you need to return a string instead of an integer.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
190,largestRectangleInHistogram,"Given n non-negative integers representing the histogram's bar height where the width of each bar is 1,find the area of largest rectangle in the histogram.
 6+---+5 | |+---+ || | || | || | | 3| | | +---+2 | | | 2 | |+---+ | | +---+ || | 1 | | | | || +---+ | | | || | | | | | |+---+---+---+---+---+---+
 Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].
 
 6+---+5 | |+-------||-------||-------||-------| 3|-------| +---+2 |-------| 2 | |+---+ |-------|---+ || | 1 |-------| | || +---|-------| | || | |-------| | |+---+---+---+---+---+---+
 
 The largest rectangle is shown in the shaded area, which has area = 10 unit.
 For example,Given height = [2,1,5,6,2,3],return 10.",2
191,LargestSubmatrixWithRearrangements,"You are given a binary matrix matrix of size m x n, and you are allowed to rearrange the columns ofthe matrix in any order.
 Return the area of the largest submatrix within matrix where every element of the submatrix is 1after reordering the columns optimally.
 Example 1:
 Input: matrix = [[0,0,1],[1,1,1],[1,0,1]]Output: 4Explanation: You can rearrange the columns as shown above.The largest submatrix of 1s, in bold, has an area of 4.
 Example 2:
 Input: matrix = [[1,0,1,0,1]]Output: 3Explanation: You can rearrange the columns as shown above.The largest submatrix of 1s, in bold, has an area of 3.
 Example 3:
 Input: matrix = [[1,1,0],[1,0,1]]Output: 2Explanation: Notice that you must rearrange entire columns, and there is no way to make a submatrixof 1s larger than an area of 2.
 Example 4:
 Input: matrix = [[0,0],[0,0]]Output: 0Explanation: As there are no 1s, no submatrix of 1s can be formed and the area is 0.
 Constraints:
 m == matrix.lengthn == matrix[i].length1 <= m * n <= 10^5matrix[i][j] is 0 or 1.",0
192,LargestSubstringBetweenTwoEqualCharacters,"Given a string s, return the length of the longest substring between two equal characters,excluding the two characters. If there is no such substring return -1.
 A substring is a contiguous sequence of characters within a string.
 Example 1:
 Input: s = ""aa""Output: 0Explanation: The optimal substring here is an empty substring between the two 'a's.
 Example 2:
 Input: s = ""abca""Output: 2Explanation: The optimal substring here is ""bc"".
 Example 3:
 Input: s = ""cbzxy""Output: -1Explanation: There are no characters that appear twice in s.
 Example 4:
 Input: s = ""cabbac""Output: 4Explanation: The optimal substring here is ""abba"". Other non-optimal substrings include ""bb"" and """".
 Constraints:
 1 <= s.length <= 300s contains only lowercase English letters.",0
193,LatestTimeByReplacingHiddenDigits,"You are given a string time in the form of hh:mm, where some of the digits in the string arehidden (represented by ?).
 The valid times are those inclusively between 00:00 and 23:59.
 Return the latest valid time you can get from time by replacing the hidden digits.
 Example 1:
 Input: time = ""2?:?0""Output: ""23:50""Explanation: The latest hour beginning with the digit '2' is 23 and the latest minute ending withthe digit '0' is 50.
 Example 2:
 Input: time = ""0?:3?""Output: ""09:39""
 Example 3:
 Input: time = ""1?:22""Output: ""19:22""
 Constraints:
 time is in the format hh:mm.It is guaranteed that you can produce a valid time from the given string.",0
194,lengthOfLastWord,"Given a string s consists of upper/lower-case alphabets and empty space characters ' ',return the length of last word in the string.
 If the last word does not exist, return 0.
 Note: A word is defined as a character sequence consists of non-space characters only.
 For example,Given s = ""Hello World"",return 5.",0
195,letterCombinationsOfAPhoneNumber,"Given a digit string, return all possible letter combinations that the number could represent.
 A mapping of digit to letters (just like on the telephone buttons) is given below.
 Input:Digit string ""23""Output: [""ad"", ""ae"", ""af"", ""bd"", ""be"", ""bf"", ""cd"", ""ce"", ""cf""].
 Note:Although the above answer is in lexicographical order, your answer could be in any order you want.",0
196,LexicographicallySmallestStringAfterApplyingOperations,"You are given a string s of even length consisting of digits from 0 to 9, and two integers a and b.
 You can apply either of the following two operations any number of times and in any order on s:
 Add a to all odd indices of s (0-indexed). Digits post 9 are cycled back to 0. For example,if s = ""3456"" and a = 5, s becomes ""3951"".Rotate s to the right by b positions. For example, if s = ""3456"" and b = 1, s becomes""6345"".
 Return the lexicographically smallest string you can obtain by applying the above operations anynumber of times on s.
 A string a is lexicographically smaller than a string b (of the same length) if in the firstposition where a and b differ, string a has a letter that appears earlier in the alphabet than thecorresponding letter in b. For example, ""0158"" is lexicographically smaller than ""0190"" because thefirst position they differ is at the third letter, and '5' comes before '9'.
 Example 1:
 Input: s = ""5525"", a = 9, b = 2Output: ""2050""Explanation: We can apply the following operations:Start: ""5525""Rotate: ""2555""Add: ""2454""Add: ""2353""Rotate: ""5323""Add: ""5222""â€‹â€‹â€‹â€‹â€‹â€‹â€‹Add: ""5121""â€‹â€‹â€‹â€‹â€‹â€‹â€‹Rotate: ""2151""â€‹â€‹â€‹â€‹â€‹â€‹â€‹Add: ""2050""â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹There is no way to obtain a string that is lexicographically smaller then ""2050"".
 Example 2:
 Input: s = ""74"", a = 5, b = 1Output: ""24""Explanation: We can apply the following operations:Start: ""74""Rotate: ""47""â€‹â€‹â€‹â€‹â€‹â€‹â€‹Add: ""42""â€‹â€‹â€‹â€‹â€‹â€‹â€‹Rotate: ""24""â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹There is no way to obtain a string that is lexicographically smaller then ""24"".
 Example 3:
 Input: s = ""0011"", a = 4, b = 2Output: ""0011""Explanation: There are no sequence of operations that will give us a lexicographically smallerstring than ""0011"".
 Example 4:
 Input: s = ""43987654"", a = 7, b = 3Output: ""00553311""
 Constraints:
 2 <= s.length <= 100s.length is even.s consists of digits from 0 to 9 only.1 <= a <= 91 <= b <= s.length - 1",2
197,LexicographicalNumbers,"Given an integer n, return 1 - n in lexicographical order.
 For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].
 Please optimize your algorithm to use less time and space. The input size may be aslarge as 5,000,000.",2
198,linkedListCycle,"Given a linked list, determine if it has a cycle in it.
 Follow up:Can you solve it without using extra space?",0
199,linkedListCycle.II,"Given a linked list, return the node where the cycle begins. If there is no cycle, return null.
 Follow up:Can you solve it without using extra space?",0
200,LinkedListRandomNode,"Given a singly linked list, return a random node's value from the linked list. Eachnode must have the same probability of being chosen.
 Follow up:What if the linked list is extremely large and its length is unknown to you? Couldyou solve this efficiently without using extra space?
 Example:
 // Init a singly linked list [1,2,3].ListNode head = new ListNode(1);head.next = new ListNode(2);head.next.next = new ListNode(3);Solution solution = new Solution(head);
 // getRandom() should return either 1, 2, or 3 randomly. Each element should haveequal probability of returning.solution.getRandom();",0
201,LongerContiguousSegmentsOfOnesThanZeros,"Given a binary string s, return true if the longest contiguous segment of 1s is strictly longerthan the longest contiguous segment of 0s in s. Return false otherwise.
 For example, in s = ""110100010"" the longest contiguous segment of 1s has length 2, and thelongest contiguous segment of 0s has length 3.
 Note that if there are no 0s, then the longest contiguous segment of 0s is considered to havelength 0. The same applies if there are no 1s.
 Example 1:
 Input: s = ""1101""Output: trueExplanation:The longest contiguous segment of 1s has length 2: ""1101""The longest contiguous segment of 0s has length 1: ""1101""The segment of 1s is longer, so return true.
 Example 2:
 Input: s = ""111000""Output: falseExplanation:The longest contiguous segment of 1s has length 3: ""111000""The longest contiguous segment of 0s has length 3: ""111000""The segment of 1s is not longer, so return false.
 Example 3:
 Input: s = ""110100010""Output: falseExplanation:The longest contiguous segment of 1s has length 2: ""110100010""The longest contiguous segment of 0s has length 3: ""110100010""The segment of 1s is not longer, so return false.
 Constraints:
 1 <= s.length <= 100s[i] is either '0' or '1'.",0
202,LongestAbsoluteFilePath,"Suppose we abstract our file system by a string in the following manner:
 The string ""dir\n\tsubdir1\n\tsubdir2\n\t\tfile.ext"" represents:
 dirsubdir1subdir2file.ext
 The directory dir contains an empty sub-directory subdir1 and a sub-directorysubdir2 containing a file file.ext.
 The string""dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext"" represents:
 dirsubdir1file1.extsubsubdir1subdir2subsubdir2file2.ext
 The directory dir contains two sub-directories subdir1 and subdir2. subdir1 containsa file file1.ext and an empty second-level sub-directory subsubdir1. subdir2contains a second-level sub-directory subsubdir2 containing a file file2.ext.
 We are interested in finding the longest (number of characters) absolute path to afile within our file system. For example, in the second example above, the longestabsolute path is ""dir/subdir2/subsubdir2/file2.ext"", and its length is 32 (notincluding the double quotes).
 Given a string representing the file system in the above format, return the lengthof the longest absolute path to file in the abstracted file system. If there is nofile in the system, return 0.
 Note:
 The name of a file contains at least a . and an extension.The name of a directory or sub-directory will not contain a ..
 Time complexity required: O(n) where n is the size of the input string.
 Notice that a/aa/aaa/file1.txt is not the longest file path, if there is anotherpath aaaaaaaaaaaaaaaaaaaaa/sth.png.",2
203,longestCommonPrefix,Write a function to find the longest common prefix string amongst an array of strings.,0
204,longestConsecutiveSequence,"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
 For example,Given [100, 4, 200, 1, 3, 2],The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
 Your algorithm should run in O(n) complexity.",0
205,LongestIncreasingPathInAMatrix,"Given an integer matrix, find the length of the longest increasing path.
 From each cell, you can either move to four directions: left, right, up or down. Youmay NOT move diagonally or move outside of the boundary (i.e. wrap-around is notallowed).
 Example 1:
 nums = [[>9, 9, 4],[>6, 6, 8],[>2,>1, 1]]
 Return 4
 The longest increasing path is [1, 2, 6, 9].
 Example 2:
 nums = [[>3,>4,>5],[ 3, 2,>6],[ 2, 2, 1]]
 Return 4
 The longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",0
206,longestIncreasingSubsequence,"Given an unsorted array of integers, find the length of longest increasingsubsequence.
 For example,Given [10, 9, 2, 5, 3, 7, 101, 18],The longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4.Note that there may be more than one LIS combination, it is only necessary for yoto return the length.
 Your algorithm should run in O(n2) complexity.
 Follow up: Could you improve it to O(n log n) time complexity?
 Credits:Special thanks to @pbrother for adding this problem and creating all test cases.",2
207,LongestNiceSubstring,"A string s is nice if, for every letter of the alphabet that s contains, it appears both inuppercase and lowercase. For example, ""abABB"" is nice because 'A' and 'a' appear, and 'B' and 'b'appear. However, ""abA"" is not because 'b' appears, but 'B' does not.
 Given a string s, return the longest substring of s that is nice. If there are multiple, return thesubstring of the earliest occurrence. If there are none, return an empty string.
 Example 1:
 Input: s = ""YazaAay""Output: ""aAa""Explanation: ""aAa"" is a nice string because 'A/a' is the only letter of the alphabet in s, and both'A' and 'a' appear.""aAa"" is the longest nice substring.
 Example 2:
 Input: s = ""Bb""Output: ""Bb""Explanation: ""Bb"" is a nice string because both 'B' and 'b' appear. The whole string is a substring.
 Example 3:
 Input: s = ""c""Output: """"Explanation: There are no nice substrings.
 Example 4:
 Input: s = ""dDzeE""Output: ""dD""Explanation: Both ""dD"" and ""eE"" are the longest nice substrings.As there are multiple longest nice substrings, return ""dD"" since it occurs earlier.
 Constraints:
 1 <= s.length <= 100s consists of uppercase and lowercase English letters.",0
208,LongestPalindrome,"Given a string which consists of lowercase or uppercase letters, find the length ofthe longest palindromes that can be built with those letters.
 This is case sensitive, for example ""Aa"" is not considered a palindrome here.
 Note:Assume the length of given string will not exceed 1,010.
 Example:
 Input:""abccccdd""
 Output:7
 Explanation:One longest palindrome that can be built is ""dccaccd"", whose length is 7.",0
209,LongestPalindromicSubsequence,"Given a string s, find the longest palindromic subsequence's length in s.
 A subsequence is a sequence that can be derived from another sequence by deleting some or noelements without changing the order of the remaining elements.
 Example 1:
 Input: s = ""bbbab""Output: 4Explanation: One possible longest palindromic subsequence is ""bbbb"".
 Example 2:
 Input: s = ""cbbd""Output: 2Explanation: One possible longest palindromic subsequence is ""bb"".
 Constraints:
 1 <= s.length <= 1000s consists only of lowercase English letters.",0
210,longestPalindromicSubstring,"Given a string S, find the longest palindromic substring in S.You may assume that the maximum length of S is 1000,and there exists one unique longest palindromic substring.",2
211,LongestSubstringOfAllVowelsInOrder,"A string is considered beautiful if it satisfies the following conditions:
 Each of the 5 English vowels ('a', 'e', 'i', 'o', 'u') must appear at least once in it.The letters must be sorted in alphabetical order (i.e. all 'a's before 'e's, all 'e'sbefore 'i's, etc.).
 For example, strings ""aeiou"" and ""aaaaaaeiiiioou"" are considered beautiful, but ""uaeio"", ""aeoiu"",and ""aaaeeeooo"" are not beautiful.
 Given a string word consisting of English vowels, return the length of the longest beautifulsubstring of word. If no such substring exists, return 0.
 A substring is a contiguous sequence of characters in a string.
 Example 1:
 Input: word = ""aeiaaioaaaaeiiiiouuuooaauuaeiu""Output: 13Explanation: The longest beautiful substring in word is ""aaaaeiiiiouuu"" of length 13.
 Example 2:
 Input: word = ""aeeeiiiioooauuuaeiou""Output: 5Explanation: The longest beautiful substring in word is ""aeiou"" of length 5.
 Example 3:
 Input: word = ""a""Output: 0Explanation: There is no beautiful substring, so return 0.
 Constraints:
 1 <= word.length <= 5 * 10^5word consists of characters 'a', 'e', 'i', 'o', and 'u'.",0
212,LongestSubstringWithAtLeastKRepeatingCharacters,"Find the length of the longest substring T of a given string (consists of lowercaseletters only) such that every character in T appears no less than k times.
 Example 1:
 Input:s = ""aaabb"", k = 3
 Output:3
 The longest substring is ""aaa"", as 'a' is repeated 3 times.
 Example 2:
 Input:s = ""ababbc"", k = 2
 Output:5
 The longest substring is ""ababb"", as 'a' is repeated 2 times and 'b' is repeated 3times.",2
213,longestSubstringWithoutRepeatingCharacters,"Given a string, find the length of the longest substring without repeating characters.For example, the longest substring without repeating letters for ""abcabcbb"" is ""abc"",which the length is 3. For ""bbbbb"" the longest substring is ""b"", with the length of 1.",0
214,LongestTurbulentSubarray,"A subarray A[i], A[i+1], ..., A[j] of A is said to be turbulent if and only if:
 For i <= k < j, A[k] > A[k+1] when k is odd, and A[k] < A[k+1] when k is even;OR, for i <= k < j, A[k] > A[k+1] when k is even, and A[k] < A[k+1] when k is odd.
 That is, the subarray is turbulent if the comparison sign flips between each adjacent pair ofelements in the subarray.
 Return the length of a maximum size turbulent subarray of A.
 Example 1:
 Input: [9,4,2,10,7,8,8,1,9]Output: 5Explanation: (A[1] > A[2] < A[3] > A[4] < A[5])
 Example 2:
 Input: [4,8,12,16]Output: 2
 Example 3:
 Input: [100]Output: 1
 Note:
 1 <= A.length <= 400000 <= A[i] <= 109",2
215,longestValidParentheses,"Given a string containing just the characters '(' and ')',find the length of the longest valid (well-formed) parentheses substring.
 For ""(()"", the longest valid parentheses substring is ""()"", which has length = 2.
 Another example is "")()())"", where the longest valid parentheses substring is ""()()"",which has length = 4.",0
216,LRUCache,"Design and implement a data structure for Least Recently Used (LRU) cache.It should support the following operations: get and set.
 get(key) - Get the value (will always be positive) of the key if the key existsin the cache, otherwise return -1.
 set(key, value) - Set or insert the value if the key is not already present.When the cache reached its capacity, it should invalidatethe least recently used item before inserting a new item.",2
217,majorityElement,"Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times.
 You may assume that the array is non-empty and the majority element always exist in the array.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",0
218,majorityElement.II,"Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.The algorithm should run in linear time and in O(1) space.
 How many majority elements could it possibly have?Do you have a better hint? Suggest it!",0
219,MakeTheXorOfAllSegmentsEqualToZero,"You are given an array numsâ€‹â€‹â€‹ and an integer kâ€‹â€‹â€‹â€‹â€‹. The XOR of a segment [left, right] where left<= right is the XOR of all the elements with indices between left and right, inclusive: nums[left]XOR nums[left+1] XOR ... XOR nums[right].
 Return the minimum number of elements to change in the array such that the XOR of all segments ofsize kâ€‹â€‹â€‹â€‹â€‹â€‹ is equal to zero.
 Example 1:
 Input: nums = [1,2,0,3,0], k = 1Output: 3Explanation: Modify the array from [1,2,0,3,0] to from [0,0,0,0,0].
 Example 2:
 Input: nums = [3,4,5,2,1,7,3,4,7], k = 3Output: 3Explanation: Modify the array from [3,4,5,2,1,7,3,4,7] to [3,4,7,3,4,7,3,4,7].
 Example 3:
 Input: nums = [1,2,4,1,2,5,1,2,6], k = 3Output: 3Explanation: Modify the array from [1,2,4,1,2,5,1,2,6] to [1,2,3,1,2,3,1,2,3].
 Constraints:
 1 <= k <= nums.length <= 2000â€‹â€‹â€‹â€‹â€‹â€‹0 <= nums[i] < 210",2
220,MapOfHighestPeak,"You are given an integer matrix isWater of size m x n that represents a map of land and water cells.
 If isWater[i][j] == 0, cell (i, j) is a land cell.If isWater[i][j] == 1, cell (i, j) is a water cell.
 You must assign each cell a height in a way that follows these rules:
 The height of each cell must be non-negative.If the cell is a water cell, its height must be 0.Any two adjacent cells must have an absolute height difference of at most 1. A cell isadjacent to another cell if the former is directly north, east, south, or west of the latter (i.e.,their sides are touching).
 Find an assignment of heights such that the maximum height in the matrix is maximized.
 Return an integer matrix height of size m x n where height[i][j] is cell (i, j)'s height. If thereare multiple solutions, return any of them.
 Example 1:
 Input: isWater = [[0,1],[0,0]]Output: [[1,0],[2,1]]Explanation: The image shows the assigned heights of each cell.The blue cell is the water cell, and the green cells are the land cells.
 Example 2:
 Input: isWater = [[0,0,1],[1,0,0],[0,0,0]]Output: [[1,1,0],[0,1,1],[1,2,2]]Explanation: A height of 2 is the maximum possible height of any assignment.Any height assignment that has a maximum height of 2 while still meeting the rules will also beaccepted.
 Constraints:
 m == isWater.lengthn == isWater[i].length1 <= m, n <= 1000isWater[i][j] is 0 or 1.There is at least one water cell.",0
221,MatrixCellsInDistanceOrder,"We are given a matrix with R rows and C columns has cells with integer coordinates (r, c), where 0<= r < R and 0 <= c < C.
 Additionally, we are given a cell in that matrix with coordinates (r0, c0).
 Return the coordinates of all cells in the matrix, sorted by their distance from (r0, c0) fromsmallest distance to largest distance. Here, the distance between two cells (r1, c1) and (r2, c2)is the Manhattan distance, |r1 - r2| + |c1 - c2|. (You may return the answer in any order thatsatisfies this condition.)
 Example 1:
 Input: R = 1, C = 2, r0 = 0, c0 = 0Output: [[0,0],[0,1]]Explanation: The distances from (r0, c0) to other cells are: [0,1]
 Example 2:
 Input: R = 2, C = 2, r0 = 0, c0 = 1Output: [[0,1],[0,0],[1,1],[1,0]]Explanation: The distances from (r0, c0) to other cells are: [0,1,1,2]The answer [[0,1],[1,1],[0,0],[1,0]] would also be accepted as correct.
 Example 3:
 Input: R = 2, C = 3, r0 = 1, c0 = 2Output: [[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]Explanation: The distances from (r0, c0) to other cells are: [0,1,1,2,2,3]There are other answers that would also be accepted as correct, such as[[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].
 Note:
 1 <= R <= 1001 <= C <= 1000 <= r0 < R0 <= c0 < C",0
222,MaxAreaOfIsland,"Given a non-empty 2D array grid of 0's and 1's, an island is a group of 1's (representing land)connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid aresurrounded by water.
 Find the maximum area of an island in the given 2D array. (If there is no island, the maximum areais 0.)
 Example 1:
 [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]
 Given the above grid, return 6. Note the answer is not 11, because the island must be connected4-directionally.
 Example 2:
 [[0,0,0,0,0,0,0,0]]Given the above grid, return 0.
 Note: The length of each dimension in the given grid does not exceed 50.",0
223,maximalRectangle,"Given a 2D binary matrix filled with 0's and 1's, find the largest rectanglecontaining all ones and return its area.",2
224,MaximalSquare,"Given a 2D binary matrix filled with 0's and 1's, find the largest square containing all 1's and return its area.
 For example, given the following matrix:
 1 0 1 0 01 0 1 1 11 1 1 1 11 0 0 1 0
 Return 4.
 Credits:Special thanks to @Freezen for adding this problem and creating all test cases.",2
225,MaximizeNumberOfNiceDivisors,"You are given a positive integer primeFactors. You are asked to construct a positive integer n thatsatisfies the following conditions:
 The number of prime factors of n (not necessarily distinct) is at most primeFactors.The number of nice divisors of n is maximized. Note that a divisor of n is nice if it isdivisible by every prime factor of n. For example, if n = 12, then its prime factors are [2,2,3],then 6 and 12 are nice divisors, while 3 and 4 are not.
 Return the number of nice divisors of n. Since that number can be too large, return it modulo 10^9+ 7.
 Note that a prime number is a natural number greater than 1 that is not a product of two smallernatural numbers. The prime factors of a number n is a list of prime numbers such that their productequals n.
 Example 1:
 Input: primeFactors = 5Output: 6Explanation: 200 is a valid value of n.It has 5 prime factors: [2,2,2,5,5], and it has 6 nice divisors: [10,20,40,50,100,200].There is not other value of n that has at most 5 prime factors and more nice divisors.
 Example 2:
 Input: primeFactors = 8Output: 18
 Constraints:
 1 <= primeFactors <= 10^9",2
226,MaximizePalindromeLengthFromSubsequences,"You are given two strings, word1 and word2. You want to construct a string in the following manner:
 Choose some non-empty subsequence subsequence1 from word1.Choose some non-empty subsequence subsequence2 from word2.Concatenate the subsequences: subsequence1 + subsequence2, to make the string.
 Return the length of the longest palindrome that can be constructed in the described manner. If nopalindromes can be constructed, return 0.
 A subsequence of a string s is a string that can be made by deleting some (possibly none)characters from s without changing the order of the remaining characters.
 A palindrome is a string that reads the same forward as well as backward.
 Example 1:
 Input: word1 = ""cacb"", word2 = ""cbba""Output: 5Explanation: Choose ""ab"" from word1 and ""cba"" from word2 to make ""abcba"", which is a palindrome.
 Example 2:
 Input: word1 = ""ab"", word2 = ""ab""Output: 3Explanation: Choose ""ab"" from word1 and ""a"" from word2 to make ""aba"", which is a palindrome.
 Example 3:
 Input: word1 = ""aa"", word2 = ""bb""Output: 0Explanation: You cannot construct a palindrome from the described method, so return 0.
 Constraints:
 1 <= word1.length, word2.length <= 1000word1 and word2 consist of lowercase English letters.",2
227,MaximizeScoreAfterNOperations,"You are given nums, an array of positive integers of size 2 * n. You must perform n operations onthis array.
 In the i^th operation (1-indexed), you will:
 Choose two elements, x and y.Receive a score of i * gcd(x, y).Remove x and y from nums.
 Return the maximum score you can receive after performing n operations.
 The function gcd(x, y) is the greatest common divisor of x and y.
 Example 1:
 Input: nums = [1,2]Output: 1Explanation: The optimal choice of operations is:(1 * gcd(1, 2)) = 1
 Example 2:
 Input: nums = [3,4,6,8]Output: 11Explanation: The optimal choice of operations is:(1 * gcd(3, 6)) + (2 * gcd(4, 8)) = 3 + 8 = 11
 Example 3:
 Input: nums = [1,2,3,4,5,6]Output: 14Explanation: The optimal choice of operations is:(1 * gcd(1, 5)) + (2 * gcd(2, 4)) + (3 * gcd(3, 6)) = 1 + 4 + 9 = 14
 Constraints:
 1 <= n <= 7nums.length == 2 * n1 <= nums[i] <= 10^6",0
228,MaximumAbsoluteSumOfAnySubarray,"You are given an integer array nums. The absolute sum of a subarray [numsl, numsl+1, ..., numsr-1,numsr] is abs(numsl + numsl+1 + ... + numsr-1 + numsr).
 Return the maximum absolute sum of any (possibly empty) subarray of nums.
 Note that abs(x) is defined as follows:
 If x is a negative integer, then abs(x) = -x.If x is a non-negative integer, then abs(x) = x.
 Example 1:
 Input: nums = [1,-3,2,3,-4]Output: 5Explanation: The subarray [2,3] has absolute sum = abs(2+3) = abs(5) = 5.
 Example 2:
 Input: nums = [2,-5,1,-4,3,-2]Output: 8Explanation: The subarray [-5,1,-4] has absolute sum = abs(-5+1-4) = abs(-8) = 8.
 Constraints:
 1 <= nums.length <= 105-104 <= nums[i] <= 104",0
229,MaximumAscendingSubarraySum,"Given an array of positive integers nums, return the maximum possible sum of an ascending subarrayin nums.
 A subarray is defined as a contiguous sequence of numbers in an array.
 A subarray [numsl, numsl+1, ..., numsr-1, numsr] is ascending if for all i where l <= i < r, numsi< numsi+1. Note that a subarray of size 1 is ascending.
 Example 1:
 Input: nums = [10,20,30,5,10,50]Output: 65Explanation: [5,10,50] is the ascending subarray with the maximum sum of 65.
 Example 2:
 Input: nums = [10,20,30,40,50]Output: 150Explanation: [10,20,30,40,50] is the ascending subarray with the maximum sum of 150.
 Example 3:
 Input: nums = [12,17,15,13,10,11,12]Output: 33Explanation: [10,11,12] is the ascending subarray with the maximum sum of 33.
 Example 4:
 Input: nums = [100,10,1]Output: 100
 Constraints:
 1 <= nums.length <= 1001 <= nums[i] <= 100",0
230,MaximumAveragePassRatio,"There is a school that has classes of students and each class will be having a final exam. You aregiven a 2D integer array classes, where classes[i] = [passi, totali]. You know beforehand that inthe ith class, there are totali total students, but only passi number of students will pass theexam.
 You are also given an integer extraStudents. There are another extraStudents brilliant studentsthat are guaranteed to pass the exam of any class they are assigned to. You want to assign each ofthe extraStudents students to a class in a way that maximizes the average pass ratio across all theclasses.
 The pass ratio of a class is equal to the number of students of the class that will pass the examdivided by the total number of students of the class. The average pass ratio is the sum of passratios of all the classes divided by the number of the classes.
 Return the maximum possible average pass ratio after assigning the extraStudents students. Answerswithin 10-5 of the actual answer will be accepted.
 Example 1:
 Input: classes = [[1,2],[3,5],[2,2]], extraStudents = 2Output: 0.78333Explanation: You can assign the two extra students to the first class. The average pass ratio willbe equal to (3/4 + 3/5 + 2/2) / 3 = 0.78333.
 Example 2:
 Input: classes = [[2,4],[3,9],[4,5],[2,10]], extraStudents = 4Output: 0.53485
 Constraints:
 1 <= classes.length <= 105classes[i].length == 21 <= passi <= totali <= 1051 <= extraStudents <= 105",0
231,MaximumAverageSubarray.I,"Given an array consisting of n integers, find the contiguous subarray of givenlength k that has the maximum average value. And you need to output the maximumaverage value.
 
 Example 1:
 Input: [1,12,-5,-6,50,3], k = 4Output: 12.75Explanation: aximum average is (12-5-6+50)/4 = 51/4 = 12.75
 
 
 Note:
 1 k nElements of the given array will be in the range [-10,000, 10,000].",0
232,MaximumBuildingHeight,"You want to build n new buildings in a city. The new buildings will be built in a line and arelabeled from 1 to n.
 However, there are city restrictions on the heights of the new buildings:
 The height of each building must be a non-negative integer.The height of the first building must be 0.The height difference between any two adjacent buildings cannot exceed 1.
 Additionally, there are city restrictions on the maximum height of specific buildings. Theserestrictions are given as a 2D integer array restrictions where restrictions[i] = [idi, maxHeighti]indicates that building idi must have a height less than or equal to maxHeighti.
 It is guaranteed that each building will appear at most once in restrictions, and building 1 willnot be in restrictions.
 Return the maximum possible height of the tallest building.
 Example 1:
 Input: n = 5, restrictions = [[2,1],[4,1]]Output: 2Explanation: The green area in the image indicates the maximum allowed height for each building.We can build the buildings with heights [0,1,2,1,2], and the tallest building has a height of 2.
 Example 2:
 Input: n = 6, restrictions = []Output: 5Explanation: The green area in the image indicates the maximum allowed height for each building.We can build the buildings with heights [0,1,2,3,4,5], and the tallest building has a height of 5.
 Example 3:
 Input: n = 10, restrictions = [[5,3],[2,5],[7,4],[10,3]]Output: 5Explanation: The green area in the image indicates the maximum allowed height for each building.We can build the buildings with heights [0,1,2,3,3,4,4,5,4,3], and the tallest building has aheight of 5.
 Constraints:
 2 <= n <= 10^90 <= restrictions.length <= min(n - 1, 10^5)2 <= idi <= nidi is unique.0 <= maxHeighti <= 10^9",2
233,maximumDepthOfBinaryTree,"Given a binary tree, find its maximum depth.
 The maximum depth is the number of nodes along the longest path from the root nodedown to the farthest leaf node.",0
234,MaximumDistanceBetweenAPairOfValues,"You are given two non-increasing 0-indexed integer arrays nums1â€‹â€‹â€‹â€‹â€‹â€‹ and nums2â€‹â€‹â€‹â€‹â€‹â€‹.
 A pair of indices (i, j), where 0 <= i < nums1.length and 0 <= j < nums2.length, is valid if both i<= j and nums1[i] <= nums2[j]. The distance of the pair is j - iâ€‹â€‹â€‹â€‹.
 Return the maximum distance of any valid pair (i, j). If there are no valid pairs, return 0.
 An array arr is non-increasing if arr[i-1] >= arr[i] for every 1 <= i < arr.length.
 Example 1:
 Input: nums1 = [55,30,5,4,2], nums2 = [100,20,10,10,5]Output: 2Explanation: The valid pairs are (0,0), (2,2), (2,3), (2,4), (3,3), (3,4), and (4,4).The maximum distance is 2 with pair (2,4).
 Example 2:
 Input: nums1 = [2,2,2], nums2 = [10,10,1]Output: 1Explanation: The valid pairs are (0,0), (0,1), and (1,1).The maximum distance is 1 with pair (0,1).
 Example 3:
 Input: nums1 = [30,29,19,5], nums2 = [25,25,25,25,25]Output: 2Explanation: The valid pairs are (2,2), (2,3), (2,4), (3,3), and (3,4).The maximum distance is 2 with pair (2,4).
 Example 4:
 Input: nums1 = [5,4], nums2 = [3,2]Output: 0Explanation: There are no valid pairs, so return 0.
 Constraints:
 1 <= nums1.length <= 10^51 <= nums2.length <= 10^51 <= nums1[i], nums2[j] <= 10^5Both nums1 and nums2 are non-increasing.",0
235,MaximumElementAfterDecreasingAndRearranging,"You are given an array of positive integers arr. Perform some operations (possibly none) on arr sothat it satisfies these conditions:
 The value of the first element in arr must be 1.The absolute difference between any 2 adjacent elements must be less than or equal to 1. Inother words, abs(arr[i] - arr[i - 1]) <= 1 for each i where 1 <= i < arr.length (0-indexed). abs(x)is the absolute value of x.
 There are 2 types of operations that you can perform any number of times:
 Decrease the value of any element of arr to a smaller positive integer.Rearrange the elements of arr to be in any order.
 Return the maximum possible value of an element in arr after performing the operations to satisfythe conditions.
 Example 1:
 Input: arr = [2,2,1,2,1]Output: 2Explanation:We can satisfy the conditions by rearranging arr so it becomes [1,2,2,2,1].The largest element in arr is 2.
 Example 2:
 Input: arr = [100,1,1000]Output: 3Explanation:One possible way to satisfy the conditions is by doing the following:1. Rearrange arr so it becomes [1,100,1000].2. Decrease the value of the second element to 2.3. Decrease the value of the third element to 3.Now arr = [1,2,3], which satisfies the conditions.The largest element in arr is 3.
 Example 3:
 Input: arr = [1,2,3,4,5]Output: 5Explanation: The array already satisfies the conditions, and the largest element is 5.
 Constraints:
 1 <= arr.length <= 10^51 <= arr[i] <= 10^9",0
236,MaximumErasureValue,"You are given an array of positive integers nums and want to erase a subarray containing uniqueelements. The score you get by erasing the subarray is equal to the sum of its elements.
 Return the maximum score you can get by erasing exactly one subarray.
 An array b is called to be a subarray of a if it forms a contiguous subsequence of a, that is, ifit is equal to a[l],a[l+1],...,a[r] for some (l,r).
 Example 1:
 Input: nums = [4,2,4,5,6]Output: 17Explanation: The optimal subarray here is [2,4,5,6].
 Example 2:
 Input: nums = [5,2,1,2,5,2,1,2,5]Output: 8Explanation: The optimal subarray here is [5,2,1] or [1,2,5].
 Constraints:
 1 <= nums.length <= 10^51 <= nums[i] <= 10^4",0
237,maximumGap,"Given an unsorted array, find the maximum difference between the successive elements in its sorted form.
 Try to solve it in linear time/space.
 Return 0 if the array contains less than 2 elements.
 You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.
 Credits:Special thanks to @porker2008 for adding this problem and creating all test cases.",0
238,MaximumIceCreamBars,"It is a sweltering summer day, and a boy wants to buy some ice cream bars.
 At the store, there are n ice cream bars. You are given an array costs of length n, where costs[i]is the price of the i^th ice cream bar in coins. The boy initially has coins coins to spend, and hewants to buy as many ice cream bars as possible.
 Return the maximum number of ice cream bars the boy can buy with coins coins.
 Note: The boy can buy the ice cream bars in any order.
 Example 1:
 Input: costs = [1,3,2,4,1], coins = 7Output: 4Explanation: The boy can buy ice cream bars at indices 0,1,2,4 for a total price of 1 + 3 + 2 + 1 =7.
 Example 2:
 Input: costs = [10,6,8,7,7,8], coins = 5Output: 0Explanation: The boy cannot afford any of the ice cream bars.
 Example 3:
 Input: costs = [1,6,3,1,2,5], coins = 20Output: 6Explanation: The boy can buy all the ice cream bars for a total price of 1 + 6 + 3 + 1 + 2 + 5 = 18.
 Constraints:
 costs.length == n1 <= n <= 10^51 <= costs[i] <= 10^51 <= coins <= 10^8",0
239,MaximumNumberOfBallsInABox,"You are working in a ball factory where you have n balls numbered from lowLimit up to highLimitinclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 toinfinity.
 Your job at this factory is to put each ball in the box with a number equal to the sum of digits ofthe ball's number. For example, the ball number 321 will be put in the box number 3 + 2 + 1 = 6 andthe ball number 10 will be put in the box number 1 + 0 = 1.
 Given two integers lowLimit and highLimit, return the number of balls in the box with the mostballs.
 Example 1:
 Input: lowLimit = 1, highLimit = 10Output: 2Explanation:Box Number: 1 2 3 4 5 6 7 8 9 10 11 ...Ball Count: 2 1 1 1 1 1 1 1 1 0 0 ...Box 1 has the most number of balls with 2 balls.
 Example 2:
 Input: lowLimit = 5, highLimit = 15Output: 2Explanation:Box Number: 1 2 3 4 5 6 7 8 9 10 11 ...Ball Count: 1 1 1 1 2 2 1 1 1 0 0 ...Boxes 5 and 6 have the most number of balls with 2 balls in each.
 Example 3:
 Input: lowLimit = 19, highLimit = 28Output: 2Explanation:Box Number: 1 2 3 4 5 6 7 8 9 10 11 12 ...Ball Count: 0 1 1 1 1 1 1 1 1 2 0 0 ...Box 10 has the most number of balls with 2 balls.
 Constraints:
 1 <= lowLimit <= highLimit <= 10^5",0
240,MaximumNumberOfConsecutiveValuesYouCanMake,"You are given an integer array coins of length n which represents the n coins that you own. Thevalue of the i^th coin is coins[i]. You can make some value x if you can choose some of your ncoins such that their values sum up to x.
 Return the maximum number of consecutive integer values that you can make with your coins startingfrom and including 0.
 Note that you may have multiple coins of the same value.
 Example 1:
 Input: coins = [1,3]Output: 2Explanation: You can make the following values:- 0: take []- 1: take [1]You can make 2 consecutive integer values starting from 0.
 Example 2:
 Input: coins = [1,1,1,4]Output: 8Explanation: You can make the following values:- 0: take []- 1: take [1]- 2: take [1,1]- 3: take [1,1,1]- 4: take [4]- 5: take [4,1]- 6: take [4,1,1]- 7: take [4,1,1,1]You can make 8 consecutive integer values starting from 0.
 Example 3:
 Input: nums = [1,4,10,3,1]Output: 20
 Constraints:
 coins.length == n1 <= n <= 4 * 10^41 <= coins[i] <= 4 * 10^4",0
241,MaximumNumberOfEventsThatCanBeAttended,"Given an array of events where events[i] = [startDayi, endDayi]. Every event i starts at startDayiand ends at endDayi.
 You can attend an event i at any day d where startTimei <= d <= endTimei. Notice that you can onlyattend one event at any time d.
 Return the maximum number of events you can attend.
 Example 1:
 Input: events = [[1,2],[2,3],[3,4]]Output: 3Explanation: You can attend all the three events.One way to attend them all is as shown.Attend the first event on day 1.Attend the second event on day 2.Attend the third event on day 3.
 Example 2:
 Input: events= [[1,2],[2,3],[3,4],[1,2]]Output: 4
 Example 3:
 Input: events = [[1,4],[4,4],[2,2],[3,4],[1,1]]Output: 4
 Example 4:
 Input: events = [[1,100000]]Output: 1
 Example 5:
 Input: events = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]Output: 7
 Constraints:
 1 <= events.length <= 105events[i].length == 21 <= startDayi <= endDayi <= 105",2
242,MaximumNumberOfEventsThatCanBeAttended.II,"You are given an array of events where events[i] = [startDayi, endDayi, valuei]. The ith eventstarts at startDayi and ends at endDayi, and if you attend this event, you will receive a value ofvaluei. You are also given an integer k which represents the maximum number of events you canattend.
 You can only attend one event at a time. If you choose to attend an event, you must attend theentire event. Note that the end day is inclusive: that is, you cannot attend two events where oneof them starts and the other ends on the same day.
 Return the maximum sum of values that you can receive by attending events.
 Example 1:
 Input: events = [[1,2,4],[3,4,3],[2,3,1]], k = 2Output: 7Explanation: Choose the green events, 0 and 1 (0-indexed) for a total value of 4 + 3 = 7.
 Example 2:
 Input: events = [[1,2,4],[3,4,3],[2,3,10]], k = 2Output: 10Explanation: Choose event 2 for a total value of 10.Notice that you cannot attend any other event as they overlap, and that you do not have to attend kevents.
 Example 3:
 Input: events = [[1,1,1],[2,2,2],[3,3,3],[4,4,4]], k = 3Output: 9Explanation: Although the events do not overlap, you can only attend 3 events. Pick the highestvalued three.
 Constraints:
 1 <= k <= events.length1 <= k * events.length <= 1061 <= startDayi <= endDayi <= 1091 <= valuei <= 106",2
243,MaximumNumberOfGroupsGettingFreshDonuts,"There is a donuts shop that bakes donuts in batches of batchSize. They have a rule where they mustserve all of the donuts of a batch before serving any donuts of the next batch. You are given aninteger batchSize and an integer array groups, where groups[i] denotes that there is a group ofgroups[i] customers that will visit the shop. Each customer will get exactly one donut.
 When a group visits the shop, all customers of the group must be served before serving any of thefollowing groups. A group will be happy if they all get fresh donuts. That is, the first customerof the group does not receive a donut that was left over from the previous group.
 You can freely rearrange the ordering of the groups. Return the maximum possible number of happygroups after rearranging the groups.
 Example 1:
 Input: batchSize = 3, groups = [1,2,3,4,5,6]Output: 4Explanation: You can arrange the groups as [6,2,4,5,1,3]. Then the 1^st, 2^nd, 4^th, and 6^thgroups will be happy.
 Example 2:
 Input: batchSize = 4, groups = [1,3,2,5,2,2,1,6]Output: 4
 Constraints:
 1 <= batchSize <= 91 <= groups.length <= 301 <= groups[i] <= 10^9",0
244,MaximumPopulationYear,"You are given a 2D integer array logs where each logs[i] = [birthi, deathi] indicates the birth anddeath years of the i^th person.
 The population of some year x is the number of people alive during that year. The i^th person iscounted in year x's population if x is in the inclusive range [birthi, deathi - 1]. Note that theperson is not counted in the year that they die.
 Return the earliest year with the maximum population.
 Example 1:
 Input: logs = [[1993,1999],[2000,2010]]Output: 1993Explanation: The maximum population is 1, and 1993 is the earliest year with this population.
 Example 2:
 Input: logs = [[1950,1961],[1960,1971],[1970,1981]]Output: 1960Explanation:The maximum population is 2, and it had happened in years 1960 and 1970.The earlier year between them is 1960.
 Constraints:
 1 <= logs.length <= 1001950 <= birthi < deathi <= 2050",0
245,MaximumProductOfTwoElementsInAnArray,"Given the array of integers nums, you will choose two different indices i and j of that array.Return the maximum value of (nums[i]-1)*(nums[j]-1).
 Example 1:
 Input: nums = [3,4,5,2]Output: 12Explanation: If you choose the indices i=1 and j=2 (indexed from 0), you will get the maximumvalue, that is, (nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12.
 Example 2:
 Input: nums = [1,5,4,5]Output: 16Explanation: Choosing the indices i=1 and j=3 (indexed from 0), you will get the maximum value of(5-1)*(5-1) = 16.
 Example 3:
 Input: nums = [3,7]Output: 12
 Constraints:
 2 <= nums.length <= 5001 <= nums[i] <= 10^3",0
246,MaximumProductOfWordLengths,"Given a string array words, find the maximum value of length(word[i]) *length(word[j]) where the two words do not share common letters.You may assume that each word will contain only lower case letters.If no such two words exist, return 0.
 Example 1:
 Given [""abcw"", ""baz"", ""foo"", ""bar"", ""xtfn"", ""abcdef""]Return 16The two words can be ""abcw"", ""xtfn"".
 Example 2:
 Given [""a"", ""ab"", ""abc"", ""d"", ""cd"", ""bcd"", ""abcd""]Return 4The two words can be ""ab"", ""cd"".
 Example 3:
 Given [""a"", ""aa"", ""aaa"", ""aaaa""]Return 0No such pair of words.
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",0
247,maximumProductSubarray,"Find the contiguous subarray within an array (containing at least one number)which has the largest product.
 For example, given the array [2,3,-2,4],the contiguous subarray [2,3] has the largest product = 6.
 More examples:
 Input: arr[] = {6, -3, -10, 0, 2}Output: 180 // The subarray is {6, -3, -10}
 Input: arr[] = {-1, -3, -10, 0, 60}Output: 60 // The subarray is {60}
 Input: arr[] = {-2, -3, 0, -2, -40}Output: 80 // The subarray is {-2, -40}",0
248,MaximumScoreFromPerformingMultiplicationOperations,"You are given two integer arrays nums and multipliers of size n and m respectively, where n >= m.The arrays are 1-indexed.
 You begin with a score of 0. You want to perform exactly m operations. On the i^th operation(1-indexed), you will:
 Choose one integer x from either the start or the end of the array nums.Add multipliers[i] * x to your score.Remove x from the array nums.
 Return the maximum score after performing m operations.
 Example 1:
 Input: nums = [1,2,3], multipliers = [3,2,1]Output: 14Explanation: An optimal solution is as follows:- Choose from the end, [1,2,3], adding 3 * 3 = 9 to the score.- Choose from the end, [1,2], adding 2 * 2 = 4 to the score.- Choose from the end, [1], adding 1 * 1 = 1 to the score.The total score is 9 + 4 + 1 = 14.
 Example 2:
 Input: nums = [-5,-3,-3,-2,7,1], multipliers = [-10,-5,3,4,6]Output: 102Explanation: An optimal solution is as follows:- Choose from the start, [-5,-3,-3,-2,7,1], adding -5 * -10 = 50 to the score.- Choose from the start, [-3,-3,-2,7,1], adding -3 * -5 = 15 to the score.- Choose from the start, [-3,-2,7,1], adding -3 * 3 = -9 to the score.- Choose from the end, [-2,7,1], adding 1 * 4 = 4 to the score.- Choose from the end, [-2,7], adding 7 * 6 = 42 to the score.The total score is 50 + 15 - 9 + 4 + 42 = 102.
 Constraints:
 n == nums.lengthm == multipliers.length1 <= m <= 10^3m <= n <= 10^5-1000 <= nums[i], multipliers[i] <= 1000",0
249,MaximumScoreFromRemovingStones,"You are playing a solitaire game with three piles of stones of sizes aâ€‹â€‹â€‹â€‹â€‹â€‹, b,â€‹â€‹â€‹â€‹â€‹â€‹ and câ€‹â€‹â€‹â€‹â€‹â€‹respectively. Each turn you choose two different non-empty piles, take one stone from each, and add1 point to your score. The game stops when there are fewer than two non-empty piles (meaning thereare no more available moves).
 Given three integers aâ€‹â€‹â€‹â€‹â€‹, b,â€‹â€‹â€‹â€‹â€‹ and câ€‹â€‹â€‹â€‹â€‹, return the maximum score you can get.
 Example 1:
 Input: a = 2, b = 4, c = 6Output: 6Explanation: The starting state is (2, 4, 6). One optimal set of moves is:- Take from 1st and 3rd piles, state is now (1, 4, 5)- Take from 1st and 3rd piles, state is now (0, 4, 4)- Take from 2nd and 3rd piles, state is now (0, 3, 3)- Take from 2nd and 3rd piles, state is now (0, 2, 2)- Take from 2nd and 3rd piles, state is now (0, 1, 1)- Take from 2nd and 3rd piles, state is now (0, 0, 0)There are fewer than two non-empty piles, so the game ends. Total: 6 points.
 Example 2:
 Input: a = 4, b = 4, c = 6Output: 7Explanation: The starting state is (4, 4, 6). One optimal set of moves is:- Take from 1st and 2nd piles, state is now (3, 3, 6)- Take from 1st and 3rd piles, state is now (2, 3, 5)- Take from 1st and 3rd piles, state is now (1, 3, 4)- Take from 1st and 3rd piles, state is now (0, 3, 3)- Take from 2nd and 3rd piles, state is now (0, 2, 2)- Take from 2nd and 3rd piles, state is now (0, 1, 1)- Take from 2nd and 3rd piles, state is now (0, 0, 0)There are fewer than two non-empty piles, so the game ends. Total: 7 points.
 Example 3:
 Input: a = 1, b = 8, c = 8Output: 8Explanation: One optimal set of moves is to take from the 2nd and 3rd piles for 8 turns until theyare empty.After that, there are fewer than two non-empty piles, so the game ends.
 Constraints:
 1 <= a, b, c <= 105",2
250,MaximumScoreFromRemovingSubstrings,"You are given a string s and two integers x and y. You can perform two types of operations anynumber of times.
 Remove substring ""ab"" and gain x points.
 For example, when removing ""ab"" from ""cabxbae"" it becomes ""cxbae"".
 Remove substring ""ba"" and gain y points.
 For example, when removing ""ba"" from ""cabxbae"" it becomes ""cabxe"".
 Return the maximum points you can gain after applying the above operations on s.
 Example 1:
 Input: s = ""cdbcbbaaabab"", x = 4, y = 5Output: 19Explanation:- Remove the ""ba"" underlined in ""cdbcbbaaabab"". Now, s = ""cdbcbbaaab"" and 5 points are added to thescore.- Remove the ""ab"" underlined in ""cdbcbbaaab"". Now, s = ""cdbcbbaa"" and 4 points are added to thescore.- Remove the ""ba"" underlined in ""cdbcbbaa"". Now, s = ""cdbcba"" and 5 points are added to the score.- Remove the ""ba"" underlined in ""cdbcba"". Now, s = ""cdbc"" and 5 points are added to the score.Total score = 5 + 4 + 5 + 5 = 19.
 Example 2:
 Input: s = ""aabbaaxybbaabb"", x = 5, y = 4Output: 20
 Constraints:
 1 <= s.length <= 10^51 <= x, y <= 10^4s consists of lowercase English letters.",0
251,MaximumScoreOfAGoodSubarray,"You are given an array of integers nums (0-indexed) and an integer k.
 The score of a subarray (i, j) is defined as min(nums[i], nums[i+1], ..., nums[j]) * (j - i + 1). Agood subarray is a subarray where i <= k <= j.
 Return the maximum possible score of a good subarray.
 Example 1:
 Input: nums = [1,4,3,7,4,5], k = 3Output: 15Explanation: The optimal subarray is (1, 5) with a score of min(4,3,7,4,5) * (5-1+1) = 3 * 5 = 15.
 Example 2:
 Input: nums = [5,5,4,5,4,1,1,1], k = 0Output: 20Explanation: The optimal subarray is (0, 4) with a score of min(5,5,4,5,4) * (4-0+1) = 4 * 5 = 20.
 Constraints:
 1 <= nums.length <= 1051 <= nums[i] <= 2 * 1040 <= k < nums.length",0
252,maximumSubArray,"Find the contiguous subarray within an array (containing at least one number)which has the largest sum.
 For example, given the array [âˆ’2,1,âˆ’3,4,âˆ’1,2,1,âˆ’5,4],the contiguous subarray [4,âˆ’1,2,1] has the largest sum = 6.
 More practice:
 If you have figured out the O(n) solution, try coding another solution usingthe divide and conquer approach, which is more subtle.",0
253,MaximumSubarrayMinProduct,"The min-product of an array is equal to the minimum value in the array multiplied by the array'ssum.
 For example, the array [3,2,5] (minimum value is 2) has a min-product of 2 * (3+2+5) = 2 *10 = 20.
 Given an array of integers nums, return the maximum min-product of any non-empty subarray of nums.Since the answer may be large, return it modulo 10^9 + 7.
 Note that the min-product should be maximized before performing the modulo operation. Testcases aregenerated such that the maximum min-product without modulo will fit in a 64-bit signed integer.
 A subarray is a contiguous part of an array.
 Example 1:
 Input: nums = [1,2,3,2]Output: 14Explanation: The maximum min-product is achieved with the subarray [2,3,2] (minimum value is 2).2 * (2+3+2) = 2 * 7 = 14.
 Example 2:
 Input: nums = [2,3,3,1,2]Output: 18Explanation: The maximum min-product is achieved with the subarray [3,3] (minimum value is 3).3 * (3+3) = 3 * 6 = 18.
 Example 3:
 Input: nums = [3,1,5,6,4,2]Output: 60Explanation: The maximum min-product is achieved with the subarray [5,6,4] (minimum value is 4).4 * (5+6+4) = 4 * 15 = 60.
 Constraints:
 1 <= nums.length <= 10^51 <= nums[i] <= 10^7",0
254,MaximumUnitsOnATruck,"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes,where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:
 numberOfBoxesi is the number of boxes of type i.numberOfUnitsPerBoxi is the number of units in each box of the type i.
 You are also given an integer truckSize, which is the maximum number of boxes that can be put onthe truck. You can choose any boxes to put on the truck as long as the number of boxes does notexceed truckSize.
 Return the maximum total number of units that can be put on the truck.
 Example 1:
 Input: boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4Output: 8Explanation: There are:- 1 box of the first type that contains 3 units.- 2 boxes of the second type that contain 2 units each.- 3 boxes of the third type that contain 1 unit each.You can take all the boxes of the first and second types, and one box of the third type.The total number of units will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.
 Example 2:
 Input: boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10Output: 91
 Constraints:
 1 <= boxTypes.length <= 10001 <= numberOfBoxesi, numberOfUnitsPerBoxi <= 10001 <= truckSize <= 10^6",0
255,MaximumValueAfterInsertion,"You are given a very large integer n, represented as a string, and an integer digit x. Thedigits in n and the digit x are in the inclusive range [1, 9], and n may represent a negativenumber.
 You want to maximize n's numerical value by inserting x anywhere in the decimal representation of n. You cannot insert x to the left of the negative sign.
 For example, if n = 73 and x = 6, it would be best to insert it between 7 and 3, making n = 763.If n = -55 and x = 2, it would be best to insert it before the first 5, making n = -255.
 Return a string representing the maximum value of n after the insertion.
 Example 1:
 Input: n = ""99"", x = 9Output: ""999""Explanation: The result is the same regardless of where you insert 9.
 Example 2:
 Input: n = ""-13"", x = 2Output: ""-123""Explanation: You can make n one of {-213, -123, -132}, and the largest of those three is -123.
 Constraints:
 1 <= n.length <= 10^51 <= x <= 9The digits in n are in the range [1, 9].n is a valid representation of an integer.In the case of a negative n, it will begin with '-'.",0
256,MaximumValueAtAGivenIndexInABoundedArray,"You are given three positive integers n, index and maxSum. You want to construct an array nums(0-indexed) that satisfies the following conditions:
 nums.length == nnums[i] is a positive integer where 0 <= i < n.abs(nums[i] - nums[i+1]) <= 1 where 0 <= i < n-1.The sum of all the elements of nums does not exceed maxSum.nums[index] is maximized.
 Return nums[index] of the constructed array.
 Note that abs(x) equals x if x >= 0, and -x otherwise.
 Example 1:
 Input: n = 4, index = 2, maxSum = 6Output: 2Explanation: The arrays [1,1,2,1] and [1,2,2,1] satisfy all the conditions. There are no othervalid arrays with a larger value at the given index.
 Example 2:
 Input: n = 6, index = 1, maxSum = 10Output: 3
 Constraints:
 1 <= n <= maxSum <= 1090 <= index < n",2
257,MaximumXorForEachQuery,"You are given a sorted array nums of n non-negative integers and an integer maximumBit. You want toperform the following query n times:
 Find a non-negative integer k < 2^maximumBit such that nums[0] XOR nums[1] XOR ... XORnums[nums.length-1] XOR k is maximized. k is the answer to the i^th query.Remove the last element from the current array nums.
 Return an array answer, where answer[i] is the answer to the i^th query.
 Example 1:
 Input: nums = [0,1,1,3], maximumBit = 2Output: [0,3,2,3]Explanation: The queries are answered as follows:1^st query: nums = [0,1,1,3], k = 0 since 0 XOR 1 XOR 1 XOR 3 XOR 0 = 3.2^nd query: nums = [0,1,1], k = 3 since 0 XOR 1 XOR 1 XOR 3 = 3.3^rd query: nums = [0,1], k = 2 since 0 XOR 1 XOR 2 = 3.4^th query: nums = [0], k = 3 since 0 XOR 3 = 3.
 Example 2:
 Input: nums = [2,3,4,7], maximumBit = 3Output: [5,2,6,5]Explanation: The queries are answered as follows:1^st query: nums = [2,3,4,7], k = 5 since 2 XOR 3 XOR 4 XOR 7 XOR 5 = 7.2^nd query: nums = [2,3,4], k = 2 since 2 XOR 3 XOR 4 XOR 2 = 7.3^rd query: nums = [2,3], k = 6 since 2 XOR 3 XOR 6 = 7.4^th query: nums = [2], k = 5 since 2 XOR 5 = 7.
 Example 3:
 Input: nums = [0,1,2,2,5,7], maximumBit = 3Output: [4,3,6,4,6,7]
 Constraints:
 nums.length == n1 <= n <= 10^51 <= maximumBit <= 200 <= nums[i] < 2^maximumBitnumsâ€‹â€‹â€‹ is sorted in ascending order.",0
258,maxPointsOnALine,"Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.",2
259,medianOfTwoSortedArrays,There are two sorted arrays A and B of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).,2
260,mergeIntervals,"Given a collection of intervals, merge all overlapping intervals.
 For example,Given [1,3],[2,6],[8,10],[15,18],return [1,6],[8,10],[15,18].",0
261,mergeKSortedLists,Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.,2
262,MergeStringsAlternately,"You are given two strings word1 and word2. Merge the strings by adding letters in alternatingorder, starting with word1. If a string is longer than the other, append the additional lettersonto the end of the merged string.
 Return the merged string.
 Example 1:
 Input: word1 = ""abc"", word2 = ""pqr""Output: ""apbqcr""Explanation: The merged string will be merged as so:word1: a b cword2: p q rmerged: a p b q c r
 Example 2:
 Input: word1 = ""ab"", word2 = ""pqrs""Output: ""apbqrs""Explanation: Notice that as word2 is longer, ""rs"" is appended to the end.word1: a bword2: p q r smerged: a p b q r s
 Example 3:
 Input: word1 = ""abcd"", word2 = ""pq""Output: ""apbqcd""Explanation: Notice that as word1 is longer, ""cd"" is appended to the end.word1: a b c dword2: p qmerged: a p b q c d
 Constraints:
 1 <= word1.length, word2.length <= 100word1 and word2 consist of lowercase English letters.",0
263,mergeTwoSortedArray,"Given two sorted integer arrays A and B, merge B into A as one sorted array.
 Note:You may assume that A has enough space (size that is greater or equal to m + n)to hold additional elements from B. The number of elements initialized in A and Bare m and n respectively.",0
264,mergeTwoSortedList,Merge two sorted linked lists and return it as a new list. The new list should bemade by splicing together the nodes of the first two lists.,2
265,MinCostClimbingStairs,"On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed).
 Once you pay the cost, you can either climb one or two steps. You need to find minimum cost toreach the top of the floor, and you can either start from the step with index 0, or the step withindex 1.
 Example 1:
 Input: cost = [10, 15, 20]Output: 15Explanation: Cheapest is start on cost[1], pay that cost and go to the top.
 Example 2:
 Input: cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]Output: 6Explanation: Cheapest is start on cost[0], and only step on 1s, skipping cost[3].
 Note:
 cost will have a length in the range [2, 1000].Every cost[i] will be an integer in the range [0, 999].",0
266,MinimumAbsoluteSumDifference,"You are given two positive integer arrays nums1 and nums2, both of length n.
 The absolute sum difference of arrays nums1 and nums2 is defined as the sum of |nums1[i] -nums2[i]| for each 0 <= i < n (0-indexed).
 You can replace at most one element of nums1 with any other element in nums1 to minimize theabsolute sum difference.
 Return the minimum absolute sum difference after replacing at most one element in the array nums1.Since the answer may be large, return it modulo 10^9 + 7.
 |x| is defined as:
 x if x >= 0, or-x if x < 0.
 Example 1:
 Input: nums1 = [1,7,5], nums2 = [2,3,5]Output: 3Explanation: There are two possible optimal solutions:- Replace the second element with the first: [1,7,5] => [1,1,5], or- Replace the second element with the third: [1,7,5] => [1,5,5].Both will yield an absolute sum difference of |1-2| + (|1-3| or |5-3|) + |5-5| = 3.
 Example 2:
 Input: nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]Output: 0Explanation: nums1 is equal to nums2 so no replacement is needed. This will result in anabsolute sum difference of 0.
 Example 3:
 Input: nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]Output: 20Explanation: Replace the first element with the second: [1,10,4,4,2,7] => [10,10,4,4,2,7].This yields an absolute sum difference of |10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20
 Constraints:
 n == nums1.lengthn == nums2.length1 <= n <= 10^51 <= nums1[i], nums2[i] <= 10^5",0
267,MinimumAdjacentSwapsToReachTheKthSmallestNumber,"You are given a string num, representing a large integer, and an integer k.
 We call some integer wonderful if it is a permutation of the digits in num and is greater in valuethan num. There can be many wonderful integers. However, we only care about the smallest-valuedones.
 For example, when num = ""5489355142"":
 The 1^st smallest wonderful integer is ""5489355214"".The 2^nd smallest wonderful integer is ""5489355241"".The 3^rd smallest wonderful integer is ""5489355412"".The 4^th smallest wonderful integer is ""5489355421"".
 Return the minimum number of adjacent digit swaps that needs to be applied to num to reach the k^thsmallest wonderful integer.
 The tests are generated in such a way that k^th smallest wonderful integer exists.
 Example 1:
 Input: num = ""5489355142"", k = 4Output: 2Explanation: The 4^th smallest wonderful number is ""5489355421"". To get this number:- Swap index 7 with index 8: ""5489355142"" -> ""5489355412""- Swap index 8 with index 9: ""5489355412"" -> ""5489355421""
 Example 2:
 Input: num = ""11112"", k = 4Output: 4Explanation: The 4^th smallest wonderful number is ""21111"". To get this number:- Swap index 3 with index 4: ""11112"" -> ""11121""- Swap index 2 with index 3: ""11121"" -> ""11211""- Swap index 1 with index 2: ""11211"" -> ""12111""- Swap index 0 with index 1: ""12111"" -> ""21111""
 Example 3:
 Input: num = ""00123"", k = 1Output: 1Explanation: The 1^st smallest wonderful number is ""00132"". To get this number:- Swap index 3 with index 4: ""00123"" -> ""00132""
 Constraints:
 2 <= num.length <= 10001 <= k <= 1000num only consists of digits.",2
268,MinimumAsciiDeleteSumForTwoStrings,"Given two strings s1, s2, find the lowest ASCII sum of deleted characters to make two strings equal.
 Example 1:
 Input: s1 = ""sea"", s2 = ""eat""Output: 231Explanation: Deleting ""s"" from ""sea"" adds the ASCII value of ""s"" (115) to the sum.Deleting ""t"" from ""eat"" adds 116 to the sum.At the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.
 Example 2:
 Input: s1 = ""delete"", s2 = ""leet""Output: 403Explanation: Deleting ""dee"" from ""delete"" to turn the string into ""let"",adds 100[d]+101[e]+101[e] to the sum. Deleting ""e"" from ""leet"" adds 101[e] to the sum.At the end, both strings are equal to ""let"", and the answer is 100+101+101+101 = 403.If instead we turned both strings into ""lee"" or ""eet"", we would get answers of 433 or 417, whichare higher.
 Note:0 .All elements of each string will have an ASCII value in [97, 122].",0
269,MinimumChangesToMakeAlternatingBinaryString,"You are given a string s consisting only of the characters '0' and '1'. In one operation, you canchange any '0' to '1' or vice versa.
 The string is called alternating if no two adjacent characters are equal. For example, the string""010"" is alternating, while the string ""0100"" is not.
 Return the minimum number of operations needed to make s alternating.
 Example 1:
 Input: s = ""0100""Output: 1Explanation: If you change the last character to '1', s will be ""0101"", which is alternating.
 Example 2:
 Input: s = ""10""Output: 0Explanation: s is already alternating.
 Example 3:
 Input: s = ""1111""Output: 2Explanation: You need two operations to reach ""0101"" or ""1010"".
 Constraints:
 1 <= s.length <= 104s[i] is either '0' or '1'.",0
270,MinimumCostForTickets,"In a country popular for train travel, you have planned some train travelling one year in advance.The days of the year that you will travel is given as an array days. Each day is an integer from 1to 365.
 Train tickets are sold in 3 different ways:
 a 1-day pass is sold for costs[0] dollars;a 7-day pass is sold for costs[1] dollars;a 30-day pass is sold for costs[2] dollars.
 The passes allow that many days of consecutive travel. For example, if we get a 7-day pass on day2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7, and 8.
 Return the minimum number of dollars you need to travel every day in the given list of days.
 Example 1:
 Input: days = [1,4,6,7,8,20], costs = [2,7,15]Output: 11Explanation:For example, here is one way to buy passes that lets you travel your travel plan:On day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.On day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.On day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.In total you spent $11 and covered all the days of your travel.
 Example 2:
 Input: days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]Output: 17Explanation:For example, here is one way to buy passes that lets you travel your travel plan:On day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.On day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.In total you spent $17 and covered all the days of your travel.
 Note:
 1 <= days.length <= 3651 <= days[i] <= 365days is in strictly increasing order.costs.length == 31 <= costs[i] <= 1000",2
271,MinimumDegreeOfAConnectedTrioInAGraph,"You are given an undirected graph. You are given an integer n which is the number of nodes in thegraph and an array edges, where each edges[i] = [ui, vi] indicates that there is an undirected edgebetween ui and vi.
 A connected trio is a set of three nodes where there is an edge between every pair of them.
 The degree of a connected trio is the number of edges where one endpoint is in the trio, and theother is not.
 Return the minimum degree of a connected trio in the graph, or -1 if the graph has no connectedtrios.
 Example 1:
 Input: n = 6, edges = [[1,2],[1,3],[3,2],[4,1],[5,2],[3,6]]Output: 3Explanation: There is exactly one trio, which is [1,2,3]. The edges that form its degree are boldedin the figure above.
 Example 2:
 Input: n = 7, edges = [[1,3],[4,1],[4,3],[2,5],[5,6],[6,7],[7,5],[2,6]]Output: 0Explanation: There are exactly three trios:1) [1,4,3] with degree 0.2) [2,5,6] with degree 2.3) [5,6,7] with degree 2.
 Constraints:
 2 <= n <= 400edges[i].length == 21 <= edges.length <= n * (n-1) / 21 <= ui, vi <= nui != viThere are no repeated edges.",0
272,minimumDepthOfBinaryTree,"Given a binary tree, find its minimum depth.
 The minimum depth is the number of nodes along the shortest path from the root nodedown to the nearest leaf node.",0
273,MinimumDistanceToTheTargetElement,"Given an integer array nums (0-indexed) and two integers target and start, find an index i suchthat nums[i] == target and abs(i - start) is minimized. Note that abs(x) is the absolute value of x.
 Return abs(i - start).
 It is guaranteed that target exists in nums.
 Example 1:
 Input: nums = [1,2,3,4,5], target = 5, start = 3Output: 1Explanation: nums[4] = 5 is the only value equal to target, so the answer is abs(4 - 3) = 1.
 Example 2:
 Input: nums = [1], target = 1, start = 0Output: 0Explanation: nums[0] = 1 is the only value equal to target, so the answer is abs(0 - 0) = 1.
 Example 3:
 Input: nums = [1,1,1,1,1,1,1,1,1,1], target = 1, start = 0Output: 0Explanation: Every value of nums is 1, but nums[0] minimizes abs(i - start), which is abs(0 - 0) =0.
 Constraints:
 1 <= nums.length <= 10001 <= nums[i] <= 10^40 <= start < nums.lengthtarget is in nums.",0
274,MinimumElementsToAddToFormAGivenSum,"You are given an integer array nums and two integers limit and goal. The array nums has aninteresting property that abs(nums[i]) <= limit.
 Return the minimum number of elements you need to add to make the sum of the array equal to goal.The array must maintain its property that abs(nums[i]) <= limit.
 Note that abs(x) equals x if x >= 0, and -x otherwise.
 Example 1:
 Input: nums = [1,-1,1], limit = 3, goal = -4Output: 2Explanation: You can add -2 and -3, then the sum of the array will be 1 - 1 + 1 - 2 - 3 = -4.
 Example 2:
 Input: nums = [1,-10,9,1], limit = 100, goal = 0Output: 1
 Constraints:
 1 <= nums.length <= 1051 <= limit <= 106-limit <= nums[i] <= limit-109 <= goal <= 109",0
275,MinimumFallingPathSum,"Given a square array of integers A, we want the minimum sum of a falling path through A.
 A falling path starts at any element in the first row, and chooses one element from each row. Thenext row's choice must be in a column that is different from the previous row's column by at mostone.
 Example 1:
 Input: [[1,2,3],[4,5,6],[7,8,9]]Output: 12Explanation:The possible falling paths are:
 [1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9][2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9][3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]
 The falling path with the smallest sum is [1,4,7], so the answer is 12.
 Note:
 1 <= A.length == A[0].length <= 100-100 <= A[i][j] <= 100",0
276,MinimumInsertionsToBalanceAParenthesesString,"Given a parentheses string s containing only the characters '(' and ')'. A parentheses string isbalanced if:
 Any left parenthesis '(' must have a corresponding two consecutive right parenthesis '))'.Left parenthesis '(' must go before the corresponding two consecutive right parenthesis'))'.
 In other words, we treat '(' as openning parenthesis and '))' as closing parenthesis.
 For example, ""())"", ""())(())))"" and ""(())())))"" are balanced, "")()"", ""()))"" and ""(()))"" are notbalanced.
 You can insert the characters '(' and ')' at any position of the string to balance it if needed.
 Return the minimum number of insertions needed to make s balanced.
 Example 1:
 Input: s = ""(()))""Output: 1Explanation: The second '(' has two matching '))', but the first '(' has only ')' matching. We needto to add one more ')' at the end of the string to be ""(())))"" which is balanced.
 Example 2:
 Input: s = ""())""Output: 0Explanation: The string is already balanced.
 Example 3:
 Input: s = ""))())(""Output: 3Explanation: Add '(' to match the first '))', Add '))' to match the last '('.
 Example 4:
 Input: s = ""((((((""Output: 12Explanation: Add 12 ')' to balance the string.
 Example 5:
 Input: s = "")))))))""Output: 5Explanation: Add 4 '(' at the beginning of the string and one ')' at the end. The string becomes""(((())))))))"".
 Constraints:
 1 <= s.length <= 10^5s consists of '(' and ')' only.",0
277,MinimumIntervalToIncludeEachQuery,"You are given a 2D integer array intervals, where intervals[i] = [lefti, righti] describes the i^thinterval starting at lefti and ending at righti (inclusive). The size of an interval is defined asthe number of integers it contains, or more formally righti - lefti + 1.
 You are also given an integer array queries. The answer to the j^th query is the size of thesmallest interval i such that lefti <= queries[j] <= righti. If no such interval exists, the answeris -1.
 Return an array containing the answers to the queries.
 Example 1:
 Input: intervals = [[1,4],[2,4],[3,6],[4,4]], queries = [2,3,4,5]Output: [3,3,1,4]Explanation: The queries are processed as follows:- Query = 2: The interval [2,4] is the smallest interval containing 2. The answer is 4 - 2 + 1 = 3.- Query = 3: The interval [2,4] is the smallest interval containing 3. The answer is 4 - 2 + 1 = 3.- Query = 4: The interval [4,4] is the smallest interval containing 4. The answer is 4 - 4 + 1 = 1.- Query = 5: The interval [3,6] is the smallest interval containing 5. The answer is 6 - 3 + 1 = 4.
 Example 2:
 Input: intervals = [[2,3],[2,5],[1,8],[20,25]], queries = [2,19,5,22]Output: [2,-1,4,6]Explanation: The queries are processed as follows:- Query = 2: The interval [2,3] is the smallest interval containing 2. The answer is 3 - 2 + 1 = 2.- Query = 19: None of the intervals contain 19. The answer is -1.- Query = 5: The interval [2,5] is the smallest interval containing 5. The answer is 5 - 2 + 1 = 4.- Query = 22: The interval [20,25] is the smallest interval containing 22. The answer is 25 - 20 +1 = 6.
 Constraints:
 1 <= intervals.length <= 10^51 <= queries.length <= 10^5queries[i].length == 21 <= lefti <= righti <= 10^71 <= queries[j] <= 10^7",0
278,MinimumLengthOfStringAfterDeletingSimilarEnds,"Given a string s consisting only of characters 'a', 'b', and 'c'. You are asked to apply thefollowing algorithm on the string any number of times:
 Pick a non-empty prefix from the string s where all the characters in the prefix are equal.Pick a non-empty suffix from the string s where all the characters in this suffix are equal.The prefix and the suffix should not intersect at any index.The characters from the prefix and suffix must be the same.Delete both the prefix and the suffix.
 Return the minimum length of s after performing the above operation any number of times (possiblyzero times).
 Example 1:
 Input: s = ""ca""Output: 2Explanation: You can't remove any characters, so the string stays as is.
 Example 2:
 Input: s = ""cabaabac""Output: 0Explanation: An optimal sequence of operations is:- Take prefix = ""c"" and suffix = ""c"" and remove them, s = ""abaaba"".- Take prefix = ""a"" and suffix = ""a"" and remove them, s = ""baab"".- Take prefix = ""b"" and suffix = ""b"" and remove them, s = ""aa"".- Take prefix = ""a"" and suffix = ""a"" and remove them, s = """".
 Example 3:
 Input: s = ""aabccabba""Output: 3Explanation: An optimal sequence of operations is:- Take prefix = ""aa"" and suffix = ""a"" and remove them, s = ""bccabb"".- Take prefix = ""b"" and suffix = ""bb"" and remove them, s = ""cca"".
 Constraints:
 1 <= s.length <= 105s only consists of characters 'a', 'b', and 'c'.",0
279,MinimumLimitOfBallsInABag,"You are given an integer array nums where the ith bag contains nums[i] balls. You are also given aninteger maxOperations.
 You can perform the following operation at most maxOperations times:
 Take any bag of balls and divide it into two new bags with a positive number of balls.
 For example, a bag of 5 balls can become two new bags of 1 and 4 balls, or two newbags of 2 and 3 balls.
 Your penalty is the maximum number of balls in a bag. You want to minimize your penalty after theoperations.
 Return the minimum possible penalty after performing the operations.
 Example 1:
 Input: nums = [9], maxOperations = 2Output: 3Explanation:- Divide the bag with 9 balls into two bags of sizes 6 and 3. [9] -> [6,3].- Divide the bag with 6 balls into two bags of sizes 3 and 3. [6,3] -> [3,3,3].The bag with the most number of balls has 3 balls, so your penalty is 3 and you should return 3.
 Example 2:
 Input: nums = [2,4,8,2], maxOperations = 4Output: 2Explanation:- Divide the bag with 8 balls into two bags of sizes 4 and 4. [2,4,8,2] -> [2,4,4,4,2].- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,4,4,4,2] -> [2,2,2,4,4,2].- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,4,4,2] -> [2,2,2,2,2,4,2].- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,2,2,4,2] -> [2,2,2,2,2,2,2,2].The bag with the most number of balls has 2 balls, so your penalty is 2 an you should return 2.
 Example 3:
 Input: nums = [7,17], maxOperations = 2Output: 7
 Constraints:
 1 <= nums.length <= 1051 <= maxOperations, nums[i] <= 109",0
280,MinimumNumberOfOperationsToMoveAllBallsToEachBox,"You have n boxes. You are given a binary string boxes of length n, where boxes[i] is '0' if the ithbox is empty, and '1' if it contains one ball.
 In one operation, you can move one ball from a box to an adjacent box. Box i is adjacent to box jif abs(i - j) == 1. Note that after doing so, there may be more than one ball in some boxes.
 Return an array answer of size n, where answer[i] is the minimum number of operations needed tomove all the balls to the ith box.
 Each answer[i] is calculated considering the initial state of the boxes.
 Example 1:
 Input: boxes = ""110""Output: [1,1,3]Explanation: The answer for each box is as follows:1) First box: you will have to move one ball from the second box to the first box in one operation.2) Second box: you will have to move one ball from the first box to the second box in one operation.3) Third box: you will have to move one ball from the first box to the third box in two operations,and move one ball from the second box to the third box in one operation.
 Example 2:
 Input: boxes = ""001011""Output: [11,8,5,4,3,4]
 Constraints:
 n == boxes.length1 <= n <= 2000boxes[i] is either '0' or '1'.",0
281,MinimumNumberOfOperationsToReinitializeAPermutation,"You are given an even integer n. You initially have a permutation perm of size n whereperm[i] == i (0-indexed).
 In one operation, you will create a new array arr, and for each i:
 If i % 2 == 0, then arr[i] = perm[i / 2].If i % 2 == 1, then arr[i] = perm[n / 2 + (i - 1) / 2].
 You will then assign arr to perm.
 Return the minimum non-zero number of operations you need to perform on perm to return thepermutation to its initial value.
 Example 1:
 Input: n = 2Output: 1Explanation: prem = [0,1] initially.After the 1^st operation, prem = [0,1]So it takes only 1 operation.
 Example 2:
 Input: n = 4Output: 2Explanation: prem = [0,1,2,3] initially.After the 1^st operation, prem = [0,2,1,3]After the 2^nd operation, prem = [0,1,2,3]So it takes only 2 operations.
 Example 3:
 Input: n = 6Output: 4
 Constraints:
 2 <= n <= 1000n is even.",0
282,MinimumNumberOfPeopleToTeach,"On a social network consisting of m users and some friendships between users, two users cancommunicate with each other if they know a common language.
 You are given an integer n, an array languages, and an array friendships where:
 There are n languages numbered 1 through n,languages[i] is the set of languages the iâ€‹â€‹â€‹â€‹â€‹â€‹thâ€‹â€‹â€‹â€‹ user knows, andfriendships[i] = [uâ€‹â€‹â€‹â€‹â€‹â€‹iâ€‹â€‹â€‹, vâ€‹â€‹â€‹â€‹â€‹â€‹i] denotes a friendship between the users uâ€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹iâ€‹â€‹â€‹â€‹â€‹ and vi.
 You can choose one language and teach it to some users so that all friends can communicate witheach other. Return the minimum number of users you need to teach.Note that friendships are not transitive, meaning if x is a friend of y and y is a friend of z,this doesn't guarantee that x is a friend of z.
 Example 1:
 Input: n = 2, languages = [[1],[2],[1,2]], friendships = [[1,2],[1,3],[2,3]]Output: 1Explanation: You can either teach user 1 the second language or user 2 the first language.
 Example 2:
 Input: n = 3, languages = [[2],[1,3],[1,2],[3]], friendships = [[1,4],[1,2],[3,4],[2,3]]Output: 2Explanation: Teach the third language to users 1 and 3, yielding two users to teach.
 Constraints:
 2 <= n <= 500languages.length == m1 <= m <= 5001 <= languages[i].length <= n1 <= languages[i][j] <= n1 <= uâ€‹â€‹â€‹â€‹â€‹â€‹i < vâ€‹â€‹â€‹â€‹â€‹â€‹i <= languages.length1 <= friendships.length <= 500All tuples (uâ€‹â€‹â€‹â€‹â€‹i, vâ€‹â€‹â€‹â€‹â€‹â€‹i) are uniquelanguages[i] contains only unique values",0
283,MinimumOperationsToMakeArrayEqual,"You have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e. 0 <= i< n).
 In one operation, you can select two indices x and y where 0 <= x, y < n and subtract 1 from arr[x]and add 1 to arr[y] (i.e. perform arr[x] -=1 and arr[y] += 1). The goal is to make all the elementsof the array equal. It is guaranteed that all the elements of the array can be made equal usingsome operations.
 Given an integer n, the length of the array. Return the minimum number of operations needed to makeall the elements of arr equal.
 Example 1:
 Input: n = 3Output: 2Explanation: arr = [1, 3, 5]First operation choose x = 2 and y = 0, this leads arr to be [2, 3, 4]In the second operation choose x = 2 and y = 0 again, thus arr = [3, 3, 3].
 Example 2:
 Input: n = 6Output: 9
 Constraints:
 1 <= n <= 10^4",0
284,MinimumOperationsToMakeTheArrayIncreasing,"You are given an integer array nums (0-indexed). In one operation, you can choose an element of thearray and increment it by 1.
 For example, if nums = [1,2,3], you can choose to increment nums[1] to make nums = [1,3,3].
 Return the minimum number of operations needed to make nums strictly increasing.
 An array nums is strictly increasing if nums[i] < nums[i+1] for all 0 <= i < nums.length - 1. Anarray of length 1 is trivially strictly increasing.
 Example 1:
 Input: nums = [1,1,1]Output: 3Explanation: You can do the following operations:1) Increment nums[2], so nums becomes [1,1,2].2) Increment nums[1], so nums becomes [1,2,2].3) Increment nums[2], so nums becomes [1,2,3].
 Example 2:
 Input: nums = [1,5,2,4,1]Output: 14
 Example 3:
 Input: nums = [8]Output: 0
 Constraints:
 1 <= nums.length <= 50001 <= nums[i] <= 10^4",0
285,minimumPathSum,"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom rightwhich minimizes the sum of all numbers along its path.
 Note: You can only move either down or right at any point in time.
 Example:
 Input:[[1,3,1],[1,5,1],[4,2,1]]Output: 7Explanation: Because the path 1&rarr;3&rarr;1&rarr;1&rarr;1 minimizes the sum.",0
286,MinimumSidewayJumps,"There is a 3 lane road of length n that consists of n + 1 points labeled from 0 to n. A frog startsat point 0 in the second lane and wants to jump to point n. However, there could be obstacles alongthe way.
 You are given an array obstacles of length n + 1 where each obstacles[i] (ranging from 0 to 3)describes an obstacle on the lane obstacles[i] at point i. If obstacles[i] == 0, there are noobstacles at point i. There will be at most one obstacle in the 3 lanes at each point.
 For example, if obstacles[2] == 1, then there is an obstacle on lane 1 at point 2.
 The frog can only travel from point i to point i + 1 on the same lane if there is not an obstacleon the lane at point i + 1. To avoid obstacles, the frog can also perform a side jump to jump toanother lane (even if they are not adjacent) at the same point if there is no obstacle on the newlane.
 For example, the frog can jump from lane 3 at point 3 to lane 1 at point 3.
 Return the minimum number of side jumps the frog needs to reach any lane at point n starting fromlane 2 at point 0.
 Note: There will be no obstacles on points 0 and n.
 Example 1:
 Input: obstacles = [0,1,2,3,0]Output: 2Explanation: The optimal solution is shown by the arrows above. There are 2 side jumps (red arrows).Note that the frog can jump over obstacles only when making side jumps (as shown at point 2).
 Example 2:
 Input: obstacles = [0,1,1,3,3,0]Output: 0Explanation: There are no obstacles on lane 2. No side jumps are required.
 Example 3:
 Input: obstacles = [0,2,1,0,3,0]Output: 2Explanation: The optimal solution is shown by the arrows above. There are 2 side jumps.
 Constraints:
 obstacles.length == n + 11 <= n <= 5 * 10^50 <= obstacles[i] <= 3obstacles[0] == obstacles[n] == 0",2
287,MinimumSizeSubarraySum,"Given an array of n positive integers and a positive integer s, find the minimal length of a subarrayof which the sum â‰¥ s. If there isn't one, return 0 instead.
 For example, given the array [2,3,1,2,4,3] and s = 7,the subarray [4,3] has the minimal length under the problem constraint.
 click to show more practice.
 More practice:
 If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n).
 Credits:Special thanks to @Freezen for adding this problem and creating all test cases.",0
288,MinimumSpeedToArriveOnTime,"You are given a floating-point number hour, representing the amount of time you have to reach theoffice. To commute to the office, you must take n trains in sequential order. You are also given aninteger array dist of length n, where dist[i] describes the distance (in kilometers) of the i^thtrain ride.
 Each train can only depart at an integer hour, so you may need to wait in between each train ride.
 For example, if the 1^st train ride takes 1.5 hours, you must wait for an additional 0.5hours before you can depart on the 2^nd train ride at the 2 hour mark.
 Return the minimum positive integer speed (in kilometers per hour) that all the trains must travelat for you to reach the office on time, or -1 if it is impossible to be on time.
 Tests are generated such that the answer will not exceed 10^7 and hour will have at most two digitsafter the decimal point.
 Example 1:
 Input: dist = [1,3,2], hour = 6Output: 1Explanation: At speed 1:- The first train ride takes 1/1 = 1 hour.- Since we are already at an integer hour, we depart immediately at the 1 hour mark. The secondtrain takes 3/1 = 3 hours.- Since we are already at an integer hour, we depart immediately at the 4 hour mark. The thirdtrain takes 2/1 = 2 hours.- You will arrive at exactly the 6 hour mark.
 Example 2:
 Input: dist = [1,3,2], hour = 2.7Output: 3Explanation: At speed 3:- The first train ride takes 1/3 = 0.33333 hours.- Since we are not at an integer hour, we wait until the 1 hour mark to depart. The second trainride takes 3/3 = 1 hour.- Since we are already at an integer hour, we depart immediately at the 2 hour mark. The thirdtrain takes 2/3 = 0.66667 hours.- You will arrive at the 2.66667 hour mark.
 Example 3:
 Input: dist = [1,3,2], hour = 1.9Output: -1Explanation: It is impossible because the earliest the third train can depart is at the 2 hour mark.
 Constraints:
 n == dist.length1 <= n <= 10^51 <= dist[i] <= 10^51 <= hour <= 10^9There will be at most two digits after the decimal point in hour.",0
289,minimumWindowSubstring,"Given a string S and a string T, find the minimum window in S which willcontain all the characters in T in complexity O(n).
 For example,S = ""ADOBECODEBANC""T = ""ABC""
 Minimum window is ""BANC"".
 Note:
 > If there is no such window in S that covers all characters in T,return the emtpy string """".
 > If there are multiple such windows, you are guaranteed that therewill always be only one unique minimum window in S.",2
290,MiniParser,"Given a nested list of integers represented as a string, implement a parser todeserialize it.
 Each element is either an integer, or a list -- whose elements may also be integersor other lists.
 Note:You may assume that the string is well-formed:
 String is non-empty.String does not contain white spaces.String contains only digits 0-9, [, - ,, ].
 Example 1:
 Given s = ""324"",
 You should return a NestedInteger object which contains a single integer 324.
 Example 2:
 Given s = ""[123,[456,[789]]]"",
 Return a NestedInteger object containing a nested list with 2 elements:
 1. An integer containing value 123.2. A nested list containing two elements:i. An integer containing value 456.ii. A nested list with one element:a. An integer containing value 789.",2
291,minStack,"Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
 push(x) -- Push element x onto stack.
 pop() -- Removes the element on top of the stack.
 top() -- Get the top element.
 getMin() -- Retrieve the minimum element in the stack.",2
292,MissingNumber,"Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find theone that is missing from the array.
 For example,Given nums = [0, 1, 3] return 2.
 Note:Your algorithm should run in linear runtime complexity. Could you implement it usingonly constant extra space complexity?
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",0
293,missingRanges,"Given a sorted integer array where the range of elements are [lower, upper] inclusive,return its missing ranges.
 For example, given [0, 1, 3, 50, 75], lower = 0 and upper = 99,return [""2"", ""4->49"", ""51->74"", ""76->99""].",2
294,MostCommonWord,"Given a paragraph and a list of banned words, return the most frequent word that isnot in the list of banned words. It is guaranteed there is at least one word thatisn't banned, and that the answer is unique.
 Words in the list of banned words are given in lowercase, and free of punctuation.Words in the paragraph are not case sensitive. The answer is in lowercase.
 
 Example:Input:paragraph = ""Bob hit a ball, the hit BALL flew far after it was hit.""banned = [""hit""]Output: ""ball""Explanation:""hit"" occurs 3 times, but it is a banned word.""ball"" occurs twice (and no other word does), so it is the most frequent non-bannedword in the paragraph.Note that words in the paragraph are not case sensitive,that punctuation is ignored (even if adjacent to words, such as ""ball,""),and that ""hit"" isn't the answer even though it occurs more because it is banned.
 
 
 
 Note:
 
 1 <= paragraph.length <= 1000.1 <= banned.length <= 100.1 <= banned[i].length <= 10.The answer is unique, and written in lowercase (even if its occurrences inparagraph may have uppercase symbols, and even if it is a proper noun.)paragraph only consists of letters, spaces, or the punctuation symbols !?',;.Different words in paragraph are always separated by a space.There are no hyphens or hyphenated words.Words only consist of letters, never apostrophes or other punctuationsymbols.",0
295,moveZeroes,"Given an array nums, write a function to move all 0's to the end of it whilemaintaining the relative order of the non-zero elements.
 For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums shouldbe [1, 3, 12, 0, 0].
 Note:You must do this in-place without making a copy of the array.Minimize the total number of operations.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",0
296,multiplyStrings,"Given two numbers represented as strings, return multiplication of the numbers as a string.
 Note: The numbers can be arbitrarily large and are non-negative.",2
297,nextPermutation,"Implement next permutation, which rearranges numbers into the lexicographically nextgreater permutation of numbers.
 If such arrangement is not possible, it must rearrange it as the lowest possible order(ie, sorted in ascending order).
 The replacement must be in-place, do not allocate extra memory.
 Here are some examples. Inputs are in the left-hand column and its corresponding outputsare in the right-hand column.
 1,2,3 â†’ 1,3,23,2,1 â†’ 1,2,31,1,5 â†’ 1,5,1",2
298,nimGame,"You are playing the following Nim Game with your friend: There is a heap of stoneson the table, each time one of you take turns to remove 1 to 3 stones. The one whoremoves the last stone will be the winner. You will take the first turn to removethe stones.
 Both of you are very clever and have optimal strategies for the game. Write afunction to determine whether you can win the game given the number of stones in theheap.
 For example, if there are 4 stones in the heap, then you will never win the game: nomatter 1, 2, or 3 stones you remove, the last stone will always be removed by yourfriend.
 If there are 5 stones in the heap, could you figure out a way to remove the stonessuch that you will always be the winner?
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",0
299,nQueuens,"The n-queens puzzle is the problem of placing n queens on an nÃ—n chessboardsuch that no two queens attack each other.
 Given an integer n, return all distinct solutions to the n-queens puzzle.
 Each solution contains a distinct board configuration of the n-queens' placement,where 'Q' and '.' both indicate a queen and an empty space respectively.
 For example,There exist two distinct solutions to the 4-queens puzzle:
 [["".Q.."", // Solution 1""...Q"",""Q..."",""..Q.""],
 [""..Q."", // Solution 2""Q..."",""...Q"","".Q..""]]",2
300,nQueuens.II,"Follow up for N-Queens problem.
 Now, instead outputting board configurations, return the total number of distinct solutions.",0
301,N-Repeated-Element-in-Size-2N-Array,"In a array A of size 2N, there are N+1 unique elements, and exactly one of these elements is repeated N times.
 Return the element repeated N times.
 
 
 Example 1:
 Input: [1,2,3,3]Output: 3Example 2:
 Input: [2,1,2,5,3,2]Output: 2Example 3:
 Input: [5,1,5,2,5,3,5,4]Output: 5
 
 Note:
 4 <= A.length <= 100000 <= A[i] < 10000A.length is even",0
302,NthDigit,"Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11, ...
 Note:n is positive and will fit within the range of a 32-bit signed integer (n 31).
 Example 1:
 Input:3
 Output:3
 Example 2:
 Input:11
 Output:0
 Explanation:The 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, whichis part of the number 10.",1
303,numberOf1Bits,"Write a function that takes an unsigned integer and returns the number of â€™1' bits it has(also known as the Hamming weight).
 For example, the 32-bit integer â€™11' has binary representation 00000000000000000000000000001011,so the function should return 3.
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",1
304,NumberOfDifferentIntegersInAString,"You are given a string word that consists of digits and lowercase English letters.
 You will replace every non-digit character with a space. For example, ""a123bc34d8ef34"" will become"" 123 34 8 34"". Notice that you are left with some integers that are separated by at least onespace: ""123"", ""34"", ""8"", and ""34"".
 Return the number of different integers after performing the replacement operations on word.
 Two integers are considered different if their decimal representations without any leading zerosare different.
 Example 1:
 Input: word = ""a123bc34d8ef34""Output: 3Explanation: The three different integers are ""123"", ""34"", and ""8"". Notice that ""34"" is onlycounted once.
 Example 2:
 Input: word = ""leet1234code234""Output: 2
 Example 3:
 Input: word = ""a1b01c001""Output: 1Explanation: The three integers ""1"", ""01"", and ""001"" all represent the same integer becausethe leading zeros are ignored when comparing their decimal values.
 Constraints:
 1 <= word.length <= 1000word consists of digits and lowercase English letters.",1
305,NumberOfDifferentSubsequencesGcds,"You are given an array nums that consists of positive integers.
 The GCD of a sequence of numbers is defined as the greatest integer that divides all the numbers inthe sequence evenly.
 For example, the GCD of the sequence [4,6,16] is 2.
 A subsequence of an array is a sequence that can be formed by removing some elements (possiblynone) of the array.
 For example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].
 Return the number of different GCDs among all non-empty subsequences of nums.
 Example 1:
 Input: nums = [6,10,3]Output: 5Explanation: The figure shows all the non-empty subsequences and their GCDs.The different GCDs are 6, 10, 3, 2, and 1.
 Example 2:
 Input: nums = [5,15,40,5,6]Output: 7
 Constraints:
 1 <= nums.length <= 10^51 <= nums[i] <= 2 * 10^5",1
306,NumberOfDigitOne,"Given an integer n, count the total number of digit 1 appearing in all non-negativeintegers less than or equal to n.
 For example:Given n = 13,Return 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.
 Beware of overflow.",1
307,NumberOfGoodWaysToSplitAString,"You are given a string s, a split is called good if you can split s into 2 non-empty strings p andq where its concatenation is equal to s and the number of distinct letters in p and q are the same.
 Return the number of good splits you can make in s.
 Example 1:
 Input: s = ""aacaba""Output: 2Explanation: There are 5 ways to split ""aacaba"" and 2 of them are good.(""a"", ""acaba"") Left string and right string contains 1 and 3 different letters respectively.(""aa"", ""caba"") Left string and right string contains 1 and 3 different letters respectively.(""aac"", ""aba"") Left string and right string contains 2 and 2 different letters respectively (goodsplit).(""aaca"", ""ba"") Left string and right string contains 2 and 2 different letters respectively (goodsplit).(""aacab"", ""a"") Left string and right string contains 3 and 1 different letters respectively.
 Example 2:
 Input: s = ""abcd""Output: 1Explanation: Split the string as follows (""ab"", ""cd"").
 Example 3:
 Input: s = ""aaaaa""Output: 4Explanation: All possible splits are good.
 Example 4:
 Input: s = ""acbadbaada""Output: 2
 Constraints:
 s contains only lowercase English letters.1 <= s.length <= 10^5",1
308,NumberOfIslands,"Given a 2d grid map of '1's (land) and '0's (water), count the number of islands.An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically.You may assume all four edges of the grid are all surrounded by water.
 Example 1:11110110101100000000Answer: 1
 Example 2:11000110000010000011Answer: 3
 Credits:Special thanks to @mithmatt for adding this problem and creating all test cases.",1
309,NumberOfOrdersInTheBacklog,"You are given a 2D integer array orders, where each orders[i] = [pricei, amounti, orderTypei]denotes that amounti orders have been placed of type orderTypei at the price pricei. The orderTypeiis:
 0 if it is a batch of buy orders, or1 if it is a batch of sell orders.
 Note that orders[i] represents a batch of amounti independent orders with the same price and ordertype. All orders represented by orders[i] will be placed before all orders represented byorders[i+1] for all valid i.
 There is a backlog that consists of orders that have not been executed. The backlog is initiallyempty. When an order is placed, the following happens:
 If the order is a buy order, you look at the sell order with the smallest price in thebacklog. If that sell order's price is smaller than or equal to the current buy order's price, theywill match and be executed, and that sell order will be removed from the backlog. Else, the buyorder is added to the backlog.Vice versa, if the order is a sell order, you look at the buy order with the largest pricein the backlog. If that buy order's price is larger than or equal to the current sell order'sprice, they will match and be executed, and that buy order will be removed from the backlog. Else,the sell order is added to the backlog.
 Return the total amount of orders in the backlog after placing all the orders from the input. Sincethis number can be large, return it modulo 109 + 7.
 Example 1:
 Input: orders = [[10,5,0],[15,2,1],[25,1,1],[30,4,0]]Output: 6Explanation: Here is what happens with the orders:- 5 orders of type buy with price 10 are placed. There are no sell orders, so the 5 orders areadded to the backlog.- 2 orders of type sell with price 15 are placed. There are no buy orders with prices larger thanor equal to 15, so the 2 orders are added to the backlog.- 1 order of type sell with price 25 is placed. There are no buy orders with prices larger than orequal to 25 in the backlog, so this order is added to the backlog.- 4 orders of type buy with price 30 are placed. The first 2 orders are matched with the 2 sellorders of the least price, which is 15 and these 2 sell orders are removed from the backlog. The3rd order is matched with the sell order of the least price, which is 25 and this sell order isremoved from the backlog. Then, there are no more sell orders in the backlog, so the 4th order isadded to the backlog.Finally, the backlog has 5 buy orders with price 10, and 1 buy order with price 30. So the totalnumber of orders in the backlog is 6.
 Example 2:
 Input: orders = [[7,1000000000,1],[15,3,0],[5,999999995,0],[5,1,1]]Output: 999999984Explanation: Here is what happens with the orders:- 109 orders of type sell with price 7 are placed. There are no buy orders, so the 109 orders areadded to the backlog.- 3 orders of type buy with price 15 are placed. They are matched with the 3 sell orders with theleast price which is 7, and those 3 sell orders are removed from the backlog.- 999999995 orders of type buy with price 5 are placed. The least price of a sell order is 7, sothe 999999995 orders are added to the backlog.- 1 order of type sell with price 5 is placed. It is matched with the buy order of the highestprice, which is 5, and that buy order is removed from the backlog.Finally, the backlog has (1000000000-3) sell orders with price 7, and (999999995-1) buy orders withprice 5. So the total number of orders = 1999999991, which is equal to 999999984 % (109 + 7).
 Constraints:
 1 <= orders.length <= 105orders[i].length == 31 <= pricei, amounti <= 109orderTypei is either 0 or 1.",2
310,NumberOfRecentCalls,"Write a class RecentCounter to count recent requests.
 It has only one method: ping(int t), where t represents some time in milliseconds.
 Return the number of pings that have been made from 3000 milliseconds ago until now.
 Any ping with time in [t - 3000, t] will count, including the current ping.
 It is guaranteed that every call to ping uses a strictly larger value of t than before.
 Example 1:
 Input: inputs = [""RecentCounter"",""ping"",""ping"",""ping"",""ping""], inputs = [[],[1],[100],[3001],[3002]]Output: [null,1,2,3,3]
 Note:
 Each test case will have at most 10000 calls to ping.Each test case will call ping with strictly increasing values of t.Each call to ping will have 1 <= t <= 10^9.",1
311,NumberOfRectanglesThatCanFormTheLargestSquare,"You are given an array rectangles where rectangles[i] = [li, wi] represents the i^th rectangle oflength li and width wi.
 You can cut the i^th rectangle to form a square with a side length of k if both k <= li and k <=wi. For example, if you have a rectangle [4,6], you can cut it to get a square with a side lengthof at most 4.
 Let maxLen be the side length of the largest square you can obtain from any of the given rectangles.
 Return the number of rectangles that can make a square with a side length of maxLen.
 Example 1:
 Input: rectangles = [[5,8],[3,9],[5,12],[16,5]]Output: 3Explanation: The largest squares you can get from each rectangle are of lengths [5,3,5,5].The largest possible square is of length 5, and you can get it out of 3 rectangles.
 Example 2:
 Input: rectangles = [[2,3],[3,7],[4,3],[3,7]]Output: 3
 Constraints:
 1 <= rectangles.length <= 1000rectangles[i].length == 21 <= li, wi <= 10^9li != wi",1
312,NumberOfRestrictedPathsFromFirstToLastNode,"There is an undirected weighted connected graph. You are given a positive integer n which denotesthat the graph has n nodes labeled from 1 to n, and an array edges where each edges[i] = [ui, vi,weighti] denotes that there is an edge between nodes ui and vi with weight equal to weighti.
 A path from node start to node end is a sequence of nodes [z0, z1, z2, ..., zk] such that z0 =start and zk = end and there is an edge between zi and zi+1 where 0 <= i <= k-1.
 The distance of a path is the sum of the weights on the edges of the path. LetdistanceToLastNode(x) denote the shortest distance of a path between node n and node x. Arestricted path is a path that also satisfies that distanceToLastNode(zi) >distanceToLastNode(zi+1) where 0 <= i <= k-1.
 Return the number of restricted paths from node 1 to node n. Since that number may be too large,return it modulo 109 + 7.
 Example 1:
 Input: n = 5, edges = [[1,2,3],[1,3,3],[2,3,1],[1,4,2],[5,2,2],[3,5,1],[5,4,10]]Output: 3Explanation: Each circle contains the node number in black and its distanceToLastNode value inblue. The three restricted paths are:1) 1 --> 2 --> 52) 1 --> 2 --> 3 --> 53) 1 --> 3 --> 5
 Example 2:
 Input: n = 7, edges = [[1,3,1],[4,1,2],[7,3,4],[2,5,3],[5,6,1],[6,7,2],[7,5,3],[2,6,4]]Output: 1Explanation: Each circle contains the node number in black and its distanceToLastNode value inblue. The only restricted path is 1 --> 3 --> 7.
 Constraints:
 1 <= n <= 2 * 104n - 1 <= edges.length <= 4 * 104edges[i].length == 31 <= ui, vi <= nui != vi1 <= weighti <= 105There is at most one edge between any two nodes.There is at least one path between any two nodes.",2
313,NumberOfStudentsUnableToEatLunch,"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0and 1 respectively. All students stand in a queue. Each student either prefers square or circularsandwiches.
 The number of sandwiches in the cafeteria is equal to the number of students. The sandwiches areplaced in a stack. At each step:
 If the student at the front of the queue prefers the sandwich on the top of the stack, theywill take it and leave the queue.Otherwise, they will leave it and go to the queue's end.
 This continues until none of the queue students want to take the top sandwich and are thus unableto eat.
 You are given two integer arrays students and sandwiches where sandwiches[i] is the type of theith sandwich in the stack (i = 0 is the top of the stack) and students[j] is the preference ofthe jth student in the initial queue (j = 0 is the front of the queue). Return the number ofstudents that are unable to eat.
 Example 1:
 Input: students = [1,1,0,0], sandwiches = [0,1,0,1]Output: 0Explanation:- Front student leaves the top sandwich and returns to the end of the line making students =[1,0,0,1].- Front student leaves the top sandwich and returns to the end of the line making students =[0,0,1,1].- Front student takes the top sandwich and leaves the line making students = [0,1,1] and sandwiches= [1,0,1].- Front student leaves the top sandwich and returns to the end of the line making students =[1,1,0].- Front student takes the top sandwich and leaves the line making students = [1,0] and sandwiches =[0,1].- Front student leaves the top sandwich and returns to the end of the line making students = [0,1].- Front student takes the top sandwich and leaves the line making students = [1] and sandwiches =[1].- Front student takes the top sandwich and leaves the line making students = [] and sandwiches = [].Hence all students are able to eat.
 Example 2:
 Input: students = [1,1,1,0,0,1], sandwiches = [1,0,0,0,1,1]Output: 3
 Constraints:
 1 <= students.length, sandwiches.length <= 100students.length == sandwiches.lengthsandwiches[i] is 0 or 1.students[i] is 0 or 1.",1
314,NumberOfSubArraysWithOddSum,"Given an array of integers arr. Return the number of sub-arrays with odd sum.
 As the answer may grow large, the answer must be computed modulo 10^9 + 7.
 Example 1:
 Input: arr = [1,3,5]Output: 4Explanation: All sub-arrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]All sub-arrays sum are [1,4,9,3,8,5].Odd sums are [1,9,3,5] so the answer is 4.
 Example 2:
 Input: arr = [2,4,6]Output: 0Explanation: All sub-arrays are [[2],[2,4],[2,4,6],[4],[4,6],[6]]All sub-arrays sum are [2,6,12,4,10,6].All sub-arrays have even sum and the answer is 0.
 Example 3:
 Input: arr = [1,2,3,4,5,6,7]Output: 16
 Example 4:
 Input: arr = [100,100,99,99]Output: 4
 Example 5:
 Input: arr = [7]Output: 1
 Constraints:
 1 <= arr.length <= 10^51 <= arr[i] <= 100",1
315,NumberOfSubstringsWithOnly1s,"Given a binary string s (a string consisting only of '0' and '1's).
 Return the number of substrings with all characters 1's.
 Since the answer may be too large, return it modulo 10^9 + 7.
 Example 1:
 Input: s = ""0110111""Output: 9Explanation: There are 9 substring in total with only 1's characters.""1"" -> 5 times.""11"" -> 3 times.""111"" -> 1 time.
 Example 2:
 Input: s = ""101""Output: 2Explanation: Substring ""1"" is shown 2 times in s.
 Example 3:
 Input: s = ""111111""Output: 21Explanation: Each substring contains only 1's characters.
 Example 4:
 Input: s = ""000""Output: 0
 Constraints:
 s[i] == '0' or s[i] == '1'1 <= s.length <= 10^5",1
316,NumberOfWaysToSplitString,"Given a binary string s (a string consisting only of '0's and '1's), we can split s into 3 non-empty strings s1, s2, s3 (s1+ * s2+ s3 = s).
 Return the number of ways s can be split such that the number of characters '1' is the same in s1, s2, and s3.
 Since the answer may be too large, return it modulo 10^9 + 7.
 Example 1:
 Input: s = ""10101""Output: 4Explanation: There are four ways to split s in 3 parts where each part contain the same number of letters '1'.""1|010|1""""1|01|01""""10|10|1""""10|1|01""
 
 Example 2:
 Input: s = ""1001""Output: 0
 Example 3:
 Input: s = ""0000""Output: 3Explanation: There are three ways to split s in 3 parts.""0|0|00""""0|00|0""""00|0|0""
 Example 4:
 Input: s = ""100100010100110""Output: 12",2
317,OddEvenLinkedList,"Given a singly linked list, group all odd nodes together followed by the even nodes.Please note here we are talking about the node number and not the value in the nodes.
 You should try to do it in place. The program should run in O(1) space complexityand O(nodes) time complexity.
 Example:Given 1->2->3->4->5->NULL,return 1->3->5->2->4->NULL.
 Note:The relative order inside both the even and odd groups should remain as it was inthe input.The first node is considered odd, the second node even and so on ...
 Credits:Special thanks to @aadarshjajodia for adding this problem and creating alltest cases.",1
318,PalindromeLinkedList,"Given a singly linked list, determine if it is a palindrome.
 Follow up:Could you do it in O(n) time and O(1) space?",1
319,palindromeNumber,"Determine whether an integer is a palindrome. Do this without extra space.
 
 Some hints:
 Could negative integers be palindromes? (ie, -1)
 If you are thinking of converting the integer to string, note the restriction of using extra space.
 You could also try reversing an integer. However, if you have solved the problem ""Reverse Integer"",you know that the reversed integer might overflow. How would you handle such case?
 There is a more generic way of solving this problem.",1
320,PalindromePairs,"Given a list of unique words, find all pairs of distinct indices (i, j) in the givenlist, so that the concatenation of the two words, i.e. words[i] + words[j] is apalindrome.
 Example 1:Given words = [""bat"", ""tab"", ""cat""]Return [[0, 1], [1, 0]]The palindromes are [""battab"", ""tabbat""]
 Example 2:Given words = [""abcd"", ""dcba"", ""lls"", ""s"", ""sssll""]Return [[0, 1], [1, 0], [3, 2], [2, 4]]The palindromes are [""dcbaabcd"", ""abcddcba"", ""slls"", ""llssssll""]
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
321,palindromePartitioning,"Given a string s, partition s such that every substring of the partition is a palindrome.
 Return all possible palindrome partitioning of s.
 For example, given s = ""aab"",
 Return
 [[""aa"",""b""],[""a"",""a"",""b""]]",2
322,palindromePartitioning.II,"Given a string s, partition s such that every substring of the partition is a palindrome.
 Return the minimum cuts needed for a palindrome partitioning of s.
 For example, given s = ""aab"",Return 1 since the palindrome partitioning [""aa"",""b""] could be produced using 1 cut.",2
323,PalindromicSubstrings,"Given a string, your task is to count how many palindromic substrings in this string.
 The substrings with different start indexes or end indexes are counted as different substrings eventhey consist of same characters.
 Example 1:
 Input: ""abc""Output: 3Explanation: Three palindromic strings: ""a"", ""b"", ""c"".
 Example 2:
 Input: ""aaa""Output: 6Explanation: Six palindromic strings: ""a"", ""a"", ""a"", ""aa"", ""aa"", ""aaa"".
 Note:
 The input string length won't exceed 1000.",1
324,PartitionEqualSubsetSum,"Given a non-empty array containing only positive integers, find if the array can bepartitioned into two subsets such that the sum of elements in both subsets is equal.
 
 Note:
 Each of the array element will not exceed 100.The array size will not exceed 200.
 
 
 Example 1:
 Input: [1, 5, 11, 5]
 Output: true
 Explanation: The array can be partitioned as [1, 5, 5] and [11].
 
 
 Example 2:
 Input: [1, 2, 3, 5]
 Output: false
 Explanation: The array cannot be partitioned into equal sum subsets.",1
325,partitionList,"Given a linked list and a value x, partition it such that all nodes less than x comebefore nodes greater than or equal to x.
 You should preserve the original relative order of the nodes in each of the two partitions.
 For example,Given 1->4->3->2->5->2 and x = 3,return 1->2->2->4->3->5.",1
326,pascalTriangle,"Given numRows, generate the first numRows of Pascal's triangle.
 For example, given numRows = 5,Return
 [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]",1
327,pascalTriangle.II,"Given an index k, return the kth row of the Pascal's triangle.
 For example, given k = 3,Return [1,3,3,1].
 Note:Could you optimize your algorithm to use only O(k) extra space?",1
328,PatchingArray,"Given a sorted positive integer array nums and an integer n, add/patch elements tothe array such that any number in range [1, n] inclusive can be formed by the sum ofsome elements in the array. Return the minimum number of patches required.
 Example 1:nums = [1, 3], n = 6Return 1.
 Combinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.Now if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3],[1,2,3].Possible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].So we only need 1 patch.
 Example 2:nums = [1, 5, 10], n = 20Return 2.The two patches can be [2, 4].
 Example 3:nums = [1, 2, 2], n = 5Return 0.
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",2
329,pathSum,"Given a binary tree and a sum, determine if the tree has a root-to-leaf pathsuch that adding up all the values along the path equals the given sum.
 For example:Given the below binary tree and sum = 22,
 5/ \4 8/ / \11 13 4/ \ \7 2 1
 return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.",2
330,pathSum.II,"Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.
 For example:Given the below binary tree and sum = 22,
 5/ \4 8/ / \11 13 4/ \ / \7 2 5 1
 return
 [[5,4,11,2],[5,8,4,5]]",1
331,PeakIndexInAMountainArray,"Let's call an array A a mountain if the following properties hold:
 
 A.length >= 3There exists some 0 < i < A.length - 1 such that A[0] < A[1] < ... A[i-1] <A[i] > A[i+1] > ... > A[A.length - 1]
 
 Given an array that is definitely a mountain, return any i such that A[0] < A[1] <... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1].
 Example 1:
 
 Input: [0,1,0]Output: 1
 
 
 Example 2:
 
 Input: [0,2,1,0]Output: 1
 
 Note:
 
 3 <= A.length <= 100000 <= A[i] <= 10^6A is a mountain, as defined above.",1
332,PeekingIterator,"Given an Iterator class interface with methods: next() and hasNext(), design andimplement a PeekingIterator that support the peek() operation -- it essentiallypeek() at the element that will be returned by the next call to next().
 Here is an example. Assume that the iterator is initialized to the beginning of thelist: [1, 2, 3].
 Call next() gets you 1, the first element in the list.
 Now you call peek() and it returns 2, the next element. Calling next() after thatstill return 2.
 You call next() the final time and it returns 3, the last element. Calling hasNext()after that should return false.
 Think of ""looking ahead"". You want to cache the next element.Is one variable sufficient? Why or why not?Test your design with call order of peek() before next() vs next() before peek().For a clean implementation, check out Google's guava library source code.
 Follow up: How would you extend your design to be generic and work with all types,not just integer?
 Credits:Special thanks to @porker2008 for adding this problem and creating all testcases.",1
333,PerfectRectangle,"Given N axis-aligned rectangles where N > 0, determine if they all together form anexact cover of a rectangular region.
 Each rectangle is represented as a bottom-left point and a top-right point. Forexample, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left pointis (1, 1) and top-right point is (2, 2)).
 Example 1:
 rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]
 Return true. All 5 rectangles together form an exact cover of a rectangular region.
 Example 2:
 rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]
 Return false. Because there is a gap between the two rectangular regions.
 Example 3:
 rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[3,2,4,4]]
 Return false. Because there is a gap in the top center.
 Example 4:
 rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]
 Return false. Because two of the rectangles overlap with each other.",1
334,PerfectSquares,"Given a positive integer n, find the least number of perfect square numbers (forexample, 1, 4, 9, 16, ...) which sum to n.
 For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2because 13 = 4 + 9.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",1
335,permutations,"Given a collection of numbers, return all possible permutations.
 For example,[1,2,3] have the following permutations:[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], and [3,2,1].",2
336,permutations.II,"Given a collection of numbers that might contain duplicates, return all possible unique permutations.
 For example,[1,1,2] have the following unique permutations:[1,1,2], [1,2,1], and [2,1,1].",1
337,permutationSequence,"The set [1,2,3,â€¦,n] contains a total of n! unique permutations.
 By listing and labeling all of the permutations in order,We get the following sequence (ie, for n = 3):
 ""123""""132""""213""""231""""312""""321""
 Given n and k, return the kth permutation sequence.
 Note: Given n will be between 1 and 9 inclusive.",2
338,plusOne,"Given a non-negative number represented as an array of digits, plus one to the number.
 The digits are stored such that the most significant digit is at the head of the list.",1
339,populatingNextRightPointersInEachNode,"Given a binary tree
 struct TreeLinkNode {TreeLinkNode *left;TreeLinkNode *right;TreeLinkNode *next;}
 Populate each next pointer to point to its next right node.If there is no next right node, the next pointer should be set to NULL.
 Initially, all next pointers are set to NULL.
 Note:
 You may only use constant extra space.You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).
 For example,Given the following perfect binary tree,
 1/ \2 3/ \ / \4 5 6 7
 After calling your function, the tree should look like:
 1 -> NULL/ \2 -> 3 -> NULL/ \ / \4->5->6->7 -> NULL",2
340,populatingNextRightPointersInEachNode.II,"Follow up for problem ""Populating Next Right Pointers in Each Node"".What if the given tree could be any binary tree? Would your previous solution still work?
 Note:You may only use constant extra space.
 For example,Given the following binary tree,
 1/ \2 3/ \ \4 5 7
 After calling your function, the tree should look like:
 1 -> NULL/ \2 -> 3 -> NULL/ \ \4-> 5 -> 7 -> NULL",2
341,pow,"Implement pow(x, n).",1
342,PowerOfFour,"Given an integer (signed 32 bits), write a function to check whether it is a powerof 4.
 Example:Given num = 16, return true.Given num = 5, return false.
 Follow up: Could you solve it without loops/recursion?
 Credits:Special thanks to @yukuairoy for adding this problem and creating all testcases.",1
343,PowerOfThree,"Given an integer, write a function to determine if it is a power of three.
 Follow up:Could you do it without using any loop / recursion?
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
344,PowerOfTwo,"Given an integer, write a function to determine if it is a power of two.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",1
345,ProcessTasksUsingServers,"You are given two 0-indexed integer arrays servers and tasks of lengths n and mrespectively. servers[i] is the weight of the i^th server, and tasks[j] is the timeneeded to process the j^th task in seconds.
 You are running a simulation system that will shut down after all tasks are processed. Each servercan only process one task at a time. You will be able to process the j^th task starting from thej^th second beginning with the 0^th task at second 0. To process task j, you assign it to theserver with the smallest weight that is free, and in case of a tie, choose the server with thesmallest index. If a free server gets assigned task j at second t, it will be free again atthe second t + tasks[j].
 If there are no free servers, you must wait until one is free and execute the free tasks as soon aspossible. If multiple tasks need to be assigned, assign them in order of increasing index.
 You may assign multiple tasks at the same second if there are multiple free servers.
 Build an array ans of length m, where ans[j] is the index of the server the j^th taskwill be assigned to.
 Return the array ans.
 Example 1:
 Input: servers = [3,3,2], tasks = [1,2,3,2,1,2]Output: [2,2,0,2,1,2]Explanation: Events in chronological order go as follows:- At second 0, task 0 is added and processed using server 2 until second 1.- At second 1, server 2 becomes free. Task 1 is added and processed using server 2 until second 3.- At second 2, task 2 is added and processed using server 0 until second 5.- At second 3, server 2 becomes free. Task 3 is added and processed using server 2 until second 5.- At second 4, task 4 is added and processed using server 1 until second 5.- At second 5, all servers become free. Task 5 is added and processed using server 2 until second 7.
 Example 2:
 Input: servers = [5,1,4,3,2], tasks = [2,1,2,4,5,2,1]Output: [1,4,1,4,1,3,2]Explanation: Events in chronological order go as follows:- At second 0, task 0 is added and processed using server 1 until second 2.- At second 1, task 1 is added and processed using server 4 until second 2.- At second 2, servers 1 and 4 become free. Task 2 is added and processed using server 1 untilsecond 4.- At second 3, task 3 is added and processed using server 4 until second 7.- At second 4, server 1 becomes free. Task 4 is added and processed using server 1 until second 9.- At second 5, task 5 is added and processed using server 3 until second 7.- At second 6, task 6 is added and processed using server 2 until second 7.
 Constraints:
 servers.length == ntasks.length == m1 <= n, m <= 2 * 10^51 <= servers[i], tasks[j] <= 2 * 10^5",2
346,ProductOfArrayExceptSelf,"Given an array of n integers where n > 1, nums, return an array output such thatoutput[i] is equal to the product of all the elements of nums except nums[i].
 Solve it without division and in O(n).
 For example, given [1,2,3,4], return [24,12,8,6].
 Follow up:Could you solve it with constant space complexity? (Note: The output array does notcount as extra space for the purpose of space complexity analysis.)",1
347,QueriesOnNumberOfPointsInsideACircle,"You are given an array points where points[i] = [xi, yi] is the coordinates of the i^th point on a2D plane. Multiple points can have the same coordinates.
 You are also given an array queries where queries[j] = [xj, yj, rj] describes a circle centered at(xj, yj) with a radius of rj.
 For each query queries[j], compute the number of points inside the j^th circle. Points on theborder of the circle are considered inside.
 Return an array answer, where answer[j] is the answer to the j^th query.
 Example 1:
 Input: points = [[1,3],[3,3],[5,3],[2,2]], queries = [[2,3,1],[4,3,1],[1,1,2]]Output: [3,2,2]Explanation: The points and circles are shown above.queries[0] is the green circle, queries[1] is the red circle, and queries[2] is the blue circle.
 Example 2:
 Input: points = [[1,1],[2,2],[3,3],[4,4],[5,5]], queries = [[1,2,2],[2,2,2],[4,3,2],[4,3,3]]Output: [2,3,2,4]Explanation: The points and circles are shown above.queries[0] is green, queries[1] is red, queries[2] is blue, and queries[3] is purple.
 Constraints:
 1 <= points.length <= 500points[i].length == 20 <= xâ€‹â€‹â€‹â€‹â€‹â€‹i, yâ€‹â€‹â€‹â€‹â€‹â€‹i <= 5001 <= queries.length <= 500queries[j].length == 30 <= xj, yj <= 5001 <= rj <= 500All coordinates are integers.
 Follow up: Could you find the answer for each query in better complexity than O(n)?",1
348,QueueReconstructionByHeight,"Suppose you have a random list of people standing in a queue. Each person isdescribed by a pair of integers (h, k), where h is the height of the person and k isthe number of people in front of this person who have a height greater than or equalto h. Write an algorithm to reconstruct the queue.
 Note:The number of people is less than 1,100.
 Example
 Input:[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]
 Output:[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]",1
349,RandomPickIndex,"Given an array of integers with possible duplicates, randomly output the index of agiven target number. You can assume that the given target number must exist in thearray.
 Note:The array size can be very large. Solution that uses too much extra space will notpass the judge.
 Example:
 int[] nums = new int[] {1,2,3,3,3};Solution solution = new Solution(nums);
 // pick(3) should return either index 2, 3, or 4 randomly. Each index should haveequal probability of returning.solution.pick(3);
 // pick(1) should return 0. Since in the array only nums[0] is equal to 1.solution.pick(1);",1
350,randomPointInNonOverlappingRectangles,"Given a list of non-overlapping axis-aligned rectangles rects, write a functionpick which randomly and uniformily picks an integer point in the space coveredby the rectangles.
 Note:1. An integer point is a point that has integer coordinates.2. A point on the perimeter of a rectangle is included in the space covered bythe rectangles.3. ith rectangle = rects[i] = [x1,y1,x2,y2], where [x1, y1] are the integercoordinates of the bottom-left corner, and [x2, y2] are the integer coordinatesof the top-right corner.4. length and width of each rectangle does not exceed 2000.5. 1 <= rects.length <= 1006. pick return a point as an array of integer coordinates [p_x, p_y]7. pick is called at most 10000 times.
 Example 1:Input:[""Solution"",""pick"",""pick"",""pick""][[[[1,1,5,5]]],[],[],[]]Output: [null,[4,1],[4,1],[3,3]]
 Example 2:Input:[""Solution"",""pick"",""pick"",""pick"",""pick"",""pick""][[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]Output: [null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]
 Explanation of Input Syntax:The input is two lists: the subroutines called and their arguments.Solution's constructor has one argument, the array of rectangles rects. pickhas no arguments. Arguments are always wrapped with a list, even if there aren'tany.",1
351,rangeSumQuery-Immutable,"Given an integer array nums, find the sum of the elements between indices i and j(i â‰¤ j), inclusive.
 Example:Given nums = [-2, 0, 3, -5, 2, -1]
 sumRange(0, 2) -> 1sumRange(2, 5) -> -1sumRange(0, 5) -> -3Note:You may assume that the array does not change.There are many calls to sumRange function.",1
352,RangeSumQuery2dImmutable,"Given a 2D matrix matrix, find the sum of the elements inside the rectangle definedby its upper left corner (row1, col1) and lower right corner (row2, col2).
 The above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and(row2, col2) = (4, 3), which contains sum = 8.
 Example:
 Given matrix = [[3, 0, 1, 4, 2],[5, 6, 3, 2, 1],[1, 2, 0, 1, 5],[4, 1, 0, 1, 7],[1, 0, 3, 0, 5]]
 sumRegion(2, 1, 4, 3) -> 8sumRegion(1, 1, 2, 2) -> 11sumRegion(1, 2, 2, 4) -> 12
 Note:
 You may assume that the matrix does not change.There are many calls to sumRegion function.You may assume that row1 â‰¤ row2 and col1 â‰¤ col2.",2
353,RansomNote,"â€©Givenâ€© an â€©arbitraryâ€© ransomâ€© noteâ€© string â€©and â€©another â€©string â€©containingâ€©letters fromâ€© all â€©the â€©magazines,â€© write â€©a â€©function â€©that â€©will â€©return â€©trueâ€©if â€©the â€©ransom â€©note â€©can â€©be â€©constructed â€©from â€©the â€©magazines ; â€©otherwise, â€©it â€©will â€©returnâ€©false. â€©â€©
 Each â€©letterâ€© inâ€© theâ€© magazine â€©string â€©canâ€© only â€©beâ€© used â€©onceâ€© inâ€© yourâ€©ransomâ€© note.
 Note:You may assume that both strings contain only lowercase letters.
 canConstruct(""a"", ""b"") -> falsecanConstruct(""aa"", ""ab"") -> falsecanConstruct(""aa"", ""aab"") -> true",1
354,readNCharactersGivenRead4,"The API: int read4(char *buf) reads 4 characters at a time from a file.
 The return value is the actual number of characters read.For example, it returns 3 if there is only 3 characters left in the file.
 By using the read4 API, implement the function int read(char *buf, int n)that reads n characters from the file.
 Note:The read function will only be called once for each test case.",1
355,ReconstructItinerary,"Given a list of airline tickets represented by pairs of departure and arrivalairports [from, to], reconstruct the itinerary in order. All of the tickets belongto a man who departs from JFK. Thus, the itinerary must begin with JFK.
 Note:
 If there are multiple valid itineraries, you should return the itinerary that hasthe smallest lexical order when read as a single string. For example, the itinerary[""JFK"", ""LGA""] has a smaller lexical order than [""JFK"", ""LGB""].All airports are represented by three capital letters (IATA code).You may assume all tickets form at least one valid itinerary.
 Example 1:tickets = [[""MUC"", ""LHR""], [""JFK"", ""MUC""], [""SFO"", ""SJC""], [""LHR"", ""SFO""]]Return [""JFK"", ""MUC"", ""LHR"", ""SFO"", ""SJC""].
 Example 2:tickets = [[""JFK"",""SFO""],[""JFK"",""ATL""],[""SFO"",""ATL""],[""ATL"",""JFK""],[""ATL"",""SFO""]]Return [""JFK"",""ATL"",""JFK"",""SFO"",""ATL"",""SFO""].Another possible reconstruction is [""JFK"",""SFO"",""ATL"",""JFK"",""ATL"",""SFO""]. But itis larger in lexical order.
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
356,recoverATreeFromPreorderTraversal,"We run a preorder depth first search on the root of a binary tree.
 At each node in this traversal, we output D dashes (where D is the depth of this node), then weoutput the value of this node. (If the depth of a node is D, the depth of its immediate child isD+1. The depth of the root node is 0.)
 If a node has only one child, that child is guaranteed to be the left child.
 Given the output S of this traversal, recover the tree and return its root.
 Example 1:
 Input: ""1-2--3--4-5--6--7""Output: [1,2,5,3,4,6,7]
 Example 2:
 Input: ""1-2--3---4-5--6---7""Output: [1,2,5,3,null,6,null,4,null,7]
 Example 3:
 Input: ""1-401--349---90--88""Output: [1,401,null,349,88,90]
 Note:
 The number of nodes in the original tree is between 1 and 1000.Each node will have a value between 1 and 10^9.",2
357,recoverBinarySearchTree,"Two elements of a binary search tree (BST) are swapped by mistake.
 Recover the tree without changing its structure.
 Note:A solution using O(n) space is pretty straight forward. Could you devise a constant space solution?
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",1
358,RectangleArea,"Find the total area covered by two rectilinear rectangles in a 2D plane.Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.
 Y^||||| (C,D):(3,4)+------------------+| | || | || | | (G,H):(9,2)| +----------------------------+| | | || | | || | | |+---------|--------+-------------------|---------> X(A,B):(-3,0) | |+----------------------------+(E,F):(0,-1)
 
 
 Assume that the total area is never beyond the maximum possible value of int.
 Credits:Special thanks to @mithmatt for adding this problem, creating the above image and all test cases.",2
359,ReformatPhoneNumber,"You are given a phone number as a string number. number consists of digits, spaces ' ', and/ordashes '-'.
 You would like to reformat the phone number in a certain manner. Firstly, remove all spaces anddashes. Then, group the digits from left to right into blocks of length 3 until there are 4 orfewer digits. The final digits are then grouped as follows:
 2 digits: A single block of length 2.3 digits: A single block of length 3.4 digits: Two blocks of length 2 each.
 The blocks are then joined by dashes. Notice that the reformatting process should never produce anyblocks of length 1 and produce at most two blocks of length 2.
 Return the phone number after formatting.
 Example 1:
 Input: number = ""1-23-45 6""Output: ""123-456""Explanation: The digits are ""123456"".Step 1: There are more than 4 digits, so group the next 3 digits. The 1st block is ""123"".Step 2: There are 3 digits remaining, so put them in a single block of length 3. The 2nd block is""456"".Joining the blocks gives ""123-456"".
 Example 2:
 Input: number = ""123 4-567""Output: ""123-45-67""Explanation: The digits are ""1234567"".Step 1: There are more than 4 digits, so group the next 3 digits. The 1st block is ""123"".Step 2: There are 4 digits left, so split them into two blocks of length 2. The blocks are ""45"" and""67"".Joining the blocks gives ""123-45-67"".
 Example 3:
 Input: number = ""123 4-5678""Output: ""123-456-78""Explanation: The digits are ""12345678"".Step 1: The 1st block is ""123"".Step 2: The 2nd block is ""456"".Step 3: There are 2 digits left, so put them in a single block of length 2. The 3rd block is ""78"".Joining the blocks gives ""123-456-78"".
 Example 4:
 Input: number = ""12""Output: ""12""
 Example 5:
 Input: number = ""--17-5 229 35-39475 ""Output: ""175-229-353-94-75""
 Constraints:
 2 <= number.length <= 100number consists of digits and the characters '-' and ' '.There are at least two digits in number.",1
360,regularExpressionMatching,"Implement regular expression matching with support for '.' and '*'.
 '.' Matches any single character.'*' Matches zero or more of the preceding element.
 The matching should cover the entire input string (not partial).
 The function prototype should be:bool isMatch(const char *s, const char *p)
 Some examples:isMatch(""aa"",""a"") â†’ falseisMatch(""aa"",""aa"") â†’ trueisMatch(""aaa"",""aa"") â†’ falseisMatch(""aa"", ""a*"") â†’ trueisMatch(""aa"", "".*"") â†’ trueisMatch(""ab"", "".*"") â†’ trueisMatch(""aab"", ""c*a*b"") â†’ true",1
361,RemoveDuplicateLetters,"Given a string which contains only lowercase letters, remove duplicate letters sothat every letter appear once and only once. You must make sure your result is thesmallest in lexicographical order among all possible results.
 Example:
 Given ""bcabc""Return ""abc""
 Given ""cbacdcbc""Return ""acdb""
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
362,removeDuplicatesFromSortedArray,"Given a sorted array, remove the duplicates in place such that each element appearonly once and return the new length.
 Do not allocate extra space for another array, you must do this in place with constant memory.
 For example,Given input array A = [1,1,2],
 Your function should return length = 2, and A is now [1,2].",1
363,removeDuplicatesFromSortedArray.II,"Follow up for ""Remove Duplicates"":What if duplicates are allowed at most twice?
 For example,Given sorted array A = [1,1,1,2,2,3],
 Your function should return length = 5, and A is now [1,1,2,2,3].",1
364,removeDuplicatesFromSortedList,"Given a sorted linked list, delete all duplicates such that each element appear only once.
 For example,Given 1->1->2, return 1->2.Given 1->1->2->3->3, return 1->2->3.",1
365,removeDuplicatesFromSortedList.II,"Given a sorted linked list, delete all nodes that have duplicate numbers,leaving only distinct numbers from the original list.
 For example,Given 1->2->3->3->4->4->5, return 1->2->5.Given 1->1->1->2->3, return 2->3.",1
366,removeElement,"Given an array and a value, remove all instances of that value in place and return the new length.
 The order of elements can be changed. It doesn't matter what you leave beyond the new length.",1
367,RemoveInvalidParentheses,"Remove the minimum number of invalid parentheses in order to make the input stringvalid. Return all possible results.
 Note: The input string may contain letters other than the parentheses ( and ).
 Examples:
 ""()())()"" -> [""()()()"", ""(())()""]""(a)())()"" -> [""(a)()()"", ""(a())()""]"")("" -> [""""]
 Credits:Special thanks to @hpplayer for adding this problem and creating all testcases.",2
368,RemoveKDigits,"Given a non-negative integer num represented as a string, remove k digits from thenumber so that the new number is the smallest possible.
 Note:
 The length of num is less than 10002 and will be â‰¥ k.The given num does not contain any leading zero.
 Example 1:
 Input: num = ""1432219"", k = 3Output: ""1219""Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 whichis the smallest.
 Example 2:
 Input: num = ""10200"", k = 1Output: ""200""Explanation: Remove the leading 1 and the number is 200. Note that the output mustnot contain leading zeroes.
 Example 3:
 Input: num = ""10"", k = 2Output: ""0""Explanation: Remove all the digits from the number and it is left with nothing whichis 0.",2
369,RemoveLinkedListElements,"Remove all elements from a linked list of integers that have value val.
 ExampleGiven: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6Return: 1 --> 2 --> 3 --> 4 --> 5
 Credits:Special thanks to @mithmatt for adding this problem and creating all test cases.",1
370,removeNthNodeFromEndOfList,"Given a linked list, remove the nth node from the end of list and return its head.
 For example,
 Given linked list: 1->2->3->4->5, and n = 2.
 After removing the second node from the end, the linked list becomes 1->2->3->5.
 Note:Given n will always be valid.Try to do this in one pass.",1
371,reorderList,"Given a singly linked list L: L0â†’L1â†’â€¦â†’Ln-1â†’Ln,reorder it to: L0â†’Lnâ†’L1â†’Ln-1â†’L2â†’Ln-2â†’â€¦
 You must do this in-place without altering the nodes' values.
 For example,Given {1,2,3,4}, reorder it to {1,4,2,3}.",2
372,repeatedDNASequences,"All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T,
 For example: ""ACGAATTCCG"".When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.
 Write a function to find all the 10-letter-long sequences (substrings) thatoccur more than once in a DNA molecule.
 For example,
 Given s = ""AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"",
 Return:[""AAAAACCCCC"", ""CCCCCAAAAA""].",2
373,ReplaceAllDigitsWithCharacters,"You are given a 0-indexed string s that has lowercase English letters in its even indices anddigits in its odd indices.
 There is a function shift(c, x), where c is a character and x is a digit, that returns the x^thcharacter after c.
 For example, shift('a', 5) = 'f' and shift('x', 0) = 'x'.
 For every odd index i, you want to replace the digit s[i] with shift(s[i-1], s[i]).
 Return s after replacing all digits. It is guaranteed that shift(s[i-1], s[i]) will never exceed'z'.
 Example 1:
 Input: s = ""a1c1e1""Output: ""abcdef""Explanation: The digits are replaced as follows:- s[1] -> shift('a',1) = 'b'- s[3] -> shift('c',1) = 'd'- s[5] -> shift('e',1) = 'f'
 Example 2:
 Input: s = ""a1b2c3d4e""Output: ""abbdcfdhe""Explanation: The digits are replaced as follows:- s[1] -> shift('a',1) = 'b'- s[3] -> shift('b',2) = 'd'- s[5] -> shift('c',3) = 'f'- s[7] -> shift('d',4) = 'h'
 Constraints:
 1 <= s.length <= 100s consists only of lowercase English letters and digits.shift(s[i-1], s[i]) <= 'z' for all odd indices i.",1
374,restoreIPAddresses,"Given a string containing only digits, restore it by returning all possible valid IP address combinations.
 For example:Given ""25525511135"",
 return [""255.255.11.135"", ""255.255.111.35""]. (Order does not matter)",1
375,RestoreTheArrayFromAdjacentPairs,"There is an integer array nums that consists of n unique elements, but you have forgotten it.However, you do remember every pair of adjacent elements in nums.
 You are given a 2D integer array adjacentPairs of size n - 1 where each adjacentPairs[i] = [ui, vi]indicates that the elements ui and vi are adjacent in nums.
 It is guaranteed that every adjacent pair of elements nums[i] and nums[i+1] will exist inadjacentPairs, either as [nums[i], nums[i+1]] or [nums[i+1], nums[i]]. The pairs can appear in anyorder.
 Return the original array nums. If there are multiple solutions, return any of them.
 Example 1:
 Input: adjacentPairs = [[2,1],[3,4],[3,2]]Output: [1,2,3,4]Explanation: This array has all its adjacent pairs in adjacentPairs.Notice that adjacentPairs[i] may not be in left-to-right order.
 Example 2:
 Input: adjacentPairs = [[4,-2],[1,4],[-3,1]]Output: [-2,4,1,-3]Explanation: There can be negative numbers.Another solution is [-3,1,4,-2], which would also be accepted.
 Example 3:
 Input: adjacentPairs = [[100000,-100000]]Output: [100000,-100000]
 Constraints:
 nums.length == nadjacentPairs.length == n - 1adjacentPairs[i].length == 22 <= n <= 10^5-10^5 <= nums[i], ui, vi <= 10^5There exists some nums that has adjacentPairs as its pairs.",1
376,reverseBits,"Reverse bits of a given 32 bits unsigned integer.
 For example, given input 43261596 (represented in binary as 00000010100101000001111010011100),return 964176192 (represented in binary as 00111001011110000010100101000000).
 Follow up:If this function is called many times, how would you optimize it?
 Related problem: Reverse Integer
 Credits:Special thanks to @ts for adding this problem and creating all test cases.",1
377,reverseInteger,"Reverse digits of an integer.
 Example1: x = 123, return 321Example2: x = -123, return -321
 
 Have you thought about this?
 Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!
 > If the integer's last digit is 0, what should the output be? ie, cases such as 10, 100.
 > Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer,then the reverse of 1000000003 overflows. How should you handle such cases?
 > Throw an exception? Good, but what if throwing an exception is not an option?You would then have to re-design the function (ie, add an extra parameter).",1
378,reverseLinkedList,"Reverse a singly linked list.
 click to show more hints.
 Hint:A linked list can be reversed either iteratively or recursively. Could you implement both?",1
379,reverseLinkedList.II,"Reverse a linked list from position m to n. Do it in-place and in one-pass.
 For example:Given 1->2->3->4->5->NULL, m = 2 and n = 4,
 return 1->4->3->2->5->NULL.
 Note:Given m, n satisfy the following condition:1 â‰¤ m â‰¤ n â‰¤ length of list.",2
380,reverseNodesInKGroup,"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.
 If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is.
 You may not alter the values in the nodes, only nodes itself may be changed.
 Only constant memory is allowed.
 For example,Given this linked list: 1->2->3->4->5
 For k = 2, you should return: 2->1->4->3->5
 For k = 3, you should return: 3->2->1->4->5",2
381,ReverseString,"Write a function that takes a string as input and returns the string reversed.
 Example:Given s = ""hello"", return ""olleh"".",1
382,reverseVowelsOfAString,"Write a function that takes a string as input and reverse only the vowels of astring.
 Example 1:Given s = ""hello"", return ""holle"".
 Example 2:Given s = ""leetcode"", return ""leotcede"".",1
383,reverseWordsInAString,"Given an input string, reverse the string word by word.
 For example,Given s = ""the sky is blue"",return ""blue is sky the"".
 
 Clarification:
 What constitutes a word?A sequence of non-space characters constitutes a word.Could the input string contain leading or trailing spaces?Yes. However, your reversed string should not contain leading or trailing spaces.How about multiple spaces between two words?Reduce them to a single space in the reversed string.",2
384,reverseWordsInAString.II,"Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.
 The input string does not contain leading or trailing spaces and the words are always separated by a single space.
 For example,Given s = ""the sky is blue"",return ""blue is sky the"".
 Could you do it in-place without allocating extra space?",1
385,romanToInteger,"Given a roman numeral, convert it to an integer.
 Input is guaranteed to be within the range from 1 to 3999.",1
386,rotateArray,"Rotate an array of n elements to the right by k steps.For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].
 Note:Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.
 Hint:Could you do it in-place with O(1) extra space?
 Related problem: Reverse Words in a String II
 Credits:Special thanks to @Freezen for adding this problem and creating all test cases.",2
387,RotateFunction,"Given an array of integers A and let n to be its length.
 Assume Bk to be an array obtained by rotating the array A k positions clock-wise, wedefine a ""rotation function"" F on A as follow:
 F(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1].
 Calculate the maximum value of F(0), F(1), ..., F(n-1).
 Note:n is guaranteed to be less than 105.
 Example:
 A = [4, 3, 2, 6]
 F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26
 So the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.",1
388,rotateImage,You are given an n x n 2D matrix representing an image.Rotate the image by 90 degrees (clockwise).Follow up:Could you do this in-place?,1
389,rotateList,"Given a list, rotate the list to the right by k places, where k is non-negative.
 For example:Given 1->2->3->4->5->NULL and k = 2,return 4->5->1->2->3->NULL.",1
390,RotatingTheBox,"You are given an m x n matrix of characters box representing a side-view of a box. Each cell of thebox is one of the following:
 A stone '#'A stationary obstacle '*'Empty '.'
 The box is rotated 90 degrees clockwise, causing some of the stones to fall due to gravity. Eachstone falls down until it lands on an obstacle, another stone, or the bottom of the box. Gravitydoes not affect the obstacles' positions, and the inertia from the box's rotation does not affectthe stones' horizontal positions.
 It is guaranteed that each stone in box rests on an obstacle, another stone, or the bottom of thebox.
 Return an n x m matrix representing the box after the rotation described above.
 Example 1:
 Input: box = [[""#"",""."",""#""]]Output: [["".""],[""#""],[""#""]]
 Example 2:
 Input: box = [[""#"",""."",""*"","".""],[""#"",""#"",""*"","".""]]Output: [[""#"","".""],[""#"",""#""],[""*"",""*""],[""."","".""]]
 Example 3:
 Input: box = [[""#"",""#"",""*"",""."",""*"","".""],[""#"",""#"",""#"",""*"",""."","".""],[""#"",""#"",""#"",""."",""#"","".""]]Output: [[""."",""#"",""#""],[""."",""#"",""#""],[""#"",""#"",""*""],[""#"",""*"","".""],[""#"",""."",""*""],[""#"",""."","".""]]
 Constraints:
 m == box.lengthn == box[i].length1 <= m, n <= 500box[i][j] is either '#', '*', or '.'.",1
391,sameTree,"Given two binary trees, write a function to check if they are equal or not.
 Two binary trees are considered equal if they are structurally identical and the nodes have the same value.",1
392,SatisfiabilityOfEqualityEquations,"Given an array equations of strings that represent relationships between variables, each stringequations[i] has length 4 and takes one of two different forms: ""a==b"" or ""a!=b"". Here, a and bare lowercase letters (not necessarily different) that represent one-letter variable names.
 Return true if and only if it is possible to assign integers to variable names so as to satisfy allthe given equations.
 Example 1:
 Input: [""a==b"",""b!=a""]Output: falseExplanation: If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not thesecond. There is no way to assign the variables to satisfy both equations.
 Example 2:
 Input: [""b==a"",""a==b""]Output: trueExplanation: We could assign a = 1 and b = 1 to satisfy both equations.
 Example 3:
 Input: [""a==b"",""b==c"",""a==c""]Output: true
 Example 4:
 Input: [""a==b"",""b!=c"",""c==a""]Output: false
 Example 5:
 Input: [""c==c"",""b==d"",""x!=z""]Output: true
 Note:
 1 <= equations.length <= 500equations[i].length == 4equations[i][0] and equations[i][3] are lowercase lettersequations[i][1] is either '=' or '!'equations[i][2] is '='",1
393,scrambleString,"Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.
 Below is one possible representation of s1 = ""great"":
 great/ \gr eat/ \ / \g r e at/ \a t
 To scramble the string, we may choose any non-leaf node and swap its two children.
 For example, if we choose the node ""gr"" and swap its two children, it produces a scrambled string ""rgeat"".
 rgeat/ \rg eat/ \ / \r g e at/ \a t
 We say that ""rgeat"" is a scrambled string of ""great"".
 Similarly, if we continue to swap the children of nodes ""eat"" and ""at"", it produces a scrambled string ""rgtae"".
 rgtae/ \rg tae/ \ / \r g ta e/ \t a
 We say that ""rgtae"" is a scrambled string of ""great"".
 Given two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.",2
394,search2DMatrix,"Write an efficient algorithm that searches for a value in an m x n matrix.This matrix has the following properties:
 Integers in each row are sorted from left to right.The first integer of each row is greater than the last integer of the previous row.
 For example,
 Consider the following matrix:
 [[1, 3, 5, 7],[10, 11, 16, 20],[23, 30, 34, 50]]
 Given target = 3, return true.",2
395,search2DMatrix.II,"Write an efficient algorithm that searches for a value in an m x n matrix. Thismatrix has the following properties:
 Integers in each row are sorted in ascending from left to right.Integers in each column are sorted in ascending from top to bottom.
 For example,
 Consider the following matrix:
 [[1, 4, 7, 11, 15],[2, 5, 8, 12, 19],[3, 6, 9, 16, 22],[10, 13, 14, 17, 24],[18, 21, 23, 26, 30]]
 Given target = 5, return true.Given target = 20, return false.",2
396,searchForRange,"Given a sorted array of integers, find the starting and ending position of a given target value.
 Your algorithm's runtime complexity must be in the order of O(log n).
 If the target is not found in the array, return [-1, -1].
 For example,Given [5, 7, 7, 8, 8, 10] and target value 8,return [3, 4].",2
397,searchInRotatedSortedArray,"Suppose a sorted array is rotated at some pivot unknown to you beforehand.
 (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
 You are given a target value to search. If found in the array return its index, otherwise return -1.
 You may assume no duplicate exists in the array.",2
398,searchInRotatedSortedArray.II,"Follow up for ""Search in Rotated Sorted Array"":What if duplicates are allowed?
 Would this affect the run-time complexity? How and why?
 Write a function to determine if a given target is in the array.",1
399,searchInsertPosition,"Given a sorted array and a target value, return the index if the target is found.If not, return the index where it would be if it were inserted in order.
 You may assume no duplicates in the array.
 Here are few examples.[1,3,5,6], 5 â†’ 2[1,3,5,6], 2 â†’ 1[1,3,5,6], 7 â†’ 4[1,3,5,6], 0 â†’ 0",1
400,SeatReservationManager,"Design a system that manages the reservation state of n seats that are numbered from 1 to n.
 Implement the SeatManager class:
 SeatManager(int n) Initializes a SeatManager object that will manage n seats numbered from1 to n. All seats are initially available.int reserve() Fetches the smallest-numbered unreserved seat, reserves it, and returns itsnumber.void unreserve(int seatNumber) Unreserves the seat with the given seatNumber.
 Example 1:
 Input[""SeatManager"", ""reserve"", ""reserve"", ""unreserve"", ""reserve"", ""reserve"", ""reserve"", ""reserve"",""unreserve""][[5], [], [], [2], [], [], [], [], [5]]Output[null, 1, 2, null, 2, 3, 4, 5, null]
 ExplanationSeatManager seatManager = new SeatManager(5); // Initializes a SeatManager with 5 seats.seatManager.reserve(); // All seats are available, so return the lowest numbered seat, which is1.seatManager.reserve(); // The available seats are [2,3,4,5], so return the lowest of them, whichis 2.seatManager.unreserve(2); // Unreserve seat 2, so now the available seats are [2,3,4,5].seatManager.reserve(); // The available seats are [2,3,4,5], so return the lowest of them, whichis 2.seatManager.reserve(); // The available seats are [3,4,5], so return the lowest of them, whichis 3.seatManager.reserve(); // The available seats are [4,5], so return the lowest of them, which is4.seatManager.reserve(); // The only available seat is seat 5, so return 5.seatManager.unreserve(5); // Unreserve seat 5, so now the available seats are [5].
 Constraints:
 1 <= n <= 10^51 <= seatNumber <= nFor each call to reserve, it is guaranteed that there will be at least one unreserved seat.For each call to unreserve, it is guaranteed that seatNumber will be reserved.At most 10^5 calls in total will be made to reserve and unreserve.",1
401,SecondLargestDigitInAString,"Given an alphanumeric string s, return the second largest numerical digit that appears in s, or -1if it does not exist.
 An alphanumeric string is a string consisting of lowercase English letters and digits.
 Example 1:
 Input: s = ""dfa12321afd""Output: 2Explanation: The digits that appear in s are [1, 2, 3]. The second largest digit is 2.
 Example 2:
 Input: s = ""abc1111""Output: -1Explanation: The digits that appear in s are [1]. There is no second largest digit.
 Constraints:
 1 <= s.length <= 500s consists of only lowercase English letters and/or digits.",1
402,sentenceScreenFitting,"Given a rows x cols screen and a sentence represented by a list of words, findhow many times the given sentence can be fitted on the screen.
 Note:
 A word cannot be split into two lines.The order of words in the sentence must remain unchanged.Two consecutive words in a line must be separated by a single space.Total words in the sentence won't exceed 100.Length of each word won't exceed 10.1 â‰¤ rows, cols â‰¤ 20,000.
 
 
 Example 1:
 Input:rows = 2, cols = 8, sentence = [""hello"", ""world""]
 Output:1
 Explanation:hello---world---
 The character '-' signifies an empty space on the screen.
 
 
 Example 2:
 Input:rows = 3, cols = 6, sentence = [""a"", ""bcd"", ""e""]
 Output:2
 Explanation:a-bcd-e-a---bcd-e-
 The character '-' signifies an empty space on the screen.
 
 
 Example 3:
 Input:rows = 4, cols = 5, sentence = [""I"", ""had"", ""apple"", ""pie""]
 Output:1
 Explanation:I-hadapplepie-Ihad--
 The character '-' signifies an empty space on the screen.",2
403,SentenceSimilarity.III,"A sentence is a list of words that are separated by a single space with no leading or trailingspaces. For example, ""Hello World"", ""HELLO"", ""hello world hello world"" are all sentences. Wordsconsist of only uppercase and lowercase English letters.
 Two sentences sentence1 and sentence2 are similar if it is possible to insert an arbitrary sentence(possibly empty) inside one of these sentences such that the two sentences become equal. Forexample, sentence1 = ""Hello my name is Jane"" and sentence2 = ""Hello Jane"" can be made equal byinserting ""my name is"" between ""Hello"" and ""Jane"" in sentence2.
 Given two sentences sentence1 and sentence2, return true if sentence1 and sentence2 are similar.Otherwise, return false.
 Example 1:
 Input: sentence1 = ""My name is Haley"", sentence2 = ""My Haley""Output: trueExplanation: sentence2 can be turned to sentence1 by inserting ""name is"" between ""My"" and ""Haley"".
 Example 2:
 Input: sentence1 = ""of"", sentence2 = ""A lot of words""Output: falseExplanation: No single sentence can be inserted inside one of the sentences to make it equal to theother.
 Example 3:
 Input: sentence1 = ""Eating right now"", sentence2 = ""Eating""Output: trueExplanation: sentence2 can be turned to sentence1 by inserting ""right now"" at the end of thesentence.
 Example 4:
 Input: sentence1 = ""Luky"", sentence2 = ""Lucccky""Output: false
 Constraints:
 1 <= sentence1.length, sentence2.length <= 100sentence1 and sentence2 consist of lowercase and uppercase English letters and spaces.The words in sentence1 and sentence2 are separated by a single space.",1
404,SerializeAndDeserializeBinaryTree,"Serialization is the process of converting a data structure or object into asequence of bits so that it can be stored in a file or memory buffer, or transmittedacross a network connection link to be reconstructed later in the same or anothercomputer environment.
 Design an algorithm to serialize and deserialize a binary tree. There is norestriction on how your serialization/deserialization algorithm should work. Youjust need to ensure that a binary tree can be serialized to a string and this stringcan be deserialized to the original tree structure.
 For example, you may serialize the following tree
 1/ \2 3/ \4 5
 as ""[1,2,3,null,null,4,5]"", just the same as how LeetCode OJ serializes a binarytree. You do not necessarily need to follow this format, so please be creative andcome up with different approaches yourself.
 Note: Do not use class member/global/static variables to store states. Yourserialize and deserialize algorithms should be stateless.
 Credits:Special thanks to @Louis1992 for adding this problem and creating all testcases.",2
405,setMatrixZeroes,"Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.
 click to show follow up.
 Follow up:
 Did you use extra space?A straight forward solution using O(mn) space is probably a bad idea.A simple improvement uses O(m + n) space, but still not the best solution.Could you devise a constant space solution?",1
406,ShortEncodingOfWords,"Given a list of words, we may encode it by writing a reference string S and a list of indexes A.
 For example, if the list of words is [""time"", ""me"", ""bell""], we can write it as S = ""time#bell#""and indexes = [0, 2, 5].
 Then for each index, we will recover the word by reading from the reference string from that indexuntil we reach a ""#"" character.
 What is the length of the shortest reference string S possible that encodes the given words?
 Example:
 Input: words = [""time"", ""me"", ""bell""]Output: 10Explanation: S = ""time#bell#"" and indexes = [0, 2, 5].
 Note:
 1 <= words.length <= 2000.1 <= words[i].length <= 7.Each word has only lowercase letters.",1
407,ShortestPalindrome,"Given a string S, you are allowed to convert it to a palindrome by adding characters in front of it.Find and return the shortest palindrome you can find by performing this transformation.
 For example:Given ""aacecaaa"", return ""aaacecaaa"".Given ""abcd"", return ""dcbabcd"".
 Credits:Special thanks to @ifanchu for adding this problem and creating all test cases.Thanks to @Freezen for additional test cases.",2
408,ShuffleAnArray,"Shuffle a set of numbers without duplicates.
 Example:
 // Init an array with set 1, 2, and 3.int[] nums = {1,2,3};Solution solution = new Solution(nums);
 // Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] mustequally likely to be returned.solution.shuffle();
 // Resets the array back to its original configuration [1,2,3].solution.reset();
 // Returns the random shuffling of array [1,2,3].solution.shuffle();",1
409,ShuffleString,"Given a string s and an integer array indices of the same length.
 The string s will be shuffled such that the character at the i^th position moves to indices[i] inthe shuffled string.
 Return the shuffled string.
 Example 1:
 Input: s = ""codeleet"", indices = [4,5,6,7,0,2,1,3]Output: ""leetcode""Explanation: As shown, ""codeleet"" becomes ""leetcode"" after shuffling.
 Example 2:
 Input: s = ""abc"", indices = [0,1,2]Output: ""abc""Explanation: After shuffling, each character remains in its position.
 Example 3:
 Input: s = ""aiohn"", indices = [3,1,4,2,0]Output: ""nihao""
 Example 4:
 Input: s = ""aaiougrt"", indices = [4,0,2,6,7,3,1,5]Output: ""arigatou""
 Example 5:
 Input: s = ""art"", indices = [1,0,2]Output: ""rat""
 Constraints:
 s.length == indices.length == n1 <= n <= 100s contains only lower-case English letters.0 <= indices[i] < nAll values of indices are unique (i.e. indices is a permutation of the integers from 0 to n- 1).",1
410,ShuffleTheArray,"Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].
 Return the array in the form [x1,y1,x2,y2,...,xn,yn].
 Example 1:
 Input: nums = [2,5,1,3,4,7], n = 3Output: [2,3,5,4,1,7]Explanation: Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].
 Example 2:
 Input: nums = [1,2,3,4,4,3,2,1], n = 4Output: [1,4,2,3,3,2,4,1]
 Example 3:
 Input: nums = [1,1,2,2], n = 2Output: [1,2,1,2]
 Constraints:
 1 <= n <= 500nums.length == 2n1 <= nums[i] <= 10^3",1
411,SignOfTheProductOfAnArray,"There is a function signFunc(x) that returns:
 1 if x is positive.-1 if x is negative.0 if x is equal to 0.
 You are given an integer array nums. Let product be the product of all values in the array nums.
 Return signFunc(product).
 Example 1:
 Input: nums = [-1,-2,-3,-4,3,2,1]Output: 1Explanation: The product of all values in the array is 144, and signFunc(144) = 1
 Example 2:
 Input: nums = [1,5,0,2,-3]Output: 0Explanation: The product of all values in the array is 0, and signFunc(0) = 0
 Example 3:
 Input: nums = [-1,1,-1,1,-1]Output: -1Explanation: The product of all values in the array is -1, and signFunc(-1) = -1
 Constraints:
 1 <= nums.length <= 1000-100 <= nums[i] <= 100",1
412,simplifyPath,"Given an absolute path for a file (Unix-style), simplify it.
 For example,path = ""/home/"", => ""/home""path = ""/a/./b/../../c/"", => ""/c""
 
 Corner Cases:
 Did you consider the case where path = ""/../""?In this case, you should return ""/"".Another corner case is the path might contain multiple slashes '/' together, such as ""/home//foo/"".In this case, you should ignore redundant slashes and return ""/home/foo"".",1
413,singleNumber,"Given an array of integers, every element appears twice except for one. Find that single one.
 Note:Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?",1
414,singleNumber.II,"Given an array of integers, every element appears three times except for one. Find that single one.
 Note:Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?",1
415,singleNumber.III,"Given an array of numbers nums, in which exactly two elements appear only once andall the other elements appear exactly twice. Find the two elements that appear onlyonce.
 For example:
 Given nums = [1, 2, 1, 3, 2, 5], return [3, 5].
 Note:
 The order of the result is not important. So in the above example, [5, 3] is alsocorrect.Your algorithm should run in linear runtime complexity. Could you implement it usingonly constant space complexity?
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",1
416,SingleThreadedCpu,"You are given nâ€‹â€‹â€‹â€‹â€‹â€‹ tasks labeled from 0 to n - 1 represented by a 2D integer array tasks, wheretasks[i] = [enqueueTimei, processingTimei] means that the i^â€‹â€‹â€‹â€‹â€‹â€‹thâ€‹â€‹â€‹â€‹ task will be available toprocess at enqueueTimei and will take processingTimei to finish processing.
 You have a single-threaded CPU that can process at most one task at a time and will act in thefollowing way:
 If the CPU is idle and there are no available tasks to process, the CPU remains idle.If the CPU is idle and there are available tasks, the CPU will choose the one with theshortest processing time. If multiple tasks have the same shortest processing time, it will choosethe task with the smallest index.Once a task is started, the CPU will process the entire task without stopping.The CPU can finish a task then start a new one instantly.
 Return the order in which the CPU will process the tasks.
 Example 1:
 Input: tasks = [[1,2],[2,4],[3,2],[4,1]]Output: [0,2,3,1]Explanation: The events go as follows:- At time = 1, task 0 is available to process. Available tasks = {0}.- Also at time = 1, the idle CPU starts processing task 0. Available tasks = {}.- At time = 2, task 1 is available to process. Available tasks = {1}.- At time = 3, task 2 is available to process. Available tasks = {1, 2}.- Also at time = 3, the CPU finishes task 0 and starts processing task 2 as it is the shortest.Available tasks = {1}.- At time = 4, task 3 is available to process. Available tasks = {1, 3}.- At time = 5, the CPU finishes task 2 and starts processing task 3 as it is the shortest.Available tasks = {1}.- At time = 6, the CPU finishes task 3 and starts processing task 1. Available tasks = {}.- At time = 10, the CPU finishes task 1 and becomes idle.
 Example 2:
 Input: tasks = [[7,10],[7,12],[7,5],[7,4],[7,2]]Output: [4,3,2,0,1]Explanation: The events go as follows:- At time = 7, all the tasks become available. Available tasks = {0,1,2,3,4}.- Also at time = 7, the idle CPU starts processing task 4. Available tasks = {0,1,2,3}.- At time = 9, the CPU finishes task 4 and starts processing task 3. Available tasks = {0,1,2}.- At time = 13, the CPU finishes task 3 and starts processing task 2. Available tasks = {0,1}.- At time = 18, the CPU finishes task 2 and starts processing task 0. Available tasks = {1}.- At time = 28, the CPU finishes task 0 and starts processing task 1. Available tasks = {}.- At time = 40, the CPU finishes task 1 and becomes idle.
 Constraints:
 tasks.length == n1 <= n <= 10^51 <= enqueueTimei, processingTimei <= 10^9",2
417,SlidingWindowMaximum,"Given an array nums, there is a sliding window of size k which is moving from thevery left of the array to the very right. You can only see the k numbers in thewindow. Each time the sliding window moves right by one position.
 For example,Given nums = [1,3,-1,-3,5,3,6,7], and k = 3.
 Window position Max--------------- -----[1 3 -1] -3 5 3 6 7 31 [3 -1 -3] 5 3 6 7 31 3 [-1 -3 5] 3 6 7 51 3 -1 [-3 5 3] 6 7 51 3 -1 -3 [5 3 6] 7 61 3 -1 -3 5 [3 6 7] 7
 Therefore, return the max sliding window as [3,3,5,5,6,7].
 Note:You may assume k is always valid, ie: 1 â‰¤ k â‰¤ input array's size for non-emptyarray.
 Follow up:Could you solve it in linear time?
 How about using a data structure such as deque (double-ended queue)?The queue size need not be the same as the windowâ€™s size.Remove redundant elements and the queue should store only elements that need to beconsidered.",2
418,SmallestStringStartingFromLeaf,"Given the root of a binary tree, each node has a value from 0 to 25 representing the letters 'a' to'z': a value of 0 represents 'a', a value of 1 represents 'b', and so on.
 Find the lexicographically smallest string that starts at a leaf of this tree and ends at the root.
 (As a reminder, any shorter prefix of a string is lexicographically smaller: for example, ""ab"" islexicographically smaller than ""aba"". A leaf of a node is a node that has no children.)
 Example 1:
 Input: [0,1,2,3,4,3,4]Output: ""dba""
 Example 2:
 Input: [25,1,3,1,3,0,2]Output: ""adz""
 Example 3:
 Input: [2,2,1,null,1,0,null,0]Output: ""abc""
 Note:
 The number of nodes in the given tree will be between 1 and 1000.Each node in the tree will have a value between 0 and 25.",1
419,SortArrayByParity,"Given an array A of non-negative integers, return an array consisting of all the even elements ofA, followed by all the odd elements of A.
 You may return any answer array that satisfies this condition.
 Example 1:
 Input: [3,1,2,4]Output: [2,4,3,1]The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.
 Note:
 1 <= A.length <= 50000 <= A[i] <= 5000",1
420,SortArrayByParity.II,"Given an array A of non-negative integers, half of the integers in A are odd, and half of theintegers are even.
 Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.
 You may return any answer array that satisfies this condition.
 Example 1:
 Input: [4,2,5,7]Output: [4,5,2,7]Explanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.
 Note:
 2 <= A.length <= 20000A.length % 2 == 00 <= A[i] <= 1000",1
421,sortColors,"Given an array with n objects colored red, white or blue, sort them so that objects ofthe same color are adjacent, with the colors in the order red, white and blue.
 Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.
 Note:You are not suppose to use the library's sort function for this problem.
 Follow up:> A rather straight forward solution is a two-pass algorithm using counting sort.> First, iterate the array counting number of 0's, 1's, and 2's, then overwrite arraywith total number of 0's, then 1's and followed by 2's.> Could you come up with an one-pass algorithm using only constant space?",1
422,SortingTheSentence,"A sentence is a list of words that are separated by a single space with no leading or trailingspaces. Each word consists of lowercase and uppercase English letters.
 A sentence can be shuffled by appending the 1-indexed word position to each word then rearrangingthe words in the sentence.
 For example, the sentence ""This is a sentence"" can be shuffled as ""sentence4 a3 is2 This1""or ""is2 sentence4 This1 a3"".
 Given a shuffled sentence s containing no more than 9 words, reconstruct and return the originalsentence.
 Example 1:
 Input: s = ""is2 sentence4 This1 a3""Output: ""This is a sentence""Explanation: Sort the words in s to their original positions ""This1 is2 a3 sentence4"", then removethe numbers.
 Example 2:
 Input: s = ""Myself2 Me1 I4 and3""Output: ""Me Myself and I""Explanation: Sort the words in s to their original positions ""Me1 Myself2 and3 I4"", then remove thenumbers.
 Constraints:
 2 <= s.length <= 200s consists of lowercase and uppercase English letters, spaces, and digits from 1 to 9.The number of words in s is between 1 and 9.The words in s are separated by a single space.s contains no leading or trailing spaces.",1
423,sortList,Sort a linked list in O(n log n) time using constant space complexity.,2
424,spiralMatrix,"Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
 For example,Given the following matrix:
 [[ 1, 2, 3 ],[ 4, 5, 6 ],[ 7, 8, 9 ]]
 You should return [1,2,3,6,9,8,7,4,5].",2
425,spiralMatrix.II,"Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.
 For example,Given n = 3,
 You should return the following matrix:
 [[ 1, 2, 3 ],[ 8, 9, 4 ],[ 7, 6, 5 ]]",1
426,SplitArrayLargestSum,"Given an array which consists of non-negative integers and an integer m, you cansplit the array into m non-empty continuous subarrays. Write an algorithm tominimize the largest sum among these m subarrays.
 Note:Given m satisfies the following constraint: 1 â‰¤ m â‰¤ length(nums) â‰¤ 14,000.
 Examples:
 Input:nums = [7,2,5,10,8]m = 2
 Output:18
 Explanation:There are four ways to split nums into two subarrays.The best way is to split it into [7,2,5] and [10,8],where the largest sum among the two subarrays is only 18.",1
427,SplittingAStringIntoDescendingConsecutiveValues,"You are given a string s that consists of only digits.
 Check if we can split s into two or more non-empty substrings such that the numerical values of thesubstrings are in descending order and the difference between numerical values of every twoadjacent substrings is equal to 1.
 For example, the string s = ""0090089"" can be split into [""0090"", ""089""] with numericalvalues [90,89]. The values are in descending order and adjacent values differ by 1, so this way isvalid.Another example, the string s = ""001"" can be split into [""0"", ""01""], [""00"", ""1""], or [""0"",""0"", ""1""]. However all the ways are invalid because they have numerical values [0,1], [0,1], and[0,0,1] respectively, all of which are not in descending order.
 Return true if it is possible to split sâ€‹â€‹â€‹â€‹â€‹â€‹ as described above, or false otherwise.
 A substring is a contiguous sequence of characters in a string.
 Example 1:
 Input: s = ""1234""Output: falseExplanation: There is no valid way to split s.
 Example 2:
 Input: s = ""050043""Output: trueExplanation: s can be split into [""05"", ""004"", ""3""] with numerical values [5,4,3].The values are in descending order with adjacent values differing by 1.
 Example 3:
 Input: s = ""9080701""Output: falseExplanation: There is no valid way to split s.
 Example 4:
 Input: s = ""10009998""Output: trueExplanation: s can be split into [""100"", ""099"", ""98""] with numerical values [100,99,98].The values are in descending order with adjacent values differing by 1.
 Constraints:
 1 <= s.length <= 20s only consists of digits.",1
428,sqrt,"Implement int sqrt(int x).
 Compute and return the square root of x.",1
429,SquaresOfASortedArray,"Given an array of integers A sorted in non-decreasing order, return an array of the squares of eachnumber, also in sorted non-decreasing order.
 Example 1:
 Input: [-4,-1,0,3,10]Output: [0,1,9,16,100]
 Example 2:
 Input: [-7,-3,2,3,11]Output: [4,9,9,49,121]
 Note:
 1 <= A.length <= 10000-10000 <= A[i] <= 10000A is sorted in non-decreasing order.",1
430,stringToIntegerAtoi,"Implement atoi to convert a string to an integer.
 Hint: Carefully consider all possible input cases. If you want a challenge,please do not see below and ask yourself what are the possible input cases.
 Notes:It is intended for this problem to be specified vaguely (ie, no given input specs).You are responsible to gather all the input requirements up front.
 
 Requirements for atoi:
 The function first discards as many whitespace characters as necessary until the firstnon-whitespace character is found. Then, starting from this character, takes an optionalinitial plus or minus sign followed by as many numerical digits as possible, and interpretsthem as a numerical value.
 The string can contain additional characters after those that form the integral number,which are ignored and have no effect on the behavior of this function.
 If the first sequence of non-whitespace characters in str is not a valid integral number,or if no such sequence exists because either str is empty or it contains only whitespacecharacters, no conversion is performed.
 If no valid conversion could be performed, a zero value is returned. If the correct valueis out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648)is returned.",1
431,StringWithoutAAAOrBBB,"Given two integers A and B, return any string S such that:
 S has length A + B and contains exactly A 'a' letters, and exactly B 'b' letters;The substring 'aaa' does not occur in S;The substring 'bbb' does not occur in S.
 Example 1:
 Input: A = 1, B = 2Output: ""abb""Explanation: ""abb"", ""bab"" and ""bba"" are all correct answers.
 Example 2:
 Input: A = 4, B = 1Output: ""aabaa""
 Note:
 0 <= A <= 1000 <= B <= 100It is guaranteed such an S exists for the given A and B.",1
432,strStr,"Implement strStr().
 Returns a pointer to the first occurrence of needle in haystack, or null if needle is not part of haystack.",2
433,subsets,"Given a set of distinct integers, S, return all possible subsets.
 Note:
 Elements in a subset must be in non-descending order.The solution set must not contain duplicate subsets.
 For example,If S = [1,2,3], a solution is:
 [[3],[1],[2],[1,2,3],[1,3],[2,3],[1,2],[]]",2
434,subsets.II,"Given a collection of integers that might contain duplicates, S, return all possible subsets.
 Note:
 Elements in a subset must be in non-descending order.The solution set must not contain duplicate subsets.
 For example,If S = [1,2,2], a solution is:
 [[2],[1],[1,2,2],[2,2],[1,2],[]]",2
435,substringWithConcatenationOfAllWords,"You are given a string, S, and a list of words, L, that are all of the same length.Find all starting indices of substring(s) in S that is a concatenation of each wordin L exactly once and without any intervening characters.
 For example, given:S: ""barfoothefoobarman""L: [""foo"", ""bar""]
 You should return the indices: [0,9].(order does not matter).",2
436,sudokuSolver,"Write a program to solve a Sudoku puzzle by filling the empty cells.
 Empty cells are indicated by the character '.'.
 You may assume that there will be only one unique solution.
 A sudoku puzzle...
 ...and its solution numbers marked in red.",2
437,SummaryRanges,"Given a sorted integer array without duplicates, return the summary of its ranges.
 For example, given [0,1,2,4,5,7], return [""0->2"",""4->5"",""7""].
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",1
438,SumOfBeautyOfAllSubstrings,"The beauty of a string is the difference in frequencies between the most frequent and leastfrequent characters.
 For example, the beauty of ""abaacc"" is 3 - 1 = 2.
 Given a string s, return the sum of beauty of all of its substrings.
 Example 1:
 Input: s = ""aabcb""Output: 5Explanation: The substrings with non-zero beauty are [""aab"",""aabc"",""aabcb"",""abcb"",""bcb""], each withbeauty equal to 1.
 Example 2:
 Input: s = ""aabcbaa""Output: 17
 Constraints:
 1 <= s.length <= 500s consists of only lowercase English letters.",1
439,SumOfDigitsInBaseK,"Given an integer n (in base 10) and a base k, return the sum of the digits of n after converting nfrom base 10 to base k.
 After converting, each digit should be interpreted as a base 10 number, and the sum should bereturned in base 10.
 Example 1:
 Input: n = 34, k = 6Output: 9Explanation: 34 (base 10) expressed in base 6 is 54. 5 + 4 = 9.
 Example 2:
 Input: n = 10, k = 10Output: 1Explanation: n is already in base 10. 1 + 0 = 1.
 Constraints:
 1 <= n <= 1002 <= k <= 10",1
440,SumOfEvenNumbersAfterQueries,"We have an array A of integers, and an array queries of queries.
 For the i-th query val = queries[i][0], index = queries[i][1], we add val to A[index]. Then, theanswer to the i-th query is the sum of the even values of A.
 (Here, the given index = queries[i][1] is a 0-based index, and each query permanently modifies thearray A.)
 Return the answer to all queries. Your answer array should have answer[i] as the answer to thei-th query.
 Example 1:
 Input: A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]Output: [8,6,2,4]Explanation:At the beginning, the array is [1,2,3,4].After adding 1 to A[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.After adding -3 to A[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.After adding -4 to A[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.After adding 2 to A[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.
 Note:
 1 <= A.length <= 10000-10000 <= A[i] <= 100001 <= queries.length <= 10000-10000 <= queries[i][0] <= 100000 <= queries[i][1] < A.length",1
441,SumOfFlooredPairs,"Given an integer array nums, return the sum of floor(nums[i] / nums[j]) for all pairs of indices 0<= i, j < nums.length in the array. Since the answer may be too large, return it modulo 10^9 + 7.
 The floor() function returns the integer part of the division.
 Example 1:
 Input: nums = [2,5,9]Output: 10Explanation:floor(2 / 5) = floor(2 / 9) = floor(5 / 9) = 0floor(2 / 2) = floor(5 / 5) = floor(9 / 9) = 1floor(5 / 2) = 2floor(9 / 2) = 4floor(9 / 5) = 1We calculate the floor of the division for every pair of indices in the array then sum them up.
 Example 2:
 Input: nums = [7,7,7,7,7,7,7]Output: 49
 Constraints:
 1 <= nums.length <= 10^51 <= nums[i] <= 10^5",1
442,SumOfLeftLeaves,"Find the sum of all left leaves in a given binary tree.
 Example:
 3/ \9 20/ \15 7
 There are two left leaves in the binary tree, with values 9 and 15 respectively.Return 24.",1
443,SumOfTwoIntegers,"Calculate the sum of two integers a and b, but you are not allowed to use theoperator + and -.
 Example:Given a = 1 and b = 2, return 3.
 
 Credits:Special thanks to @fujiaozhu for adding this problem and creating all testcases.",1
444,SumOfUniqueElements,"You are given an integer array nums. The unique elements of an array are the elements that appearexactly once in the array.
 Return the sum of all the unique elements of nums.
 Example 1:
 Input: nums = [1,2,3,2]Output: 4Explanation: The unique elements are [1,3], and the sum is 4.
 Example 2:
 Input: nums = [1,1,1,1,1]Output: 0Explanation: There are no unique elements, and the sum is 0.
 Example 3:
 Input: nums = [1,2,3,4,5]Output: 15Explanation: The unique elements are [1,2,3,4,5], and the sum is 15.
 Constraints:
 1 <= nums.length <= 1001 <= nums[i] <= 100",1
445,sumRootToLeafNumber,"Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.An example is the root-to-leaf path 1->2->3 which represents the number 123.
 Find the total sum of all root-to-leaf numbers.
 For example,
 1/ \2 3
 The root-to-leaf path 1->2 represents the number 12.The root-to-leaf path 1->3 represents the number 13.
 Return the sum = 12 + 13 = 25.",1
446,SuperUglyNumber,"Write a program to find the nth super ugly number.
 Super ugly numbers are positive numbers whose all prime factors are in the givenprime listprimes of size k. For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]is the sequence of the first 12 super ugly numbers given primes= [2, 7, 13, 19] of size 4.
 Note:(1) 1 is a super ugly number for any given primes.(2) The given numbers in primes are in ascending order.(3) 0 k â‰¤ 100, 0 n â‰¤ 106, 0 primes[i]
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
447,surroundedRegions,"Given a 2D board containing 'X' and 'O', capture all regions surrounded by 'X'.
 A region is captured by flipping all 'O's into 'X's in that surrounded region.
 For example,
 X X X XX O O XX X O XX O X X
 After running your function, the board should be:
 X X X XX X X XX X X XX O X X",2
448,swapNodesInPairs,"Given a linked list, swap every two adjacent nodes and return its head.
 For example,Given 1->2->3->4, you should return the list as 2->1->4->3.
 Your algorithm should use only constant space. You may not modify the values in the list,only nodes itself can be changed.",1
449,symmetricTree,"Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).
 For example, this binary tree is symmetric:
 1/ \2 2/ \ / \3 4 4 3
 But the following is not:
 1/ \2 2\ \3 3
 Note:Bonus points if you could solve it both recursively and iteratively.
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",2
450,targetSum,"You are given a list of non-negative integers, a1, a2, ..., an, and a target, S.Now you have 2 symbols + and -. For each integer, you should choose one from + and -as its new symbol.
 Find out how many ways to assign symbols to make sum of integers equal to target S.
 For example, given array nums is [1, 1, 1, 1, 1], S is 3.
 There are 5 ways to assign symbols to make the sum of nums be target 3.
 -1+1+1+1+1 = 3+1-1+1+1+1 = 3+1+1-1+1+1 = 3+1+1+1-1+1 = 3+1+1+1+1-1 = 3",1
451,textJustification,"Given an array of words and a length L, format the text such that each line hasexactly L characters and is fully (left and right) justified.
 
 You should pack your words in a greedy approach; that is, pack as many words as you can in each line.Pad extra spaces ' ' when necessary so that each line has exactly L characters.
 Extra spaces between words should be distributed as evenly as possible.If the number of spaces on a line do not divide evenly between words,the empty slots on the left will be assigned more spaces than the slots on the right.
 For the last line of text, it should be left justified and no extra space is inserted between words.
 For example,words: [""This"", ""is"", ""an"", ""example"", ""of"", ""text"", ""justification.""]L: 16.
 Return the formatted lines as:
 [""This is an"",""example of text"",""justification. ""]
 Note: Each word is guaranteed not to exceed L in length.
 
 Corner Cases:
 A line other than the last line might contain only one word. What should you do in this case?In this case, that line should be left-justified.",2
452,TheSkylineProblem,"A city's skyline is the outer contour of the silhouette formed by all the buildingsin that city when viewed from a distance. Now suppose you are given the locations andheight of all the buildings as shown on a cityscape photo (Figure A), write a programto output the skyline formed by these buildings collectively (Figure B).
 ^ ^| || || +-----+ | O-----+| | | | | || | | | | || | +--+------+ | | O------+| | | | | | || +-+--+----+ | +------+ | O-+ | O------+| | | | | | | | | | || | | | | +-+--+ | | | | O--+ â€‰| | | | | | | | | | | || | | | | | | | | | | || | | | | | | | | | | || | | | | | | | | | | |+--+---------+----+---+----+----+---> +--+--------------O---+---------O--->
 https://leetcode.com/static/images/problemset/skyline1.jpghttps://leetcode.com/static/images/problemset/skyline2.jpg
 The geometric information of each building is represented by a triplet of integers [Li, Ri, Hi],where Li and Ri are the x coordinates of the left and right edge of the ith building, respectively,and Hi is its height. It is guaranteed that 0 â‰¤ Li, Ri â‰¤ INT_MAX, 0 , and Ri - Li > 0.You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.
 For instance, the dimensions of all buildings in Figure A are recorded as:[ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .
 The output is a list of ""key points"" (red dots in Figure B) in the format of[ [x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline.A key point is the left endpoint of a horizontal line segment.
 Note that the last key point, where the rightmost building ends, is merely used to markthe termination of the skyline, and always has zero height. Also, the ground in betweenany two adjacent buildings should be considered part of the skyline contour.
 For instance, the skyline in Figure B should be represented as:[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ].
 Notes:
 - The number of buildings in any input list is guaranteed to be in the range [0, 10000].- The input list is already sorted in ascending order by the left x position Li.- The output list must be sorted by the x position.- There must be no consecutive horizontal lines of equal height in the output skyline.For instance, [...[2 3], [4 5], [7 5], [11 5], [12 7]...] is not acceptable;the three lines of height 5 should be merged into one in the final output as such:[...[2 3], [4 5], [12 7], ...]
 Credits: Special thanks to @stellari for adding this problem,creating these two awesome images and all test cases.",2
453,ThirdMaximumNumber,"Given a non-empty array of integers, return the third maximum number in this array.If it does not exist, return the maximum number. The time complexity must be in O(n).
 Example 1:
 Input: [3, 2, 1]
 Output: 1
 Explanation: The third maximum is 1.
 Example 2:
 Input: [1, 2]
 Output: 2
 Explanation: The third maximum does not exist, so the maximum (2) is returnedinstead.
 Example 3:
 Input: [2, 2, 3, 1]
 Output: 1
 Explanation: Note that the third maximum here means the third maximum distinctnumber.Both numbers with value 2 are both considered as second maximum.",1
454,ThousandSeparator,"Given an integer n, add a dot (""."") as the thousands separator and return it in string format.
 Example 1:
 Input: n = 987Output: ""987""
 Example 2:
 Input: n = 1234Output: ""1.234""
 Example 3:
 Input: n = 123456789Output: ""123.456.789""
 Example 4:
 Input: n = 0Output: ""0""
 Constraints:
 0 <= n < 2^31",1
455,ThreeConsecutiveOdds,"Given an integer array arr, return true if there are three consecutive odd numbers in the array.Otherwise, return false.
 Example 1:
 Input: arr = [2,6,4,1]Output: falseExplanation: There are no three consecutive odds.
 Example 2:
 Input: arr = [1,2,34,3,4,5,7,23,12]Output: trueExplanation: [5,7,23] are three consecutive odds.
 Constraints:
 1 <= arr.length <= 10001 <= arr[i] <= 1000",1
456,TimeBasedKeyValueStore,"Create a timebased key-value store class Timeap, that supports two operations.
 1. set(string key, string value, int timestamp)
 Stores the key and value, along with the given timestamp.
 2. get(string key, int timestamp)
 Returns a value such that set(key, value, timestamp_prev) was called previously, withtimestamp_prev <= timestamp.If there are multiple such values, it returns the one with the largest timestamp_prev.If there are no values, it returns the empty string ("""").
 Example 1:
 Input: inputs = [""Timeap"",""set"",""get"",""get"",""set"",""get"",""get""], inputs =[[],[""foo"",""bar"",1],[""foo"",1],[""foo"",3],[""foo"",""bar2"",4],[""foo"",4],[""foo"",5]]Output: [null,null,""bar"",""bar"",null,""bar2"",""bar2""]Explanation:Timeap kv;kv.set(""foo"", ""bar"", 1); // store the key ""foo"" and value ""bar"" along with timestamp = 1kv.get(""foo"", 1); // output ""bar""kv.get(""foo"", 3); // output ""bar"" since there is no value corresponding to foo at timestamp 3 andtimestamp 2, then the only value is at timestamp 1 ie ""bar""kv.set(""foo"", ""bar2"", 4);kv.get(""foo"", 4); // output ""bar2""kv.get(""foo"", 5); //output ""bar2""
 Example 2:
 Input: inputs = [""Timeap"",""set"",""set"",""get"",""get"",""get"",""get"",""get""], inputs =[[],[""love"",""high"",10],[""love"",""low"",20],[""love"",5],[""love"",10],[""love"",15],[""love"",20],[""love"",25]]Output: [null,null,null,"""",""high"",""high"",""low"",""low""]
 Note:
 All key/value strings are lowercase.All key/value strings have length in the range [1, 100]The timestamps for all Timeap.set operations are strictly increasing.1 <= timestamp <= 107Timeap.set and Timeap.get functions will be called a total of 120000 times (combined) pertest case.",1
457,TimeNeededToInformAllEmployees,"A company has n employees with a unique ID for each employee from 0 to n - 1.The head of the company has is the one with headID.
 Each employee has one direct manager given in the manager array where manager[i] isthe direct manager of the i-th employee, manager[headID] = -1. Also it's guaranteedthat the subordination relationships have a tree structure.
 The head of the company wants to inform all the employees of the company of an urgentpiece of news. He will inform his direct subordinates and they will inform theirsubordinates and so on until all employees know about the urgent news.
 The i-th employee needs informTime[i] minutes to inform all of his direct subordinates(i.e After informTime[i] minutes, all his direct subordinates can start spreading the news).
 Return the number of minutes needed to inform all the employees about the urgent news.
 Example:
 Given: n = 1, headID = 0, manager = [-1], informTime = [0]Return: 0
 Given: n = 7, headID = 6, manager = [1,2,3,4,5,6,-1], informTime = [0,6,5,4,3,2,1]Return: 21",1
458,topKFrequentElements,"Given a non-empty array of integers, return the k most frequent elements.
 For example,Given [1,1,1,2,2,3] and k = 2, return [1,2].
 Note:You may assume k is always valid, 1 â‰¤ k â‰¤ number of unique elements.Your algorithm's time complexity must be better than O(n log n), where n is thearray's size.",1
459,totalHammingDistance,"The Hamming distance between two integers is the number of positions at which thecorresponding bits are different.
 Now your job is to find the total Hamming distance between all pairs of the givennumbers.
 Example:Input: 4, 14, 2
 Output: 6
 Explanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (justshowing the four bits relevant in this case). So the answer will be:HammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.
 Note:Elements of the given array are in the range of 0 to 10^9Length of the array will not exceed 10^4.",1
460,trappingRainWater,"Given n non-negative integers representing an elevation map where the width of each bar is 1,compute how much water it is able to trap after raining.
 For example,Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.
 ^|3 | +--+| | |2 | +--+xxxxxxxxx| +--+xx+--+| | |xxxxxxxxx| | |xx| |1 | +--+xxx| +--+xxx+--+ | +--+ +--+| | |xxx| | |xxx| | | | | | |0 +---+--+---+--+--+---+--+--+--+--+--+--+----->0 1 0 2 1 0 1 3 2 1 2 1
 The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case,6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!",1
461,TreeOfCoprimes,"There is a tree (i.e., a connected, undirected graph that has no cycles) consisting of n nodesnumbered from 0 to n - 1 and exactly n - 1 edges. Each node has a value associated with it, and theroot of the tree is node 0.
 To represent this tree, you are given an integer array nums and a 2D array edges. Each nums[i]represents the i^th node's value, and each edges[j] = [uj, vj] represents an edge between nodes ujand vj in the tree.
 Two values x and y are coprime if gcd(x, y) == 1 where gcd(x, y) is the greatest common divisor ofx and y.
 An ancestor of a node i is any other node on the shortest path from node i to the root. A node isnot considered an ancestor of itself.
 Return an array ans of size n, where ans[i] is the closest ancestor to node i such that nums[i] andnums[ans[i]] are coprime, or -1 if there is no such ancestor.
 Example 1:
 Input: nums = [2,3,3,2], edges = [[0,1],[1,2],[1,3]]Output: [-1,0,0,1]Explanation: In the above figure, each node's value is in parentheses.- Node 0 has no coprime ancestors.- Node 1 has only one ancestor, node 0. Their values are coprime (gcd(2,3) == 1).- Node 2 has two ancestors, nodes 1 and 0. Node 1's value is not coprime (gcd(3,3) == 3), but node0'svalue is (gcd(2,3) == 1), so node 0 is the closest valid ancestor.- Node 3 has two ancestors, nodes 1 and 0. It is coprime with node 1 (gcd(3,2) == 1), so node 1 isitsclosest valid ancestor.
 Example 2:
 Input: nums = [5,6,10,2,3,6,15], edges = [[0,1],[0,2],[1,3],[1,4],[2,5],[2,6]]Output: [-1,0,-1,0,0,0,-1]
 Constraints:
 nums.length == n1 <= nums[i] <= 501 <= n <= 10^5edges.length == n - 1edges[j].length == 20 <= uj, vj < nuj != vj",2
462,triangle,"Given a triangle, find the minimum path sum from top to bottom.Each step you may move to adjacent numbers on the row below.
 For example, given the following triangle
 [[2],[3,4],[6,5,7],[4,1,8,3]]
 The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).
 Note:Bonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.",2
463,TriplesWithBitwiseAndEqualToZero,"Given an array of integers A, find the number of triples of indices (i, j, k) such that:
 0 <= i < A.length0 <= j < A.length0 <= k < A.lengthA[i] & A[j] & A[k] == 0, where & represents the bitwise-AND operator.
 Example 1:
 Input: [2,1,3]Output: 12Explanation: We could choose the following i, j, k triples:(i=0, j=0, k=1) : 2 & 2 & 1(i=0, j=1, k=0) : 2 & 1 & 2(i=0, j=1, k=1) : 2 & 1 & 1(i=0, j=1, k=2) : 2 & 1 & 3(i=0, j=2, k=1) : 2 & 3 & 1(i=1, j=0, k=0) : 1 & 2 & 2(i=1, j=0, k=1) : 1 & 2 & 1(i=1, j=0, k=2) : 1 & 2 & 3(i=1, j=1, k=0) : 1 & 1 & 2(i=1, j=2, k=0) : 1 & 3 & 2(i=2, j=0, k=1) : 3 & 2 & 1(i=2, j=1, k=0) : 3 & 1 & 2
 Note:
 1 <= A.length <= 10000 <= A[i] < 2^16",1
464,TruncateSentence,"A sentence is a list of words that are separated by a single space with no leading or trailingspaces. Each of the words consists of only uppercase and lowercase English letters (no punctuation).
 For example, ""Hello World"", ""HELLO"", and ""hello world hello world"" are all sentences.
 You are given a sentence sâ€‹â€‹â€‹â€‹â€‹â€‹ and an integer kâ€‹â€‹â€‹â€‹â€‹â€‹. You want to truncate sâ€‹â€‹â€‹â€‹â€‹â€‹ such that itcontains only the first kâ€‹â€‹â€‹â€‹â€‹â€‹ words. Return sâ€‹â€‹â€‹â€‹â€‹â€‹ after truncating it.
 Example 1:
 Input: s = ""Hello how are you Contestant"", k = 4Output: ""Hello how are you""Explanation:The words in s are [""Hello"", ""how"" ""are"", ""you"", ""Contestant""].The first 4 words are [""Hello"", ""how"", ""are"", ""you""].Hence, you should return ""Hello how are you"".
 Example 2:
 Input: s = ""What is the solution to this problem"", k = 4Output: ""What is the solution""Explanation:The words in s are [""What"", ""is"" ""the"", ""solution"", ""to"", ""this"", ""problem""].The first 4 words are [""What"", ""is"", ""the"", ""solution""].Hence, you should return ""What is the solution"".
 Example 3:
 Input: s = ""chopper is not a tanuki"", k = 5Output: ""chopper is not a tanuki""
 Constraints:
 1 <= s.length <= 500k is in the range [1, the number of words in s].s consist of only lowercase and uppercase English letters and spaces.The words in s are separated by a single space.There are no leading or trailing spaces.",1
465,TupleWithSameProduct,"Given an array nums of distinct positive integers, return the number of tuples (a, b, c, d) suchthat a * b = c * d where a, b, c, and d are elements of nums, and a != b != c != d.
 Example 1:
 Input: nums = [2,3,4,6]Output: 8Explanation: There are 8 valid tuples:(2,6,3,4) , (2,6,4,3) , (6,2,3,4) , (6,2,4,3)(3,4,2,6) , (4,3,2,6) , (3,4,6,2) , (4,3,6,2)
 Example 2:
 Input: nums = [1,2,4,5,10]Output: 16Explanation: There are 16 valids tuples:(1,10,2,5) , (1,10,5,2) , (10,1,2,5) , (10,1,5,2)(2,5,1,10) , (2,5,10,1) , (5,2,1,10) , (5,2,10,1)(2,10,4,5) , (2,10,5,4) , (10,2,4,5) , (10,2,4,5)(4,5,2,10) , (4,5,10,2) , (5,4,2,10) , (5,4,10,2)
 Example 3:
 Input: nums = [2,3,4,6,8,12]Output: 40
 Example 4:
 Input: nums = [2,3,5,7]Output: 0
 Constraints:
 1 <= nums.length <= 10001 <= nums[i] <= 10^4All elements in nums are distinct.",1
466,MakeTwoArraysEqualByReversingSubArrays,"Given two integer arrays of equal length target and arr.
 In one step, you can select any non-empty sub-array of arr and reverse it. You are allowed to makeany number of steps.
 Return True if you can make arr equal to target, or False otherwise.
 Example 1:
 Input: target = [1,2,3,4], arr = [2,4,1,3]Output: trueExplanation: You can follow the next steps to convert arr to target:1- Reverse sub-array [2,4,1], arr becomes [1,4,2,3]2- Reverse sub-array [4,2], arr becomes [1,2,4,3]3- Reverse sub-array [4,3], arr becomes [1,2,3,4]There are multiple ways to convert arr to target, this is not the only way to do so.
 Example 2:
 Input: target = [7], arr = [7]Output: trueExplanation: arr is equal to target without any reverses.
 Example 3:
 Input: target = [1,12], arr = [12,1]Output: true
 Example 4:
 Input: target = [3,7,9], arr = [3,7,11]Output: falseExplanation: arr doesn't have value 9 and it can never be converted to target.
 Example 5:
 Input: target = [1,1,1,1,1], arr = [1,1,1,1,1]Output: true
 Constraints:
 target.length == arr.length1 <= target.length <= 10001 <= target[i] <= 10001 <= arr[i] <= 1000",1
467,TwoCityScheduling,"There are 2N people a company is planning to interview. The cost of flying the i-th person to cityA is costs[i][0], and the cost of flying the i-th person to city B is costs[i][1].
 Return the minimum cost to fly every person to a city such that exactly N people arrive in eachcity.
 Example 1:
 Input: [[10,20],[30,200],[400,50],[30,20]]Output: 110Explanation:The first person goes to city A for a cost of 10.The second person goes to city A for a cost of 30.The third person goes to city B for a cost of 50.The fourth person goes to city B for a cost of 20.
 The total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.
 Note:
 1 <= costs.length <= 100It is guaranteed that costs.length is even.1 <= costs[i][0], costs[i][1] <= 1000",1
468,twoSum,"Given an array of integers, find two numbers such that they add up to a specific target number.
 The function twoSum should return indices of the two numbers such that they add up to the target,where index1 must be less than index2. Please note that your returned answers (both index1 and index2)are not zero-based.
 You may assume that each input would have exactly one solution.
 Input: numbers={2, 7, 11, 15}, target=9Output: index1=1, index2=2",1
469,twoSum.II,"Given an array of integers that is already sorted in ascending order,find two numbers such that they add up to a specific target number.
 The function twoSum should return indices of the two numbers such that they add up to the target,where index1 must be less than index2. Please note that your returned answers (both index1 and index2)are not zero-based.
 You may assume that each input would have exactly one solution.
 Input: numbers={2, 7, 11, 15}, target=9Output: index1=1, index2=2",1
470,twoSum.III,"Design and implement a TwoSum class. It should support the following operations: add and find.
 add - Add the number to an internal data structure.find - Find if there exists any pair of numbers which sum is equal to the value.
 For example,
 add(1); add(3); add(5);find(4) -> truefind(7) -> false",1
471,UglyNumber,"Write a program to check whether a given number is an ugly number.
 Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. Forexample, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7.
 Note that 1 is typically treated as an ugly number.
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",1
472,UglyNumber.II,"Write a program to find the n-th ugly number.
 Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. Forexample, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
 Note that 1 is typically treated as an ugly number.
 The naive approach is to call isUgly for every number until you reach the nth one.Most numbers are not ugly. Try to focus your effort on generating only the ugly ones.
 An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.
 The key is how to maintain the order of the ugly numbers. Try a similar approachof merging from three sorted lists: L1, L2, and L3.
 Assume you have Uk, the kth ugly number. Then Uk+1 must be Min(L1 * 2, L2 * 3, L3
 Credits:Special thanks to @jianchao.li.fighter for adding this problem and creatingall test cases.",2
473,uniqueBinarySearchTrees,"Given n, how many structurally unique BST's (binary search trees) that store values 1...n?
 For example,Given n = 3, there are a total of 5 unique BST's.
 1 3 3 2 1\ / / / \ \3 2 1 1 3 2",1
474,uniqueBinarySearchTrees.II,"Given n, generate all structurally unique BST's (binary search trees) that store values 1...n.
 For example,Given n = 3, your program should return all 5 unique BST's shown below.
 1 3 3 2 1\ / / / \ \3 2 1 1 3 2
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",2
475,UniqueEmailAddresses,"Every email consists of a local name and a domain name, separated by the @ sign.
 For example, in alice@leetcode.com, alice is the local name, and leetcode.com is the domain name.
 Besides lowercase letters, these emails may contain '.'s or '+'s.
 If you add periods ('.') between some characters in the local name part of an email address, mailsent there will be forwarded to the same address without dots in the local name. For example,""alice.z@leetcode.com"" and ""alicez@leetcode.com"" forward to the same email address. (Note thatthis rule does not apply for domain names.)
 If you add a plus ('+') in the local name, everything after the first plus sign will be ignored.This allows certain emails to be filtered, for example m.y+name@email.com will be forwarded tomy@email.com. (Again, this rule does not apply for domain names.)
 It is possible to use both of these rules at the same time.
 Given a list of emails, we send one email to each address in the list. How many differentaddresses actually receive mails?
 Example 1:
 Input:[""test.email+alex@leetcode.com"",""test.e.mail+bob.cathy@leetcode.com"",""testemail+david@lee.tcode.com""]Output: 2Explanation: ""testemail@leetcode.com"" and ""testemail@lee.tcode.com"" actually receive mails
 Note:
 1 <= emails[i].length <= 1001 <= emails.length <= 100Each emails[i] contains exactly one '@' character.All local and domain names are non-empty.Local names do not start with a '+' character.",1
476,UniqueMorseCodeWords,"International orse Code defines a standard encoding where each letter is mapped toa series of dots and dashes, as follows: ""a"" maps to "".-"", ""b"" maps to ""-..."", ""c""maps to ""-.-."", and so on.
 For convenience, the full table for the 26 letters of the English alphabet is givenbelow:
 
 ["".-"",""-..."",""-.-."",""-.."",""."",""..-."",""--."",""...."","".."","".---"",""-.-"","".-.."",""--"",""-."",""---"","".--."",""--.-"","".-."",""..."",""-"",""..-"",""...-"","".--"",""-..-"",""-.--"",""--..""]
 Now, given a list of words, each word can be written as a concatenation of the orsecode of each letter. For example, ""cab"" can be written as ""-.-.-....-"", (which isthe concatenation ""-.-."" + ""-..."" + "".-""). We'll call such a concatenation, thetransformation of a word.
 Return the number of different transformations among all words we have.
 
 Example:Input: words = [""gin"", ""zen"", ""gig"", ""msg""]Output: 2Explanation:The transformation of each word is:""gin"" -> ""--...-.""""zen"" -> ""--...-.""""gig"" -> ""--...--.""""msg"" -> ""--...--.""
 There are 2 different transformations, ""--...-."" and ""--...--."".
 
 
 
 Note:
 
 The length of words will be at most 100.Each words[i] will have length in range [1, 12].words[i] will only consist of lowercase letters.",1
477,Unique-Number-of-Occurrences,"Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.
 
 
 Example 1:
 Input: arr = [1,2,2,1,1,3]Output: trueExplanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.Example 2:
 Input: arr = [1,2]Output: falseExample 3:
 Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]Output: true
 
 Constraints:
 1 <= arr.length <= 1000-1000 <= arr[i] <= 1000",1
478,uniquePaths,"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).
 The robot can only move either down or right at any point in time. The robot is trying to reachthe bottom-right corner of the grid (marked 'Finish' in the diagram below).
 
 start â€‰+---------+----+----+----+----+----+|----| | | | | | ||----| | | | | | |+----------------------------------+| | | | | | | || | | | | | | |+----------------------------------+| | | | | | |----|| | | | | | |----|+----+----+----+----+----+---------+finish
 
 How many possible unique paths are there?
 Above is a 3 x 7 grid. How many possible unique paths are there?
 Note: m and n will be at most 100.",2
479,uniquePaths.II,"Follow up for ""Unique Paths"":
 Now consider if some obstacles are added to the grids. How many unique paths would there be?
 An obstacle and empty space is marked as 1 and 0 respectively in the grid.
 For example,There is one obstacle in the middle of a 3x3 grid as illustrated below.
 [[0,0,0],[0,1,0],[0,0,0]]
 The total number of unique paths is 2.
 Note: m and n will be at most 100.",1
480,UniquePaths.III,"On a 2-dimensional grid, there are 4 types of squares:
 1 represents the starting square. There is exactly one starting square.2 represents the ending square. There is exactly one ending square.0 represents empty squares we can walk over.-1 represents obstacles that we cannot walk over.
 Return the number of 4-directional walks from the starting square to the ending square, that walkover every non-obstacle square exactly once.
 Example 1:
 Input: [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]Output: 2Explanation: We have the following two paths:1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)
 Example 2:
 Input: [[1,0,0,0],[0,0,0,0],[0,0,0,2]]Output: 4Explanation: We have the following four paths:1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)
 Example 3:
 Input: [[0,1],[2,0]]Output: 0Explanation:There is no path that walks over every empty square exactly once.Note that the starting and ending square can be anywhere in the grid.
 Note:
 1 <= grid.length * grid[0].length <= 20",1
481,UTF8Validation,"A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:
 For 1-byte character, the first bit is a 0, followed by its unicode code.For n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed byn-1 bytes with most significant 2 bits being 10.
 This is how the UTF-8 encoding would work:
 Char. number range | UTF-8 octet sequence--------------------+---------------------------------------------0000 0000-0000 007F | 0xxxxxxx0000 0080-0000 07FF | 110xxxxx 10xxxxxx0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
 Given an array of integers representing the data, return whether it is a valid utf-8encoding.
 Note:The input is an array of integers. Only the least significant 8 bits of each integeris used to store the data. This means each integer represents only 1 byte of data.
 Example 1:
 data = [197, 130, 1], which represents the octet sequence: 11000101 1000001000000001.
 Return true.It is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.
 Example 2:
 data = [235, 140, 4], which represented the octet sequence: 11101011 1000110000000100.
 Return false.The first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.The next byte is a continuation byte which starts with 10 and that's correct.But the second continuation byte does not start with 10, so it is invalid.",1
482,validateBinarySearchTree,"Given a binary tree, determine if it is a valid binary search tree (BST).
 Assume a BST is defined as follows:
 The left subtree of a node contains only nodes with keys less than the node's key.The right subtree of a node contains only nodes with keys greater than the node's key.Both the left and right subtrees must also be binary search trees.
 confused what ""{1,#,2,3}"" means? > read more on how binary tree is serialized on OJ.
 OJ's Binary Tree Serialization:
 The serialization of a binary tree follows a level order traversal, where '#' signifiesa path terminator where no node exists below.
 Here's an example:
 1/ \2 3/4\5
 The above binary tree is serialized as ""{1,2,3,#,#,4,#,#,5}"".",2
483,validNumber,"Validate if a given string is numeric.
 Some examples:""0"" => true"" 0.1 "" => true""abc"" => false""1 a"" => false""2e10"" => true
 Note: It is intended for the problem statement to be ambiguous.You should gather all requirements up front before implementing one.",2
484,validPalindrome,"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
 For example,""A man, a plan, a canal: Panama"" is a palindrome.""race a car"" is not a palindrome.
 Note:Have you consider that the string might be empty? This is a good question to ask during an interview.
 For the purpose of this problem, we define empty string as valid palindrome.",1
485,validParentheses,"Given a string containing just the characters '(', ')', '{', '}', '[' and ']',determine if the input string is valid.
 The brackets must close in the correct order, ""()"" and ""()[]{}"" are all validbut ""(]"" and ""([)]"" are not.",1
486,ValidPerfectSquare,"Given a positive integer num, write a function which returns True if num is aperfect square else False.
 
 Note: Do not use any built-in library function such as sqrt.
 
 Example 1:
 Input: 16Returns: True
 
 
 Example 2:
 Input: 14Returns: False
 
 
 Credits:Special thanks to @elmirap for adding this problem and creating all testcases.",1
487,validSudoku,"Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.
 The Sudoku board could be partially filled, where empty cells are filled with the character '.'.
 A partially filled sudoku which is valid.
 Note:> A valid Sudoku board (partially filled) is not necessarily solvable.Only the filled cells need to be validated.",1
488,VerifyPreorderSerializationOfABinaryTree,"One way to serialize a binary tree is to use pre-order traversal. When we encountera non-null node, we record the node's value. If it is a null node, we record using asentinel value such as #.
 _9_/ \3 2/ \ / \4 1 # 6/ \ / \ / \# # # # # #
 For example, the above binary tree can be serialized to the string""9,3,4,#,#,1,#,#,2,#,6,#,#"", where # represents a null node.
 Given a string of comma separated values, verify whether it is a correct preordertraversal serialization of a binary tree. Find an algorithm without reconstructingthe tree.
 Each comma separated value in the string must be either an integer or a character'#' representing null pointer.
 You may assume that the input format is always valid, for example it could nevercontain two consecutive commas such as ""1,,3"".
 Example 1:""9,3,4,#,#,1,#,#,2,#,6,#,#""Return trueExample 2:""1,#""Return falseExample 3:""9,#,#,1""Return false
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
489,VerticalOrderTraversalOfABinaryTree,"Given a binary tree, return the vertical order traversal of its nodes values.
 For each node at position (X, Y), its left and right children respectively will be at positions(X-1, Y-1) and (X+1, Y-1).
 Running a vertical line from X = -infinity to X = +infinity, whenever the vertical line touchessome nodes, we report the values of the nodes in order from top to bottom (decreasing Ycoordinates).
 If two nodes have the same position, then the value of the node that is reported first is the valuethat is smaller.
 Return an list of non-empty reports in order of X coordinate. Every report will have a list ofvalues of nodes.
 Example 1:
 
 +--++----+3 +----+| +--+ || |+--+ +--+|9 | +---+20+---++--+ | +--+ || |+--+ +--+|15| |7 |+--+ +--+
 
 Input: [3,9,20,null,null,15,7]Output: [[9],[3,15],[20],[7]]Explanation:Without loss of generality, we can assume the root node is at position (0, 0):Then, the node with value 9 occurs at position (-1, -1);The nodes with values 3 and 15 occur at positions (0, 0) and (0, -2);The node with value 20 occurs at position (1, -1);The node with value 7 occurs at position (2, -2).
 Example 2:
 
 +-+|1|+-----------+| |+++ +++|2| |3|+--------+ +--------+| | | |+++ ++--++ +++|4| |5||6| |7|+-+ +----+ +-+
 
 Input: [1,2,3,4,5,6,7]Output: [[4],[2],[1,5,6],[3],[7]]Explanation:The node with value 5 and the node with value 6 have the same position according to the givenscheme.However, in the report ""[1,5,6]"", the node value of 5 comes first since 5 is smaller than 6.
 Note:
 The tree will have between 1 and 1000 nodes.Each node's value will be between 0 and 1000.",2
490,VideoStitching,"You are given a series of video clips from a sporting event that lasted T seconds. These videoclips can be overlapping with each other and have varied lengths.
 Each video clip clips[i] is an interval: it starts at time clips[i][0] and ends at timeclips[i][1]. We can cut these clips into segments freely: for example, a clip [0, 7] can be cutinto segments [0, 1] + [1, 3] + [3, 7].
 Return the minimum number of clips needed so that we can cut the clips into segments that cover theentire sporting event ([0, T]). If the task is impossible, return -1.
 Example 1:
 Input: clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], T = 10Output: 3Explanation:We take the clips [0,2], [8,10], [1,9]; a total of 3 clips.Then, we can reconstruct the sporting event as follows:We cut [1,9] into segments [1,2] + [2,8] + [8,9].Now we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].
 Example 2:
 Input: clips = [[0,1],[1,2]], T = 5Output: -1Explanation:We can't cover [0,5] with only [0,1] and [0,2].
 Example 3:
 Input: clips =[[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]],T = 9Output: 3Explanation:We can take clips [0,4], [4,7], and [6,9].
 Example 4:
 Input: clips = [[0,4],[2,8]], T = 5Output: 2Explanation:Notice you can have extra video after the event ends.
 Note:
 1 <= clips.length <= 1000 <= clips[i][0], clips[i][1] <= 1000 <= T <= 100",2
491,WaysToSplitArrayIntoThreeSubarrays,"A split of an integer array is good if:
 The array is split into three non-empty contiguous subarrays - named left, mid, rightrespectively from left to right.The sum of the elements in left is less than or equal to the sum of the elements in mid,and the sum of the elements in mid is less than or equal to the sum of the elements in right.
 Given nums, an array of non-negative integers, return the number of good ways to split nums. As thenumber may be too large, return it modulo 10^9 + 7.
 Example 1:
 Input: nums = [1,1,1]Output: 1Explanation: The only good way to split nums is [1] [1] [1].
 Example 2:
 Input: nums = [1,2,2,2,5,0]Output: 3Explanation: There are three good ways of splitting nums:[1] [2] [2,2,5,0][1] [2,2] [2,5,0][1,2] [2,2] [5,0]
 Example 3:
 Input: nums = [3,2,1]Output: 0Explanation: There is no good way to split nums.
 Constraints:
 3 <= nums.length <= 10^50 <= nums[i] <= 10^4",2
492,WiggleSort.II,"Given an unsorted array nums, reorder it such thatnums[0] nums[2] .
 Example:(1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6].(2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].
 Note:You may assume all input has valid answer.
 Follow Up:Can you do it in O(n) time and/or in-place with O(1) extra space?
 Credits:Special thanks to @dietpepsi for adding this problem and creating all testcases.",1
493,wiggleSubsequence,"A sequence of numbers is called a wiggle sequence if the differences betweensuccessive numbers strictly alternate between positive and negative. The firstdifference (if one exists) may be either positive or negative. A sequence with fewerthan two elements is trivially a wiggle sequence.
 For example, [1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3)are alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] arenot wiggle sequences, the first because its first two differences are positive andthe second because its last difference is zero.
 Given a sequence of integers, return the length of the longest subsequence that is awiggle sequence. A subsequence is obtained by deleting some number of elements(eventually, also zero) from the original sequence, leaving the remaining elements intheir original order.
 Examples:Input: [1,7,4,9,2,5]Output: 6The entire sequence is a wiggle sequence.
 Input: [1,17,5,10,13,15,10,5,16,8]Output: 7There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].
 Input: [1,2,3,4,5,6,7,8,9]Output: 2
 Follow up:Can you do it in O(n) time?",1
494,wildcardMatching,"Implement wildcard pattern matching with support for '?' and '*'.
 '?' Matches any single character.'*' Matches any sequence of characters (including the empty sequence).
 The matching should cover the entire input string (not partial).
 The function prototype should be:bool isMatch(const char *s, const char *p)
 Some examples:isMatch(""aa"",""a"") â†’ falseisMatch(""aa"",""aa"") â†’ trueisMatch(""aaa"",""aa"") â†’ falseisMatch(""aa"", ""*"") â†’ trueisMatch(""aa"", ""a*"") â†’ trueisMatch(""ab"", ""?*"") â†’ trueisMatch(""aab"", ""c*a*b"") â†’ false",2
495,wordBreak,"Given a string s and a dictionary of words dict, determine if s can be segmentedinto a space-separated sequence of one or more dictionary words.
 For example, givens = ""leetcode"",dict = [""leet"", ""code""].
 Return true because ""leetcode"" can be segmented as ""leet code"".",1
496,wordBreak.II,"Given a string s and a dictionary of words dict, add spaces in s to construct a sentencewhere each word is a valid dictionary word.
 Return all such possible sentences.
 For example, givens = ""catsanddog"",dict = [""cat"", ""cats"", ""and"", ""sand"", ""dog""].
 A solution is [""cats and dog"", ""cat sand dog""].",2
497,wordLadder,"Given two words (start and end), and a dictionary, find the length of shortesttransformation sequence from start to end, such that:
 Only one letter can be changed at a timeEach intermediate word must exist in the dictionary
 For example,
 Given:start = ""hit""end = ""cog""dict = [""hot"",""dot"",""dog"",""lot"",""log""]
 As one shortest transformation is ""hit"" -> ""hot"" -> ""dot"" -> ""dog"" -> ""cog"",return its length 5.
 Note:
 Return 0 if there is no such transformation sequence.All words have the same length.All words contain only lowercase alphabetic characters.",2
498,wordLadder.II,"Given two words (start and end), and a dictionary, find all shortest transformationsequence(s) from start to end, such that:
 Only one letter can be changed at a timeEach intermediate word must exist in the dictionary
 For example,
 Given:start = ""hit""end = ""cog""dict = [""hot"",""dot"",""dog"",""lot"",""log""]
 Return
 [[""hit"",""hot"",""dot"",""dog"",""cog""],[""hit"",""hot"",""lot"",""log"",""cog""]]
 Note:
 All words have the same length.All words contain only lowercase alphabetic characters.",2
499,WordPattern,"Given a pattern and a string str, find if str follows the same pattern.Here follow means a full match, such that there is a bijection between a letter inpattern and a non-empty word in str.
 Examples:
 pattern = ""abba"", str = ""dog cat cat dog"" should return true.pattern = ""abba"", str = ""dog cat cat fish"" should return false.pattern = ""aaaa"", str = ""dog cat cat dog"" should return false.pattern = ""abba"", str = ""dog dog dog dog"" should return false.
 Notes:You may assume pattern contains only lowercase letters, and str contains lowercaseletters separated by a single space.
 Credits:Special thanks to @minglotus6 for adding this problem and creating all testcases.",1
500,wordSearch,"Given a 2D board and a word, find if the word exists in the grid.
 The word can be constructed from letters of sequentially adjacent cell,where ""adjacent"" cells are those horizontally or vertically neighboring.The same letter cell may not be used more than once.
 For example,Given board =
 [[""ABCE""],[""SFCS""],[""ADEE""]]
 word = ""ABCCED"", -> returns true,word = ""SEE"", -> returns true,word = ""ABCB"", -> returns false.",2
501,wordSearch.II,"Given a 2D board and a list of words from the dictionary, find all words in the board.
 Each word must be constructed from letters of sequentially adjacent cell, where ""adjacent""cells are those horizontally or vertically neighboring. The same letter cell may not be usedmore than once in a word.
 For example,Given words = [""oath"",""pea"",""eat"",""rain""] and board =
 [['o','a','a','n'],['e','t','a','e'],['i','h','k','r'],['i','f','l','v']]
 Return [""eat"",""oath""].
 Note:You may assume that all inputs are consist of lowercase letters a-z.
 click to show hint.
 You would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?
 If the current candidate does not exist in all words' prefix, you could stop backtracking immediately.What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not?How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem:Implement Trie (Prefix Tree) first.",2
502,zigZagConversion,"The string ""PAYPALISHIRING"" is written in a zigzag pattern on a given number of rows like this:(you may want to display this pattern in a fixed font for better legibility)
 P A H NA P L S I I GY I R
 And then read line by line: ""PAHNAPLSIIGYIR""
 Write the code that will take a string and make this conversion given a number of rows:
 string convert(string text, int nRows);
 convert(""PAYPALISHIRING"", 3) should return ""PAHNAPLSIIGYIR"".",1